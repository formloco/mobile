{"version":3,"sources":["webpack:///src/app/pipe/truncate-straight.pipe.ts","webpack:///src/app/component/admin/email-edit/email-edit.component.html","webpack:///src/app/component/admin/email-edit/email-edit.component.ts","webpack:///src/app/service/email.service.ts","webpack:///src/app/component/forms/vehicle-inspection/state/vehicle-inspection-state.model.ts","webpack:///src/app/component/corrective-action/state/corrective-action.state.ts","webpack:///src/app/component/admin/signup/signup.component.ts","webpack:///src/app/component/admin/signup/signup.component.html","webpack:///src/app/service/notification.service.ts","webpack:///src/app/service/error.service.ts","webpack:///src/app/service/transform-run.service.ts","webpack:///src/app/component/comment/bottom-sheet-comment/bottom-sheet-comment.component.ts","webpack:///src/app/component/comment/bottom-sheet-comment/bottom-sheet-comment.component.html","webpack:///src/app/service/app.service.ts","webpack:///src/app/service/speech-recognition.service.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-fire-extinguisher/worksite-fire-extinguisher.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-fire-extinguisher/worksite-fire-extinguisher.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-header/worksite-safety-header.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-header/worksite-safety-header.component.html","webpack:///src/app/service/auth.service.ts","webpack:///src/app/component/corrective-action/corrective-action.component.html","webpack:///src/app/component/corrective-action/corrective-action.component.ts","webpack:///src/app/component/camera/camera.component.html","webpack:///src/app/component/camera/camera.component.ts","webpack:///src/app/state/app.state.ts","webpack:///src/app/component/admin/labels/labels.component.ts","webpack:///src/app/component/admin/labels/labels.component.html","webpack:///src/app/service/form.service.ts","webpack:///src/app/component/forms/spot-check-safety/hazard-identification-control/hazard-identification-control.component.ts","webpack:///src/app/component/forms/spot-check-safety/hazard-identification-control/hazard-identification-control.component.html","webpack:///src/app/component/notification/notification-signed/notification-signed.component.html","webpack:///src/app/component/notification/notification-signed/notification-signed.component.ts","webpack:///src/app/component/comment/state/comment.actions.ts","webpack:///src/environments/environment.ts","webpack:///src/app/service-idb/idb-persistence.service.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour.component.html","webpack:///src/app/component/run-controls/quill-run/quill-run.component.ts","webpack:///src/app/component/run-controls/quill-run/quill-run.component.html","webpack:///src/app/component/run-controls/gps-run/gps-run.component.ts","webpack:///src/app/component/run-controls/gps-run/gps-run.component.html","webpack:///src/app/component/run-controls/select-run/select-run.component.ts","webpack:///src/app/component/run-controls/select-run/select-run.component.html","webpack:///src/app/component/admin/email-list/email-list.component.html","webpack:///src/app/component/admin/email-list/email-list.component.ts","webpack:///src/app/component/admin/identification/identification.component.html","webpack:///src/app/component/admin/identification/identification.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-header/meaningful-site-tour-header.component.html","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-header/meaningful-site-tour-header.component.ts","webpack:///src/app/component/home/home.component.html","webpack:///src/app/component/home/home.component.ts","webpack:///src/app/component/admin/form-lists/form-lists.component.html","webpack:///src/app/component/admin/form-lists/form-lists.component.ts","webpack:///src/app/component/run-controls/toggle-run/toggle-run.component.ts","webpack:///src/app/component/run-controls/toggle-run/toggle-run.component.html","webpack:///src/app/service/success.service.ts","webpack:///src/app/component/admin/send-password/send-password.component.html","webpack:///src/app/component/admin/send-password/send-password.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-notes/meaningful-site-tour-notes.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-notes/meaningful-site-tour-notes.component.html","webpack:///src/app/component/admin/forms/forms.component.ts","webpack:///src/app/component/admin/forms/forms.component.html","webpack:///src/app/component/notification/notification-open/notification-open.component.html","webpack:///src/app/component/notification/notification-open/notification-open.component.ts","webpack:///src/app/component/admin/dashboard-filter/dashboard-filter.component.ts","webpack:///src/app/component/admin/dashboard-filter/dashboard-filter.component.html","webpack:///src/app/state/device/device-state.actions.ts","webpack:///src/app/component/admin/reset-password/reset-password.component.ts","webpack:///src/app/component/admin/reset-password/reset-password.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/state/worksite-safety-inspection-state.actions.ts","webpack:///src/app/component/admin/list-forms/list-forms.component.html","webpack:///src/app/component/admin/list-forms/list-forms.component.ts","webpack:///src/app/pipe/truncate.pipe.ts","webpack:///src/app/component/admin/list-run/list-run.component.html","webpack:///src/app/component/admin/list-run/list-run.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-todo/meaningful-site-tour-todo.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-todo/meaningful-site-tour-todo.component.html","webpack:///node_modules/@ionic/pwa-elements/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/component/forms/spot-check-safety/state/spot-check-safety.model.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-erp-planning/worksite-safety-erp-planning.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-erp-planning/worksite-safety-erp-planning.component.ts","webpack:///src/app/component/voice/voice.component.html","webpack:///src/app/component/voice/voice.component.ts","webpack:///src/app/state/auth/auth.state.ts","webpack:///src/app/state/notification/notification.state.ts","webpack:///src/app/component/admin/signup-bottom/signup-bottom.component.ts","webpack:///src/app/component/admin/signup-bottom/signup-bottom.component.html","webpack:///src/app/component/comment/state/comment.state.ts","webpack:///src/app/component/forms/worksite-safety-inspection/state/worksite-safety-inspection.state.ts","webpack:///src/app/service-idb/idb-crud.service.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-key-positive-finding/worksite-key-positive-finding.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-key-positive-finding/worksite-key-positive-finding.component.html","webpack:///src/app/service/api.service.ts","webpack:///src/app/component/forms/vehicle-inspection/detail-comments/detail-comments.component.ts","webpack:///src/app/component/forms/vehicle-inspection/detail-comments/detail-comments.component.html","webpack:///src/app/component/admin/pin/pin.component.ts","webpack:///src/app/component/admin/pin/pin.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/component/contact/contact.component.ts","webpack:///src/app/component/contact/contact.component.html","webpack:///src/app/component/pic-delete/pic-delete.component.ts","webpack:///src/app/component/pic-delete/pic-delete.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/component/run-controls/checkbox-run/checkbox-run.component.ts","webpack:///src/app/component/run-controls/checkbox-run/checkbox-run.component.html","webpack:///src/app/component/forms/vehicle-inspection/header/header.component.ts","webpack:///src/app/component/forms/vehicle-inspection/header/header.component.html","webpack:///src/app/component/run-controls/radio-run/radio-run.component.ts","webpack:///src/app/component/run-controls/radio-run/radio-run.component.html","webpack:///src/app/component/terms/terms.component.ts","webpack:///src/app/component/terms/terms.component.html","webpack:///src/app/component/admin/data/data.component.html","webpack:///src/app/component/admin/data/data.component.ts","webpack:///src/app/component/forms/vehicle-inspection/vehicle-inspection.component.html","webpack:///src/app/component/forms/vehicle-inspection/vehicle-inspection.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-inspection.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-inspection.component.ts","webpack:///src/app/component/layout/layout.component.html","webpack:///src/app/component/layout/layout.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-confined-space/worksite-safety-confined-space.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-confined-space/worksite-safety-confined-space.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/state/worksite-safety-inspection-state.model.ts","webpack:///src/app/component/run-controls/fileupload-run/fileupload-run.component.html","webpack:///src/app/component/run-controls/fileupload-run/fileupload-run.component.ts","webpack:///src/app/component/discrepancy/discrepancy.component.html","webpack:///src/app/component/discrepancy/discrepancy.component.ts","webpack:///src/app/pipe/replace-underscore.pipe.ts","webpack:///src/app/app.module.ts","webpack:///src/app/state/auth/auth-state.actions.ts","webpack:///src/app/component/forms/meaningful-site-tour/state/meaningful-site-tour.model.ts","webpack:///src/app/component/forms/spot-check-safety/spot-check-safety-header/spot-check-safety-header.component.html","webpack:///src/app/component/forms/spot-check-safety/spot-check-safety-header/spot-check-safety-header.component.ts","webpack:///src/app/component/notification/notification.component.html","webpack:///src/app/component/notification/notification.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-equipment/worksite-safety-equipment.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-equipment/worksite-safety-equipment.component.html","webpack:///src/app/component/run/run.component.html","webpack:///src/app/component/run/run.component.ts","webpack:///src/app/state/notification/notification-state.actions.ts","webpack:///src/app/component/forms/spot-check-safety/incident-reporting/incident-reporting.component.ts","webpack:///src/app/component/forms/spot-check-safety/incident-reporting/incident-reporting.component.html","webpack:///src/app/component/forms/spot-check-safety/state/spot-check-safety.actions.ts","webpack:///src/app/component/forms/spot-check-safety/rules-work-procedures/rules-work-procedures.component.ts","webpack:///src/app/component/forms/spot-check-safety/rules-work-procedures/rules-work-procedures.component.html","webpack:///src/app/component/pics/pics.component.html","webpack:///src/app/component/pics/pics.component.ts","webpack:///src/app/component/whyus/whyus.component.ts","webpack:///src/app/component/whyus/whyus.component.html","webpack:///src/app/component/admin/menu/menu.component.ts","webpack:///src/app/component/admin/menu/menu.component.html","webpack:///src/app/component/forms/vehicle-inspection/state/vehicle-inspection-state.actions.ts","webpack:///src/app/component/forms/worksite-safety-inspection/bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component.html","webpack:///src/app/component/run-controls/textarea-run/textarea-run.component.ts","webpack:///src/app/component/run-controls/textarea-run/textarea-run.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/component/admin/signin/signin.component.ts","webpack:///src/app/component/admin/signin/signin.component.html","webpack:///src/app/component/run-controls/barcode-run/barcode-run.component.ts","webpack:///src/app/component/run-controls/barcode-run/barcode-run.component.html","webpack:///src/app/interceptor/httpconfig.interceptor.ts","webpack:///src/app/state/device/device.state.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-hot-work/worksite-safety-hot-work.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-hot-work/worksite-safety-hot-work.component.ts","webpack:///src/app/component/forms/vehicle-inspection/detail/detail.component.ts","webpack:///src/app/component/forms/vehicle-inspection/detail/detail.component.html","webpack:///src/app/component/run-controls/textbox-run/textbox-run.component.ts","webpack:///src/app/component/run-controls/textbox-run/textbox-run.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-jobsite/worksite-safety-jobsite.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-jobsite/worksite-safety-jobsite.component.html","webpack:///src/app/component/run-controls/label-run/label-run.component.html","webpack:///src/app/component/run-controls/label-run/label-run.component.ts","webpack:///src/app/component/run-controls/slider-run/slider-run.component.ts","webpack:///src/app/component/run-controls/slider-run/slider-run.component.html","webpack:///node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","webpack:///src/app/component/layout-admin/layout-admin.component.html","webpack:///src/app/component/layout-admin/layout-admin.component.ts","webpack:///src/app/component/corrective-action/state/corrective-action.actions.ts","webpack:///src/app/component/forms/spot-check-safety/corrective-actions/corrective-actions.component.ts","webpack:///src/app/component/forms/spot-check-safety/corrective-actions/corrective-actions.component.html","webpack:///src/app/component/forms/vehicle-inspection/state/vehicle-inspection.state.ts","webpack:///src/app/component/admin/list-edit/list-edit.component.ts","webpack:///src/app/component/admin/list-edit/list-edit.component.html","webpack:///src/app/component/notification/notification-action/notification-action.component.html","webpack:///src/app/component/notification/notification-action/notification-action.component.ts","webpack:///src/app/component/forms/spot-check-safety/safety-equipment/safety-equipment.component.ts","webpack:///src/app/component/forms/spot-check-safety/safety-equipment/safety-equipment.component.html","webpack:///src/app/component/forms/spot-check-safety/personal-protective-equipment/personal-protective-equipment.component.ts","webpack:///src/app/component/forms/spot-check-safety/personal-protective-equipment/personal-protective-equipment.component.html","webpack:///src/app/component/admin/kioske/kioske.component.ts","webpack:///src/app/component/admin/kioske/kioske.component.html","webpack:///src/app/component/comment/comment.component.ts","webpack:///src/app/component/comment/comment.component.html","webpack:///src/app/service/auto-complete.service.ts","webpack:///src/app/component/comment/service/comment.service.ts","webpack:///src/app/component/admin/dashboard/dashboard.component.html","webpack:///src/app/component/admin/dashboard/dashboard.component.ts","webpack:///src/app/component/run-controls/scanner-qrcode-run/scanner-qrcode-run.component.ts","webpack:///src/app/component/run-controls/scanner-qrcode-run/scanner-qrcode-run.component.html","webpack:///src/app/model/forms.ts","webpack:///src/app/component/admin/admin.component.html","webpack:///src/app/component/admin/admin.component.ts","webpack:///src/app/component/admin/sdk/sdk.component.ts","webpack:///src/app/component/admin/sdk/sdk.component.html","webpack:///src/app/component/admin/profile/profile.component.html","webpack:///src/app/component/admin/profile/profile.component.ts","webpack:///src/app/pipe/pipe.module.ts","webpack:///src/app/component/sign-off/sign-off.component.ts","webpack:///src/app/component/sign-off/sign-off.component.html","webpack:///src/app/component/forms/spot-check-safety/spot-check-safety.component.ts","webpack:///src/app/component/forms/spot-check-safety/spot-check-safety.component.html","webpack:///src/app/pipe/split-camel-case.pipe.ts","webpack:///src/app/component/admin/data-forms/data-forms.component.html","webpack:///src/app/component/admin/data-forms/data-forms.component.ts","webpack:///src/app/component/forms/spot-check-safety/state/spot-check-safety.state.ts","webpack:///src/app/component/pricing/pricing.component.ts","webpack:///src/app/component/pricing/pricing.component.html","webpack:///src/app/component/admin/label/label.component.ts","webpack:///src/app/component/admin/label/label.component.html","webpack:///src/app/component/forms/spot-check-safety/communication-training/communication-training.component.html","webpack:///src/app/component/forms/spot-check-safety/communication-training/communication-training.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/component/admin/settings/settings.component.ts","webpack:///src/app/component/admin/settings/settings.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-ground/worksite-safety-ground.component.html","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-ground/worksite-safety-ground.component.ts","webpack:///src/app/component/form/form.component.html","webpack:///src/app/component/form/form.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-hazard/worksite-safety-hazard.component.ts","webpack:///src/app/component/forms/worksite-safety-inspection/worksite-safety-hazard/worksite-safety-hazard.component.html","webpack:///src/app/component/run-controls/scanner-barcode-run/scanner-barcode-run.component.ts","webpack:///src/app/component/run-controls/scanner-barcode-run/scanner-barcode-run.component.html","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-suggestions/meaningful-site-tour-suggestions.component.ts","webpack:///src/app/component/forms/meaningful-site-tour/meaningful-site-tour-suggestions/meaningful-site-tour-suggestions.component.html","webpack:///src/app/model/speech.ts","webpack:///src/main.ts","webpack:///src/app/component/run-controls/qrcode-run/qrcode-run.component.ts","webpack:///src/app/component/run-controls/qrcode-run/qrcode-run.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["TruncateStraightPipe","value","args","limit","length","parseInt","substring","EmailEditComponent","store","appService","authService","successService","data","dialogRef","kioske","selectSnapshot","name","disabled","required","email","id","dataSource","idx","admin","worker","enabled","supervisor","setValue","disabledName","disabledEmail","obj","update","subscribe","sort","close","popSnackbar","disable","enable","reset","EmailService","http","emailUrl","post","VEHICLE_INSPECTION","icon","type","is_published","is_data","is_manager","is_list","lists","description","LABEL","CorrectiveActionState","ctx","correctiveActions","patchState","state","defaults","SignupComponent","fb","errorService","emailService","step","notContinue","terms","logo","linkedinUrl","githubUrl","emailSignupForm","group","compose","password","signupEmail","auth","message","signup","user","_","subscription","NotificationService","notificationUrl","tenant","tenant_id","emailId","addTenantId","put","ErrorService","snackBar","open","duration","TransformRunService","columnArray","formValues","form","formArray","Object","entries","forEach","element","Array","isArray","multiSelect","JSON","stringify","substr","slice","push","unshift","Date","details","columnObj","columns","formControlName","lat","checkboxArray","toggleArray","replace","comma","BottomSheetCommentComponent","bottomSheetRef","event","dismiss","preventDefault","field","comments","index","findIndex","item","splice","dispatch","deleteComment","AppService","router","dialog","apiService","formService","idbCrudService","overlayContainer","notificationService","className","now","toLocaleString","timeZone","Intl","DateTimeFormat","resolvedOptions","fileArray","detailArray","apiUrl","messageUrl","LIST_FORM","notificationOpen","notificationSigned","networkStatus$","EMPTY","notifications","email_signed","formField","title","controls","dialogConfig","height","width","maxWidth","maxHeight","afterClosed","transcription","get","selectedForm","listName","userCreated","date_created","pin","form_id","date_last_access","user_created","setIdbUser","select","getLists","lookupLists","filter","list","rows","clear","getEmailList","emailList","workers","supervisors","getForms","forms","ele","readAll","formsPublished","initializeMyNotifications","getMyNotifications","setNotifications","undefined","getAllNotifications","count","read","darkClassName","getContainerElement","classList","add","remove","darkMode","prefs","isDarkMode","find","notification","subject","toName","email_to","indexOf","messageID","url","emailTo","emailFrom","sendNotificationEmail","workerEmail","notificationObj","date","form_name","email_from","worker_name","supervisor_name","data_id","pdf","correctiveAction","comment","from","to","toString","createNotification","myNotifications","verticalPosition","token","localStorage","setItem","window","location","reload","networkStatus","navigator","onLine","pipe","status","saveObj","pics","save","webkitSpeechRecognition","SpeechRecognitionService","ngZone","isListening","recognition","continuous","interimResults","start","initialize","observer","onstart","run","next","Start","onend","End","onresult","interimContent","finalContent","i","resultIndex","results","isFinal","transcript","FinalContent","content","InterimContent","onerror","eventError","error","NoSpeech","AudioCapture","NotAllowed","Unknown","stop","WorksiteFireExtinguisherComponent","bottomSheet","label","toggle","commentsByType","openComment","TwentyPoundMinimumFireExtinguisherAvailable","fireExtinguisherForm","patchValue","clearFields","isFireExtinguisher","WorksiteSafetyHeaderComponent","autoCompleteService","speechRecognitionService","checkValidHeader","customYearValues","customDayShortNames","years","makes","models","divisions","stakeholders","headerForm","toISOString","lookupListData","d","map","geolocation","getCurrentPosition","position","coords","latitude","long","longitude","emit","popVoiceDialog","validHeaderCheck","openVoice","AuthService","authUrl","loginStatus","CorrectiveActionComponent","formBuilder","isResetDateCompleted","correctiveActionForm","CorrectiveActionRequired","DateCorrectiveActionToBeCompleted","PersonResponsibleCorrectiveAction","DateCorrectiveActionCompleted","PersonResponsible","c","dateCompleted","dateToComplete","correctiveActionRequired","personResponsible","signature","correctiveActionIdx","actionItem","workersControl","setIsResetDateCompleted","CameraComponent","viewContainerRef","webcamImage","trigger","WIDTH","innerWidth","HEIGHT","innerHeight","isDelete","asObservable","imageAsDataUrl","handleImage","States","Platform","Formloco","Summit","SummitForms","Rumzer","LabelsComponent","FormService","formUrl","userId","formData","isOnline","userUpdated","idbData","res","HazardIdentificationControlComponent","commentService","hazardForm","discrepancy","bottomSheetComment","openDiscrepancy","NotificationSignedComponent","pic","msgSigned","SetComments","SetComment","SetText","text","SetLabel","SetTypeFilter","ResetTypeComments","environment","production","designUrl","version","homeUrl","assetUrl","signinUrl","redirectForgotPasswordUrl","idbName","IdbPersistenceService","upgrade","db","createObjectStore","keyPath","autoIncrement","idb","storeName","key","getAll","MeaningfulSiteTourComponent","isEdit","MEANINGFUL_SITE_TOUR","Name","Location","todoForm","SiteOrientation","DailySafetyMeeting","SiteTour","SiteTourWithWorker","ReviewDiscuss","PositiveInterventionRecognition","EngageWithContractors","HousekeepingInspection","CompleteBBO","OpenTeamDiscussion","SafetyAlert","ProvideFeedback","FormalAuditInspection","notesForm","PositiveObservations","ImprovementOpportunities","FeedbackSummary","setFormData","msg","header","Worker","supervisorsControl","Supervisor","todo","notes","updateForm","sendEmail","resetForm","setNotificationObj","idObj","formDataID","getWorker","getSupervisor","setStep","nextStep","prevStep","QuillRunComponent","quillConfig","toolbar","theme","GpsRunComponent","isPosition","runForm","addControl","SelectRunComponent","multi","multiple","tenantID","getData","selectArray","appearance","EmailListComponent","isSync","displayedColumns","emailForm","assign","create","keys","control","setErrors","lookupListName","IdentificationComponent","idbPersistenceService","idForm","getTenant","registerUser","register","response","row","initializeUser","navigate","deleteDb","getEmail","MeaningfulSiteTourHeaderComponent","HomeComponent","changeTheme","kioskeTenant","setInterval","getMyNotificationCount","initializeAdminNotifications","tabIndex","openNotifications","openProfile","isSignIn","childPageLabel","background","notificationMyCount","FormListsComponent","selectChild","isLookupOpen","lookupListForm","createList","createForm","closeOverlay","lookupListArray","lookupList","isListMenu","lookupListNames","ToggleRunComponent","SuccessService","SendPasswordComponent","forgotPassword","childPage","MeaningfulSiteTourNotesComponent","FormsComponent","formObjClone","registerForm","formObj","accessDate","checked","is_deployed","date_last_accessed","statusToggle","updateIdb","setPermissions","formsDeployed","date_archived","NotificationOpenComponent","picArray","customExpandedHeight","messageForm","messageObj","email_to_id","email_from_id","notificationID","updateNotificationMessage","toEmail","fromEmail","sendTo","f","getFormData","page","updateNotificationRead","notificationIdx","notificationComments","DashboardFilterComponent","filterUpdate","filters","updateFilters","$event","target","SetLat","SetLong","SetBackground","SetScreenSize","screenSize","SetScreenWidth","screenWidth","SetIsIOS","isIOS","SetIsSafari","isSafari","SetPics","SetIsDarkMode","SetVoice","voice","SetTranscription","SetIsOnline","ResetPasswordComponent","route","hide","passwordForm","queryParams","params","setMode","resetPassword","SetIsWorksiteSafetyHeaderValid","isWorksiteSafetyHeaderValid","SetIsFireExtinguisher","SetIsErpPlanning","isErpPlanning","SetIsGroundwork","isGroundwork","SetIsHotwork","isHotwork","SetIsConfinedSpace","isConfinedSpace","ListFormsComponent","selectData","selectSharedLists","TruncatePipe","trail","ListRunComponent","saveList","selectedIdx","openMenu","MeaningfulSiteTourTodoComponent","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","webpackAsyncContextKeys","module","exports","SPOT_CHECK_SAFETY","WorksiteSafetyErpPlanningComponent","EmergencyResponsePlanOnSite","erpPlanningForm","VoiceComponent","isDone","defaultError$","voiceForm","totalTranscript","webSpeechReady","initRecognition","errorMessage$","input","nativeElement","transcript$","onResult","processNotification","listening$","onStart","onEnd","onError","trim","selectedVoiceFieldLabel","AuthState","isIdentified","isAdmin","userIdb","formLabels","notificationId","childPageIcon","NotificationState","notificationAllOpen","notificationAllSigned","notificationAdminCount","notificationTab","SignupBottomComponent","matBottomSheetRef","CommentState","WorksiteSafetyInspectionState","IdbCrudService","WorksiteKeyPositiveFindingComponent","keyPositiveFindingsForm","ApiService","headers","set","responseType","blob","Blob","fileName","objectUrl","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","DetailCommentsComponent","commentForm","detailForm","selectedComments","isSaved","fieldName","currentDetailForm","snapShot","PinComponent","pinForm","loginPIN","webpackContext","webpackContextResolve","webpackContextKeys","ContactComponent","PicDeleteComponent","deletePhoto","AppComponent","platform","breakpointObserver","destroyed","myInnerWidth","displayNameMap","Map","XSmall","Small","Medium","Large","XLarge","observe","result","breakpoints","query","checkNetworkStatus","checkOfflineData","complete","CheckboxRunComponent","HeaderComponent","RadioRunComponent","TermsComponent","DataComponent","isData","getCloud","filterValue","toLowerCase","paginator","firstPage","console","log","dataKeys","records","record","tt","pdfName","getPDF","applyFilter","VehicleInspectionComponent","history","isPanelOpen","apiURL","Stakeholder","Division","Mileage","LicensePlate","UnitNumber","Make","Model","Year","RegistrationDate","CurrentRegistrationInVehicle","CurrentInsuranceInVehicle","IgnitionKey","IgnitionKeyComments","OilLevel","OilLevelComments","WasherFluidLevel","WasherFluidLevelComments","CoolantLevel","CoolantLevelComments","PowerSteeringFluidLevel","PowerSteeringFluidLevelComments","AirGauge","AirGaugeComments","Horn","HornComments","HeaterDefroster","HeaterDefrosterComments","WindshieldWipersWashers","WindshieldWipersWashersComments","AllSignalLights","AllSignalLightsComments","InteriorLights","InteriorLightsComments","MirrorsDamageAdjustments","MirrorsDamageAdjustmentsComments","WindshieldVisibility","WindshieldVisibilityComments","VisualInspectionExterior","VisualInspectionExteriorComments","InsideEngineCompartment","InsideEngineCompartmentComments","TransmissionFluidLevel","TransmissionFluidLevelComments","HighlightSignal4wayTailBackup","HighlightSignal4wayTailBackupComments","FuelLevel","FuelLevelComments","FirstAidKit","FirstAidKitComments","FireExtinguisher","FireExtinguisherComments","SurvivalKit","SurvivalKitComments","FuelKey","FuelKeyComments","TwoWayRadio","TwoWayRadioComments","Tires","TiresComments","SpillKit","SpillKitComments","discrepancyForm","Discrepancy","makesControl","modelsControl","detail","format","isHeaderValid","WorksiteSafetyInspectionComponent","WORKSITE_SAFETY_INSPECTION","isERP","isERPDisabled","Client","LSDUWI","Latitude","Longitude","SupervisorPhone","JobNumber","STARSSiteNumber","ScopeOfWork","SiteHazardAssessmentCompleted","ScopeOfWorkClearlyDefined","PotentialHazardsAndMitigationRequirementsIdentified","SummitHealthAndSafetyManualAvailable","OccupationalHealthAndSafetyLegislationAvailable","DailySafetyMeetingsConductedDocumented","AllSitePersonalTrainingAndSafetyTickets","AllSitePersonnelSiteSpecificWearingPPE","jobsiteForm","WorkAreaClearlyIdentified","SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns","AllOpenExcavationsAreClearlyMarked","PublicAccessToTheSiteControlled","PrimeContractorClearlyIdentifiedWithSignage","IsThereEmergencyEquipmentOnSite","FirstAidKitAvailable","BlanketsAndStretcherAvailable","EyeWashBottleAvailable","SpillKitAvailable","H2SPersonalGasMonitorsOnsiteHaveBeenBumped","FireExtinguisherInspected","FireExtinguisherVisibleUnobstructed","FireExtinguisherCharged","FireExtinguisherSafetyPinSecured","FireExtinguisherOperatingInstructions","FireExtinguisherNoVisibleDamage","FireExtinguisherCertification","MusterPointsIdentified","STARSNumber","ERPIncludesDirectionsToNearestHospital","ERPResponderRolesAndResponsibilitiesIdentified","CellularOrRadioCoverageConfirmed","groundForm","DoesTheProjectInvolveGroundDisturbance","GroundDisturbanceChecklistIsInPlace","OneCallNotificationHasBeenRegistered","AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed","ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined","ThirdPartyLineLocatesCompletedWithinTheSearchArea","AllRequiredCrossingOrProximityAgreementsInPlace","confinedSpaceForm","DoesTheProjectInvolveConfinedSpaceEntry","ConfinedSpacePermitIssued","ConfinedSpaceSafetyTraining","SafetyWatchInPlace","RescuePlanAvailable","hotWorkForm","DoesTheProjectInvolveHotWork","HotWorkPermitIssued","FireHazardsIdentifiedControls","FireSafetyWatchAvailable","equipmentForm","ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects","InteriorOfVehicleKeptTidyAndClean","VehicleWindshieldFreeOfMajorChipsAndCracks","DailyPreUseVehicleInspectionCompleted","EquipmentPreUseInspectionCompleted","CargoIinternalAndExternalProperlyStowedAndSecured","HornIsInProperWorkingCondition","HeadlightsAreInProperWorkingCondition","SignalLightsAreInProperWorkingCondition","EmergencyWarningStrobeLightEquippedOnVehicle","SafetyBuggyWhipEquippedOnVehicle","FirstAidKitEquippedInVehicle","EmergencySurvivalKitEquippedInVehicle","KeyPositiveFindings","clientsControl","hazard","jobsite","fireExtinguisher","erpPlanning","ground","confinedSpace","hotWork","equipment","keyPositiveFindings","LayoutComponent","snapshot","paramMap","not","date_signed","initializeOfflineUser","setUser","darkModeToggle","WorksiteSafetyConfinedSpaceComponent","HazardFormLabels","JobsiteFormLabels","FireExtinguisherFormLabels","ErpPlanningFormLabels","GroundFormLabels","ConfinedSpaceLabels","HotWorkLabels","EquipmentLabels","FileuploadRunComponent","addedFiles","readFile","fileContents","getItem","file","reject","reader","FileReader","onload","readAsDataURL","files","onSelect","DiscrepancyComponent","isCommentTab","commentLabel","ReplaceUnderscorePipe","AppModule","provide","useClass","useFactory","connect","deps","forRoot","developmentMode","echarts","registrationStrategy","SetIsIdentified","SetIsSignIn","SetIsAdmin","SetIsListMenu","SetPage","SetEmailList","SetWorkers","SetSupervisors","SetLookupListData","SetLookupListName","SetLookupListNames","SetChildPage","SetChildPageLabel","SetTenant","SetUser","SetUserIdb","SetSelectedForm","ResetAuth","SetForms","SetSelectedVoiceFieldLabel","SetFormLabels","SetCurrentFormId","currentFormId","SetFormData","SetNotificationId","SetChildPageIcon","SetKioske","SetFormsPublished","SpotCheckSafetyHeaderComponent","NotificationComponent","WorksiteSafetyEquipmentComponent","RunComponent","transformRunService","parseDataCloud","parseColumns","saveCloud","SetNotification","SetNotificationMyCount","SetNotificationAdminCount","SetNotificationTab","SetNotificationOpen","SetNotificationSigned","SetNotificationAllOpen","SetNotificationAllSigned","SetNotificationIdx","SetNotificationComments","IncidentReportingComponent","incidentForm","SetIsSafetyEquipment","IsSafetyEquipment","SetIsAppropriateTraining","isAppropriateTraining","RulesWorkProceduresComponent","rulesForm","PicsComponent","hidden","isChangedBlock","WhyusComponent","MenuComponent","child","selectMenu","SetIsHeaderValid","SetSelectedComments","BottomSheetWorksiteSafetyInspectionComponent","commentType","deleteComments","TextareaRunComponent","MaterialModule","SigninComponent","signinForm","signinEmail","signin","BarcodeRunComponent","HttpConfig","request","clone","has","handle","errorResponse","refreshToken","popInterceeptorSnackbar","DeviceState","WorksiteSafetyHotWorkComponent","DetailComponent","yAxis","xAxis","isHistory","isSave","TextboxRunComponent","WorksiteSafetyJobsiteComponent","LabelRunComponent","SliderRunComponent","all","LayoutAdminComponent","SetCorrectiveActions","SetCorrectiveAction","CorrectiveActionsComponent","VehicleInspectionState","ListEditComponent","NotificationActionComponent","docID","signForm","openPdf","SafetyEquipmentComponent","safetyEquipmentForm","PersonalProtectiveEquipmentComponent","personalEquipmentForm","KioskeComponent","whyus","pricing","contact","testdrive","CommentComponent","commentIdx","correctiveActionsIdx","openCorrectiveActionDialog","AutoCompleteService","clients","filteredWorkers$","valueChanges","_filterWorkers","filteredSupervisors$","_filterSupervisors","filteredMakes$","_filterMakes","filteredModels$","_filterModels","filteredClients$","_filterClients","includes","m","CommentService","afterDismissed","isSatisfactory","DashboardComponent","charts","openForms","signedForms","month","year","supers","person","getAllOpen","getAllSigned","split","join","getUpdatedFilter","ScannerQrcodeRunComponent","formatsEnabled","EAN_13","EAN_8","UPC_A","UPC_E","UPC_EAN_EXTENSION","CODE_128","CODE_39","torchEnabled","torchAvailable$","tryHarder","isEnabled","isCompatible","hasPermission","resultString","qrResultString","devices","availableDevices","hasDevices","Boolean","labels","LISTS","AdminComponent","myInnerHeight","isError","isMainMenu","isRightMenu","isImportOpen","isLookuplist","templateForm","templateArray","array","emailLists","l","b","localeCompare","reason","sidenav","signout","selectList","SdkComponent","rawForm","ProfileComponent","toggleTheme","PipeModule","SignOffComponent","submitForm","SpotCheckSafetyComponent","CompanyName","EmployeeName","JobDescription","InspectionFrequency","HazardAssessmentSystem","HazardComments","Procedures","EmergencyPlan","RulesComments","IncidentReporting","NearMissReporting","ProblemFixed","SolvingIssues","IncidentComments","communicationForm","SafetyOrientation","SafetyMeetingFrequency","AppropriateTraining","FirstAidTraining","H2STraining","WHMISTraining","TDGTraining","GroundDisturbanceTraining","EGSOCSOTraining","JobSpecificTraining","CommunicationComments","PPEAvailable","HardHat","SafetyGlasses","Footwear","ProtectiveClothing","HearingProtection","RespiratoryProtection","PersonalGasMonitor","CommunicationEquipment","OtherEquipment","PersonalEquipmentComments","SafetyEquipmentAvailable","FireFightingEquipment","RotatingEquimentGuards","FallArrestEquipment","EmergencySystems","Other","SafetyEquipmentComments","rules","incident","communication","personalEquipment","safetyEquipment","discrepancyComments","SplitCamelCasePipe","DataFormsComponent","selectForm","SpotCheckSafetyState","PricingComponent","LabelComponent","CommunicationTrainingComponent","toggleAppropriateTraining","routes","path","redirectTo","pathMatch","component","AppRoutingModule","relativeLinkResolution","SettingsComponent","settingsForm","WorksiteSafetyGroundComponent","FormComponent","WorksiteSafetyHazardComponent","ScannerBarcodeRunComponent","DATA_MATRIX","QR_CODE","MeaningfulSiteTourSuggestionsComponent","SpeechError","SpeechEvent","bootstrapModule","err","QrcodeRunComponent","begin","end","elementType","correctionLevel","HIGH","webpackEmptyAsyncContext"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'truncateStraight'\n})\nexport class TruncateStraightPipe implements PipeTransform {\n\n  transform(value: string, args: string[]): string {\n    const limit = args.length > 0 ? parseInt(args[0], 10) : 20\n    return value.length > limit ? value.substring(0, limit) : value\n   }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutGap=\"10px\" fxLayoutAlign=\"start center\">\n    <span *ngIf=\"enabled\">\n      <mat-icon class=\"material-icons-outlined\" color=\"primary\">check_circle</mat-icon>\n    </span>\n    <span *ngIf=\"enabled === false\">\n      <mat-icon class=\"material-icons-outlined\" color=\"warn\">cancel</mat-icon>\n    </span>\n    <span *ngIf=\"enabled === null\">\n      <mat-icon class=\"material-icons-outlined\">do_not_disturb_on</mat-icon>\n    </span>\n    <span *ngIf=\"enabled\">Registered</span>\n    <span *ngIf=\"enabled === false\">Disabled</span>\n    <span *ngIf=\"enabled === null\">Not Registered</span>\n  </div>\n  <div fxLayoutAlign=\"start center\" class=\"hand\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<br>\n<div *ngIf=\"enabled\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" [formControl]=\"name\" placeholder=\"Name\" required>\n  </mat-form-field>\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" value=\"{{disabledEmail}}\" disabled>\n  </mat-form-field>\n</div>\n<!-- registered-->\n<span *ngIf=\"enabled\">\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"admin\" color=\"primary\" [disabled]=\"kioske$ | async\">Admin</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"manager\" color=\"primary\" [disabled]=\"kioske$ | async\">Manager</mat-checkbox>\n  </div>\n  <br>\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"worker\" color=\"primary\" [disabled]=\"kioske$ | async\">Worker</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"supervisor\" color=\"primary\" [disabled]=\"kioske$ | async\">Supervisor</mat-checkbox>\n  </div>\n</span>\n\n<!-- not registered-->\n<span *ngIf=\"enabled === null\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div>\n    <mat-form-field fxFlex>\n      <input matInput type=\"text\" [formControl]=\"name\" placeholder=\"Name\" required [disabled]=\"kioske$ | async\">\n    </mat-form-field>\n  </div>\n  <div>\n    <mat-form-field fxFlex>\n      <input matInput type=\"text\" [formControl]=\"email\" placeholder=\"Email\" required [disabled]=\"kioske$ | async\">\n    </mat-form-field>\n  </div>\n</span>\n<span *ngIf=\"enabled === null\">\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"admin\" color=\"primary\" [disabled]=\"kioske$ | async\">Admin</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"manager\" color=\"primary\" [disabled]=\"kioske$ | async\">Manager</mat-checkbox>\n  </div>\n  <br>\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"worker\" color=\"primary\" [disabled]=\"kioske$ | async\">Worker</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"supervisor\" color=\"primary\" [disabled]=\"kioske$ | async\">Supervisor</mat-checkbox>\n  </div>\n</span>\n\n<!-- disabled -->\n<div *ngIf=\"enabled === false\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" value=\"{{disabledName}}\" disabled>\n  </mat-form-field>\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" value=\"{{disabledEmail}}\" disabled>\n  </mat-form-field>\n</div>\n<span *ngIf=\"enabled === false\">\n  <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n    <mat-checkbox [(ngModel)]=\"admin\" color=\"primary\" disabled>Admin</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"manager\" color=\"primary\" disabled>Manager</mat-checkbox>\n  </div>\n  <br>\n  <div>\n    <mat-checkbox [(ngModel)]=\"worker\" color=\"primary\" disabled>Worker</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"supervisor\" color=\"primary\" disabled>Supervisor</mat-checkbox>\n  </div>\n</span>\n\n<br>\n<div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n  <div *ngIf=\"enabled || enabled === null\">\n    <button (click)=\"update()\" mat-stroked-button color=\"primary\" [disabled]=\"kioske$ | async\">Save</button>\n  </div>\n  <div *ngIf=\"enabled\">\n    <button (click)=\"reset()\" mat-stroked-button color=\"accent\" [disabled]=\"kioske$ | async\">Reset</button>\n  </div>\n  <div *ngIf=\"enabled === false\">\n    <button (click)=\"enable()\" mat-stroked-button color=\"accent\" [disabled]=\"kioske$ | async\">Enable</button>\n  </div>\n  <div *ngIf=\"enabled || enabled ===  null\">\n    <button (click)=\"disable()\" mat-stroked-button color=\"warn\" [disabled]=\"kioske$ | async\">Disable</button>\n  </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\"\nimport { FormControl, Validators } from '@angular/forms'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\n@Component({\n  selector: 'app-email-edit',\n  templateUrl: './email-edit.component.html',\n  styleUrls: ['./email-edit.component.scss']\n})\nexport class EmailEditComponent implements OnInit {\n\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  id\n  name\n  email\n  kioske\n  enabled\n  admin\n  worker\n  supervisor\n  disabledName\n  disabledEmail\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private authService: AuthService,\n    private successService: SuccessService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<EmailEditComponent>\n  ) { \n\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.name = new FormControl({value: null, disabled: this.kioske}, [Validators.required])\n    this.email = new FormControl({value: null, disabled: this.kioske}, [Validators.required, Validators.email])\n  \n    this.id = this.appService.dataSource.data[this.data.idx][\"id\"]\n    this.admin = this.appService.dataSource.data[this.data.idx][\"admin\"]\n    this.worker = this.appService.dataSource.data[this.data.idx][\"worker\"]\n    this.enabled = this.appService.dataSource.data[this.data.idx][\"enabled\"]\n    this.supervisor = this.appService.dataSource.data[this.data.idx][\"supervisor\"]\n    this.name.setValue(this.appService.dataSource.data[this.data.idx][\"name\"])\n    this.email.setValue(this.appService.dataSource.data[this.data.idx][\"email\"])\n    this.disabledName = this.appService.dataSource.data[this.data.idx][\"name\"]\n    this.disabledEmail = this.appService.dataSource.data[this.data.idx][\"email\"]\n  }\n\n  update() {\n    let obj = {\n      id: this.id,\n      admin: this.admin,\n      worker: this.worker,\n      supervisor: this.supervisor,\n      name: this.name.value,\n      email: this.email.value\n    }\n    this.authService.update(obj).subscribe(data => {\n      this.data = data\n      this.data.sort()\n      this.appService.dataSource.data = this.data\n      this.dialogRef.close()\n      this.successService.popSnackbar('Email updated.')\n    })\n  }\n\n  disable() {\n    let obj = {\n      id: this.id\n    }\n    this.authService.disable(obj).subscribe(data => {\n      this.data = data\n      this.data.sort()\n      this.appService.dataSource.data = this.data\n      this.dialogRef.close()\n      this.successService.popSnackbar('Email disabled.')\n    })\n  }\n\n  enable() {\n    let obj = {\n      id: this.id\n    }\n    this.authService.enable(obj).subscribe(data => {\n      this.data = data\n      this.data.sort()\n      this.appService.dataSource.data = this.data\n      this.dialogRef.close()\n      this.successService.popSnackbar('Email enabled.')\n    })\n  }\n\n  reset() {\n    let obj = {\n      id: this.id\n    }\n    this.authService.reset(obj).subscribe(data => {\n      this.data = data\n      this.data.sort()\n      this.appService.dataSource.data = this.data\n      this.dialogRef.close()\n      this.successService.popSnackbar('Email reset.')\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core'\n\nimport { HttpClient } from '@angular/common/http'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n\n  emailUrl = environment.emailUrl\n\n  constructor(private http: HttpClient) { }\n\n  sendNotificationEmail(obj) {\n    return this.http.post(this.emailUrl + 'notification/', obj)\n  }\n\n  forgotPassword(obj) {\n    return this.http.post(this.emailUrl + 'forgot/password/', obj)\n  }\n\n  signup(obj) {\n    return this.http.post(this.emailUrl + 'signup', obj)\n  }\n  \n}\n\n","export const VEHICLE_INSPECTION = {\n  id: \"vehicle-inspection\",\n  name: \"Vehicle Inspection\",\n  icon: \"directions_car\",\n  type: \"custom\",\n  is_published: false,\n  is_data: false,\n  is_manager: false,\n  is_list: false,\n  lists: ['stakeholders', 'models', 'years', 'divisions', 'makes'],\n  description: \"Monthly vehicle inspection\"\n}\nexport interface VehicleInspectionStateModel {\n  isHeaderValid: boolean\n  selectedComments: []\n}\n\nexport const LABEL = `As you drive, continually check for any strange smells, sounds, vibrations, or Anything that does not feel right. **Vehicles should be serviced as per manufacturer’s recommendations and repairs made only by competent accredited personnel. For monthly inspections done by the employee: This vehicle inspection was done by myself and not by an accredited mechanic. There were no issues or problems identified at the time of inspection and therefore, no corrective actions are necessary to be undertaken. The employee completing this form takes full responsibility of the completeness and accuracy of this inspection as per Summit's Inspection Policy.`","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as CorrectiveActionActions from './corrective-action.actions'\nimport { CorrectiveActionStateModel, CorrectiveAction } from './corrective-action.model'\n\n@Injectable()\n@State<CorrectiveActionStateModel>({\n  name: 'correctiveAction',\n  defaults: {\n    correctiveActions: []\n  }\n})\n\nexport class CorrectiveActionState {\n\n  @Selector()\n  static correctiveActions(state: CorrectiveActionStateModel): CorrectiveAction[] {\n    return state.correctiveActions\n  }\n\n  @Action(CorrectiveActionActions.SetCorrectiveActions)\n  onSetCorrectiveAction(ctx: StateContext<CorrectiveActionStateModel>, { correctiveActions }: CorrectiveActionActions.SetCorrectiveActions) {\n    ctx.patchState({\n      correctiveActions: correctiveActions\n    });\n  }\n\n}\n\n","import { Component } from '@angular/core'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { environment } from '../../../../environments/environment'\n\nimport { AuthService } from \"../../../service/auth.service\"\nimport { EmailService } from \"../../../service/email.service\"\nimport { ErrorService } from \"../../../service/error.service\"\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent {\n\n  auth\n  step = 0\n  notContinue = true\n  terms = false\n  subscription\n\n  logo = environment.logo\n  linkedinUrl = environment.linkedinUrl\n  githubUrl = environment.githubUrl\n\n  emailSignupForm: FormGroup\n  forgotPasswordForm: FormGroup\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private errorService: ErrorService,\n    private emailService: EmailService) {\n    this.emailSignupForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.required]\n    })\n  }\n\n  close() {\n    \n  }\n\n  signupEmail() {\n    this.authService.signupEmail(this.emailSignupForm.value).subscribe(auth => {\n      this.auth = auth\n\n      if (this.auth.message === 'Signup sucessful.') {\n        this.step = 1\n        this.emailService.signup({ email: this.auth.user.email }).subscribe(_ => {})\n      }\n      else this.errorService.popSnackbar(this.auth.message)\n    })\n  }\n\n  checkTerms(terms) {\n    this.terms = terms\n    if (!this.terms) this.notContinue = true\n    else if (this.subscription) this.notContinue = false\n  }\n\n  selectSubscription() {\n    if (this.terms) this.notContinue = false\n    else this.notContinue = true\n  }\n\n}\n","<div fxLayout=\"column\">\n  <div class=\"text-color mat-h1\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div>Sign Up</div>\n    <div fxLayoutGap=\"20px\">\n      <button mat-icon-button (click)=\"close()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"container-padding\">\n    <div *ngIf=\"step === 0\" fxLayout=\"column\">\n      <form [formGroup]=\"emailSignupForm\">\n        <div fxLayout=\"column\" class=\"form-padding\">\n          <mat-form-field appearance=\"outline\" fxFlex>\n            <mat-label>Email Address</mat-label>\n            <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"text\" required>\n            <mat-error>\n              Email address is required!\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" fxFlex>\n            <mat-label>Password</mat-label>\n            <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" required>\n            <mat-error>\n              Password is required!\n            </mat-error>\n          </mat-form-field>\n          <button (click)=\"signupEmail()\" mat-stroked-button color=\"primary\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n    </div>\n    <div *ngIf=\"step === 1\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n      <div>\n        <app-terms></app-terms>\n      </div>\n      <div class=\"text-color\">\n        <mat-checkbox (change)=\"checkTerms($event.checked)\" color=\"primary\" [checked]=\"terms\">Accept terms and conditions</mat-checkbox>\n      </div>\n      <h3 class=\"text-color\">Monthly Subscription</h3>\n      <div class=\"text-color\">\n        <mat-radio-group (change)=\"selectSubscription()\" [(ngModel)]=\"subscription\">\n          <mat-radio-button value=\"paypal\">Credit Card</mat-radio-button>\n          <mat-radio-button value=\"invoice\">Invoice or EFT</mat-radio-button>\n          <mat-radio-button value=\"free\">Free</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <br>\n      <div>\n        <button (click)=\"step = 2\" mat-stroked-button color=\"primary\" fxFlex [disabled]=\"notContinue\">\n          Continue\n        </button>\n      </div>\n      <br><br>\n    </div>\n    <div *ngIf=\"step === 2\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n      <div *ngIf=\"subscription === 'invoice'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/MonthlySubscriptionInvoiceEFT/formperma/DPyidrkamlSTiR52sfYCU82m7h2MZZzREanwDfrQQy4'></iframe>\n      </div>\n      <div *ngIf=\"subscription === 'paypal'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/contactus/formperma/4cYAlnbRcWnLrjP9pBkPFnCCTKGrtP6gHMrEsteGIow'></iframe>\n      </div>\n      <div *ngIf=\"subscription === 'free'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/FreeSubscription/formperma/ekqZGlUJ2Q6fESOo2EYdj6y13302mqTvK895Wb6_hx0'></iframe>\n      </div>\n    </div>\n  </div>\n</div>","import { Injectable } from '@angular/core'\n\nimport { HttpClient } from '@angular/common/http'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\n\nimport { environment } from '../../environments/environment'\nimport { AppService } from './app.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  emailUrl = environment.emailUrl\n  notificationUrl = environment.notificationUrl\n\n  constructor(\n    private store: Store,\n    private http: HttpClient) { }\n\n  createNotification(obj) {\n    return this.http.post(this.notificationUrl + 'notification/', obj)\n  }\n\n  addTenantId(obj) {\n    obj[\"tenant_id\"] = this.store.selectSnapshot(AuthState.tenant).tenant_id\n    return obj \n  }\n\n  getAllNotifications() {\n    const obj = { tenant_id: this.store.selectSnapshot(AuthState.tenant).tenant_id }\n    return this.http.post(this.notificationUrl+'notifications/', obj)\n  }\n\n  getMyNotifications() {\n    const obj = {\n      tenant: this.store.selectSnapshot(AuthState.tenant).tenant_id,\n      emailId: this.store.selectSnapshot(AuthState.user).id\n    }\n    return this.http.post(this.notificationUrl + 'notification/' + obj.emailId + '/', obj)\n  }\n\n  // this updates the notification count on the alert\n  getMyNotificationCount() {\n    const obj = { tenant_id: this.store.selectSnapshot(AuthState.tenant).tenant_id }\n    const emailId = this.store.selectSnapshot(AuthState.user).id\n    return this.http.post(this.notificationUrl + 'notification/count/' + emailId + '/', obj)\n  }\n\n  updateNotificationMessage(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.put(this.notificationUrl + 'notification/', obj)\n  }\n\n  updateNotificationRead(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.put(this.notificationUrl+'notification/read/', obj)\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  popSnackbar(message) {\n    this.snackBar.open(message, \"Heads Up!\", {duration: 3000})\n  }\n\n  popInterceeptorSnackbar() {        \n    this.snackBar.open(\"Whoa, something went wrong\", \"Heads Up!\", {duration: 3000})\n  }\n  \n}\n","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransformRunService {\n\n  columnArray = []\n\n  constructor(\n    private store: Store) { }\n\n  public parseDataCloud(formValues, form) {\n    \n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    let formArray = Object.entries(formValues)\n    \n    if (formArray.length > 0) {\n      let data = []\n      formArray.forEach(element => {\n        if (Array.isArray(element[1])) {\n          let multiSelect = JSON.stringify(element[1])\n          multiSelect = multiSelect.substr(1)\n          multiSelect = multiSelect.slice(0, -1)\n          multiSelect = '{'+multiSelect+'}'\n          data.push(multiSelect)\n        }\n        else\n          data.push(element[1])\n      })\n      data.unshift(new Date())\n      data.unshift(tenant.email)\n      return data\n    }\n  }\n\n\n  // prepare columns string\n  public parseColumns(details) {\n    this.columnArray = []\n    let columnObj = {\n      columns: null\n    }\n\n    details.forEach(element => {\n      \n      if (element.type === \"Textbox\" || element.type === \"Textarea\" || element.type === \"Radio\" \n        || element.type === \"Select\" || element.type === \"SelectMulti\" || element.type === \"Slider\" || element.type === \"List\") {\n        this.columnArray.push(element.formControlName)\n      }\n\n      if (element.type === \"GPS\") {\n        this.columnArray.push(element.lat.formControlName)\n        this.columnArray.push(element.long.formControlName)\n      }\n\n      if (element.type === \"Checkbox\") {\n        element.checkboxArray.forEach(element => {\n          this.columnArray.push(element.formControlName)\n        })\n      }\n\n      if (element.type === \"Toggle\") {\n        element.toggleArray.forEach(element => {\n          this.columnArray.push(element.formControlName)\n        })\n      }\n    })\n    columnObj.columns = JSON.stringify(this.columnArray)\n    \n    columnObj.columns = columnObj.columns.substr(2)\n    columnObj.columns = columnObj.columns.slice(0, -2)\n    columnObj.columns = columnObj.columns.replace(/['\"]+/g, '')\n    columnObj.columns = 'date_created, ' + columnObj.columns\n    columnObj.columns = 'user_created, ' + columnObj.columns\n\n    let comma = columnObj.columns.slice(-2)\n\n    if (comma === ', ') {\n      columnObj.columns = columnObj.columns.substring(0, columnObj.columns.length - 2)\n      columnObj.columns = columnObj.columns + ' '\n    }\n    \n    return columnObj.columns\n  }\n}\n","import { Component, Inject } from '@angular/core';\n\nimport * as _ from 'lodash'\nimport { Store } from '@ngxs/store'\n\nimport { CommentState } from '../state/comment.state'\nimport { SetComments } from '../state/comment.actions'\n\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\n@Component({\n  selector: 'app-bottom-sheet-comment',\n  templateUrl: './bottom-sheet-comment.component.html',\n  styleUrls: ['./bottom-sheet-comment.component.scss']\n})\nexport class BottomSheetCommentComponent {\n\n  comment\n\n  constructor(\n    private store: Store, \n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any, \n    private bottomSheetRef: MatBottomSheetRef<BottomSheetCommentComponent>) { }\n\n  openLink(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss()\n    event.preventDefault()\n  }\n\n  close() {\n    this.bottomSheetRef.dismiss(false)\n  }\n\n  deleteComment(field) {\n    let comments: any = _.cloneDeep(this.store.selectSnapshot(CommentState.comments))\n    const index = comments.findIndex(item => item.field === field)\n    comments.splice(index, 1)\n    this.store.dispatch(new SetComments(comments))\n    this.bottomSheetRef.dismiss(true)\n  }\n\n}\n","<div class=\"mat-headline3\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">{{ data.comment[0].label }}</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"close()\">\n    <mat-icon class=\"hand\">close</mat-icon>\n  </div>\n</div>\n<br>\n<p style=\"text-align:center\"><b>Click continue to set satisfactory and delete related comments.</b></p>\n<br>\n<div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"2rem\">\n  <button (click)=\"deleteComment(data.comment[0].field)\" mat-raised-button color=\"warn\">\n    Delete\n  </button>\n  <button mat-stroked-button (click)=\"close()\">\n    Cancel\n  </button>\n</div>\n","import { Injectable, HostBinding } from '@angular/core'\n\nimport { fromEvent, merge, of, Subscription, Subject } from 'rxjs'\nimport { takeUntil, map } from 'rxjs/operators'\n\nimport { OverlayContainer } from '@angular/cdk/overlay'\n\nimport { HttpClient } from '@angular/common/http'\nimport { MatSnackBar } from '@angular/material/snack-bar'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { Router } from '@angular/router'\n\nimport { environment } from '../../environments/environment'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\nimport { SetBackground, SetIsDarkMode } from '../state/device/device-state.actions'\nimport { SetPage, SetChildPage, SetLookupListData, SetWorkers, SetSupervisors, SetFormsPublished, SetForms, SetIsSignIn, SetChildPageLabel } from '../state/auth/auth-state.actions'\nimport { SetNotificationOpen, SetNotificationSigned, SetNotificationAllOpen, SetNotificationAllSigned, SetNotificationMyCount, SetNotificationAdminCount } from '../state/notification/notification-state.actions'\n\nimport { ApiService } from \"../service/api.service\"\nimport { AuthService } from \"../service/auth.service\"\nimport { FormService } from \"../service/form.service\"\nimport { EmailService } from \"../service/email.service\"\nimport { NotificationService } from \"../service/notification.service\"\nimport { IdbCrudService } from \"../service-idb/idb-crud.service\"\n\nimport { LISTS, LIST_FORM } from '../model/forms'\n\nimport { SetTranscription } from 'src/app/state/device/device-state.actions'\nimport { SetSelectedVoiceFieldLabel } from 'src/app/state/auth/auth-state.actions'\nimport { SetIsOnline } from '../state/device/device-state.actions'\n\nimport { VoiceComponent } from '../component/voice/voice.component'\nimport { DeviceState } from '../state/device/device.state'\nimport { NotificationState } from '../state/notification/notification.state'\n\nimport * as uuid from 'uuid'\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  @HostBinding('class') className = 'darkMode'\n\n  private data\n\n  public isNew\n  public now = new Date().toLocaleString(\"en-US\", { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone })\n\n  public isListMenu\n  public lookupLists\n  public fileArray = []\n  public detailArray = []\n  public currentDetailForm\n  public isFileUploadRunning\n\n  public dataSource = new MatTableDataSource()\n\n  apiUrl = environment.apiUrl\n  tenant = environment.tenant\n  kioske = environment.kioske\n  messageUrl = environment.messageUrl\n\n  LIST_FORM = LIST_FORM\n\n  private notificationOpen: any = []\n  private notificationSigned: any = []\n\n  token\n  networkStatus: any\n  networkStatus$: Subscription = Subscription.EMPTY\n\n  private setNotifications(data) {\n    this.notificationOpen = []\n    this.notificationSigned = []\n    const notifications: any = data\n\n    notifications.forEach(element => {\n      if (element.email_signed) this.notificationSigned.push(element)\n      else this.notificationOpen.push(element)\n    })\n  }\n\n  public popVoiceDialog(form, formField, title) {\n    this.store.dispatch(new SetTranscription(form.controls[formField].value))\n    this.store.dispatch(new SetSelectedVoiceFieldLabel(title))\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.height = '100%'\n    dialogConfig.width = '100%'\n    dialogConfig.maxWidth = '100vw',\n      dialogConfig.maxHeight = '100vh',\n      this.dialog.open(VoiceComponent, dialogConfig).afterClosed().subscribe(() => {\n        form.controls[formField].setValue(this.store.selectSnapshot(DeviceState.transcription))\n      })\n  }\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private formService: FormService,\n    private emailService: EmailService,\n    private idbCrudService: IdbCrudService,\n    private overlayContainer: OverlayContainer,\n    private notificationService: NotificationService) {\n  }\n\n  create(obj) {\n    return this.http.post(this.apiUrl, obj)\n  }\n\n  getCloud() {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    return this.http.get(this.apiUrl + tenant.tenant_id + '/' + this.store.selectSnapshot(AuthState.selectedForm[\"form_id\"]) + '/')\n  }\n\n  createList(listName) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    this.LIST_FORM.form.name = listName\n    let userCreated = { email: 'polly@formloco.com', date_created: new Date() }\n\n    let form = ({\n      pin: '369',\n      name: listName,\n      form: this.LIST_FORM.form,\n      form_id: uuid.v4(),\n      tenant_id: tenant.tenant_id,\n      date_created: new Date(),\n      date_last_access: new Date(),\n      user_created: userCreated,\n      is_data: true,\n      is_list: true,\n      is_published: true,\n      type: 'dynamic'\n    })\n    return form\n  }\n\n  saveSettings(obj) {\n    return this.idbCrudService.put('data', obj)\n  }\n\n  initializeUser() {\n    this.setIdbUser()\n    const user = this.store.selectSnapshot(AuthState.user)\n    // kioske email is used to get forms and notifications\n    // get lookuplists array and dispatch to lookuplist state\n    this.store.select(AuthState.tenant).subscribe(tenant => {\n      this.apiService.getLists({ tenant_id: tenant.tenant_id }).subscribe(lists => {\n        const lookupLists: any = lists\n        LISTS.forEach(element => {\n          if (lookupLists.filter(list => list.name != element))\n            lookupLists.push({ name: element, rows: [] })\n        })\n        this.store.dispatch(new SetLookupListData(lookupLists))\n        this.idbCrudService.clear('lists')\n        this.idbCrudService.put('lists', lookupLists)\n      })\n      // get worker and supervisor lists and dispatch to state\n      this.apiService.getEmailList({ tenant_id: tenant.tenant_id }).subscribe(lists => {\n        const emailList: any = lists\n        let workers: any[] = []\n        let supervisors: any[] = []\n        emailList.forEach(element => {\n          if (element.worker) {\n            workers.push({ name: element.name, email: element.email })\n          }\n          if (element.supervisor) {\n            supervisors.push({ name: element.name, email: element.email })\n          }\n        })\n\n        workers.sort()\n        supervisors.sort()\n        this.store.dispatch(new SetWorkers(workers))\n        this.store.dispatch(new SetSupervisors(supervisors))\n        this.idbCrudService.clear('workers')\n        this.idbCrudService.clear('supervisors')\n        this.idbCrudService.put('workers', workers)\n        this.idbCrudService.put('supervisors', supervisors)\n      })\n\n      this.formService.getForms().subscribe((forms: any) => {\n        this.idbCrudService.clear('form')\n\n        // form_id needs to be added idb form\n        forms.forEach((ele) => {\n          ele.form[\"form_id\"] = ele.form_id\n          this.idbCrudService.put('form', ele.form)\n        })\n\n        this.idbCrudService.readAll('form').subscribe((forms: any) => {\n          this.store.dispatch(new SetForms(forms))\n          const formsPublished = forms.filter(form => form.is_published === true)\n          this.store.dispatch(new SetFormsPublished(formsPublished))\n        })\n      })\n      this.initializeMyNotifications()\n    })\n  }\n\n  initializeOfflineUser() {\n    this.idbCrudService.readAll('lists').subscribe((lookupLists: any) => {\n      this.store.dispatch(new SetLookupListData(lookupLists[0]))\n    })\n    this.idbCrudService.readAll('workers').subscribe((workers: any) => {\n      this.store.dispatch(new SetWorkers(workers[0]))\n    })\n    this.idbCrudService.readAll('supervisors').subscribe((supervisors: any) => {\n      this.store.dispatch(new SetSupervisors(supervisors[0]))\n    })\n    this.idbCrudService.readAll('form').subscribe((forms: any) => {\n      this.store.dispatch(new SetForms(forms))\n      const formsPublished = forms.filter(form => form.is_published === true)\n      this.store.dispatch(new SetFormsPublished(formsPublished))\n    })\n\n    this.store.dispatch(new SetPage('home'))\n    this.store.dispatch(new SetIsSignIn(true))\n    this.store.dispatch(new SetIsDarkMode(true))\n    this.store.dispatch(new SetChildPageLabel('Forms'))\n  }\n\n  initializeMyNotifications() {\n    this.notificationService.getMyNotifications().subscribe((data: any) => {\n      this.setNotifications(data)\n      this.store.dispatch(new SetNotificationOpen(this.notificationOpen))\n      this.store.dispatch(new SetNotificationSigned(this.notificationSigned))\n      if (data.length == 0) this.store.dispatch(new SetNotificationMyCount(undefined))\n      else this.store.dispatch(new SetNotificationMyCount(data.length))\n    })\n  }\n\n  initializeAdminNotifications() {\n    this.notificationService.getAllNotifications().subscribe(data => {\n      this.setNotifications(data)\n      this.store.dispatch(new SetNotificationAllOpen(this.notificationOpen))\n      this.store.dispatch(new SetNotificationAllSigned(this.notificationSigned))\n      let count = 0\n      this.notificationOpen.forEach(element => {\n        if (element.read === false) count = count + 1\n      })\n      this.store.dispatch(new SetNotificationAdminCount(count))\n    })\n  }\n\n  setMode(darkClassName) {\n    this.className = 'darkMode' ? darkClassName : ''\n\n    if (darkClassName === 'darkMode') {\n      this.store.dispatch(new SetBackground('#3b3b3b'))\n      this.overlayContainer.getContainerElement().classList.add(darkClassName)\n    }\n    else {\n      this.store.dispatch(new SetBackground(''))\n      this.overlayContainer.getContainerElement().classList.remove('darkMode')\n    }\n  }\n\n  setIdbUser() {\n    const user = this.store.selectSnapshot(AuthState.user)\n    let darkMode = true\n    this.idbCrudService.readAll('prefs').subscribe((prefs: any) => {\n      if (prefs.length > 0) darkMode = prefs.isDarkMode\n    })\n    let obj = {\n      user: {\n        id: user.id,\n        isDarkMode: darkMode,\n        email: user.email,\n        tenant_id: user.tenant_id\n      }\n    }\n    this.idbCrudService.clear('prefs')\n    this.idbCrudService.put('prefs', obj)\n  }\n\n  getWorker(name) {\n    const workers: any = this.store.selectSnapshot(AuthState.workers)\n    let worker = workers.find(worker => worker.name === name)\n    if (!worker) {\n      let worker = { name: name, email: null }\n      return worker\n    }\n    return worker\n  }\n\n  getSupervisor(name) {\n    const supervisors: any = this.store.selectSnapshot(AuthState.supervisors)\n    const supervisor = supervisors.find(worker => worker.name === name)\n    if (!supervisor) {\n      supervisor[\"name\"] = supervisor.name\n      supervisor[\"email\"] = supervisor.email\n    }\n    return supervisor\n  }\n\n  sendEmail() {\n    const user = this.store.selectSnapshot(AuthState.user)\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n    const notification = this.store.selectSnapshot(NotificationState.notification)\n\n    const subject =\n      form[\"name\"] + ' updated by ' + user.name + ' ' + new Date()\n\n    const obj = {\n      tenant: this.store.selectSnapshot(AuthState.tenant),\n      toName: notification.email_to.substring(0, notification.email_to.indexOf('@')),\n      messageID: notification.id,\n      url: this.messageUrl,\n      subject: subject,\n      emailTo: notification.email_to,\n      emailFrom: user.email\n    }\n    this.emailService.sendNotificationEmail(obj).subscribe((_) => { });\n  }\n\n  createNotification(obj) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    let now = new Date().toLocaleString(\"en-US\", { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone })\n\n    // if a worker is added to the form manually send the name entered\n    // the name will be used as the email address, can be updated\n    // after the fact in admin panel\n    let workerEmail = obj.worker.email\n    if (workerEmail == null) workerEmail = obj.worker.name\n\n    let notificationObj = {\n      date: now,\n      form_name: obj.name,\n      email_from: workerEmail,\n      worker_name: obj.worker.name,\n      email_to: obj.supervisor.email,\n      supervisor_name: obj.supervisor.name,\n      form_id: obj.form_id,\n      data_id: obj.data_id,\n      description: obj.description,\n      subject: obj.subject,\n      pdf: obj.pdf,\n      correctiveAction: false,\n      comment: [{\n        from: obj.worker.name,\n        to: obj.supervisor.name,\n        date: now.toString(),\n        message: obj.message\n      }]\n    }\n    notificationObj[\"tenant_id\"] = tenant.tenant_id\n    this.notificationService.createNotification(notificationObj).subscribe((myNotifications: any) => {\n      if (myNotifications) {\n        this.store.dispatch(new SetNotificationOpen(this.notificationOpen))\n\n        const obj = {\n          tenant: this.store.selectSnapshot(AuthState.tenant),\n          toName: notificationObj.supervisor_name,\n          messageID: myNotifications.data[0][\"id\"],\n          url: this.messageUrl,\n          subject: notificationObj.subject,\n          emailTo: notificationObj.email_to,\n          emailFrom: this.tenant.email\n        }\n\n        this.emailService.sendNotificationEmail(obj).subscribe(() => {\n          this.store.dispatch(new SetPage('home'))\n          this.store.dispatch(new SetChildPage('Forms'))\n          this.snackBar.open(myNotifications.message, 'Success', {\n            duration: 3000,\n            verticalPosition: 'bottom'\n          })\n        })\n      }\n    })\n  }\n\n  refreshToken() {\n    this.authService.token().subscribe((token: any) => {\n      localStorage.setItem('formToken', token.token)\n      window.location.reload()\n    })\n  }\n\n  checkNetworkStatus() {\n    this.networkStatus = navigator.onLine\n    this.networkStatus$ = merge(\n      of(null),\n      fromEvent(window, 'online'),\n      fromEvent(window, 'offline')\n    )\n      .pipe(map(() => navigator.onLine))\n      .subscribe(status => {\n        if (status)\n          this.authService.token().subscribe(token => {\n            this.token = token\n            localStorage.setItem('formToken', this.token.token)\n          })\n        this.store.dispatch(new SetIsOnline(status))\n      })\n  }\n\n  checkOfflineData() {\n    this.idbCrudService.readAll('data').subscribe((data: any) => {\n      if (data.length > 0) {\n        data.forEach(element => {\n          let saveObj = {\n            data: element.data,\n            user: element.user,\n            form: element.form,\n            type: 'custom',\n            date: element.date,\n            name: element.name,\n            pics: element.pics\n          }\n\n          this.apiService.save(saveObj).subscribe(id => {\n            element.notification[\"date\"] = this.now,\n            element.notification[\"form_name\"] = element.notification.name,\n            element.notification[\"email_from\"] = element.notification.worker.email,\n            element.notification[\"worker_name\"] = element.notification.worker.name,\n            element.notification[\"email_to\"] = element.notification.supervisor.email,\n            element.notification[\"supervisor_name\"] = element.notification.supervisor.name,\n            element.notification[\"correctiveAction\"] = false,\n            element.notification[\"comment\"] = [{\n              from: element.notification.worker.name,\n              to: element.notification.supervisor.name,\n              date: this.now.toString(),\n              message: element.notification.message\n            }]\n            element.notification.data_id = id\n            element.notification.pdf = element.form.id + id\n            element.notification[\"tenant_id\"] = this.tenant.tenant_id\n            \n            this.notificationService.createNotification(element.notification).subscribe((myNotifications: any) => {\n              if (myNotifications) {\n                this.store.dispatch(new SetNotificationOpen(myNotifications.data))\n                const obj = {\n                  tenant: this.store.selectSnapshot(AuthState.tenant),\n                  toName: element.notification.supervisor.name,\n                  messageID: myNotifications.data[0][\"id\"],\n                  url: this.messageUrl,\n                  subject: element.notification.subject,\n                  emailTo: element.notification.supervisor.email,\n                  emailFrom: this.tenant.email\n                }\n                this.emailService.sendNotificationEmail(obj).subscribe(() => { })\n              }\n            })\n          })\n        })\n        this.idbCrudService.clear('data').subscribe()\n        this.store.dispatch(new SetPage('home'))\n        this.store.dispatch(new SetChildPage('Forms'))\n        this.snackBar.open('Offline data saved', 'Success', {\n          duration: 3000,\n          verticalPosition: 'bottom'\n        })\n      }\n    })\n  }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs'\n\nimport { Store } from '@ngxs/store'\n\nimport { SpeechNotification, SpeechError, SpeechEvent, AppWindow } from '../model/speech';\n\n// tslint:disable-next-line:no-any\nconst { webkitSpeechRecognition }: AppWindow = (window as any) as AppWindow;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpeechRecognitionService {\n\n  recognition!: SpeechRecognition;\n  language!: string;\n  isListening = false;\n\n  constructor(\n    private ngZone: NgZone,\n    private store: Store,\n    // private dialog: MatDialog\n    ) { }\n\n  initialize(): boolean {\n    if ('webkitSpeechRecognition' in window) {\n      this.recognition = new webkitSpeechRecognition();\n      this.recognition.continuous = true;\n      this.recognition.interimResults = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  start(): void {\n    if (!this.recognition) {\n      return;\n    }\n\n    this.recognition.start();\n    this.isListening = true;\n  }\n\n  onStart(): Observable<SpeechNotification<never>> {\n    if (!this.recognition) {\n      this.initialize();\n    }\n\n    return new Observable(observer => {\n      this.recognition.onstart = () => {\n        this.ngZone.run(() => {\n          observer.next({\n            event: SpeechEvent.Start\n          });\n        });\n      };\n    });\n  }\n\n  onEnd(): Observable<SpeechNotification<never>> {\n    return new Observable(observer => {\n      this.recognition.onend = () => {\n        this.ngZone.run(() => {\n          observer.next({\n            event: SpeechEvent.End\n          });\n          this.isListening = false;\n        });\n      };\n    });\n  }\n\n  onResult(): Observable<SpeechNotification<string>> {\n    return new Observable(observer => {\n      this.recognition.onresult = (event: SpeechRecognitionEvent) => {\n        let interimContent = '';\n        let finalContent = '';\n\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            finalContent += event.results[i][0].transcript;\n            this.ngZone.run(() => {\n              observer.next({\n                event: SpeechEvent.FinalContent,\n                content: finalContent\n              });\n            });\n          } else {\n            interimContent += event.results[i][0].transcript;\n            this.ngZone.run(() => {\n              observer.next({\n                event: SpeechEvent.InterimContent,\n                content: interimContent\n              });\n            });\n          }\n        }\n      };\n    });\n  }\n\n  onError(): Observable<SpeechNotification<never>> {\n    return new Observable(observer => {\n      this.recognition.onerror = (event) => {\n        // tslint:disable-next-line:no-any\n        const eventError: string = (event as any).error;\n\n        let error: SpeechError;\n        switch (eventError) {\n          case 'no-speech':\n            error = SpeechError.NoSpeech;\n            break;\n          case 'audio-capture':\n            error = SpeechError.AudioCapture;\n            break;\n          case 'not-allowed':\n            error = SpeechError.NotAllowed;\n            break;\n          default:\n            error = SpeechError.Unknown;\n            break;\n        }\n\n        this.ngZone.run(() => {\n          observer.next({\n            error\n          });\n        });\n      };\n    });\n  }\n\n  stop(): void {\n    this.recognition.stop();\n  }\n\n\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"fireExtinguisherForm\">\n    <div class=\"text-color radio-center\">{{label.TwentyPoundMinimumFireExtinguisherAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"TwentyPoundMinimumFireExtinguisherAvailable\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false); clearFields()\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isFireExtinguisher$ | async)\">\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherInspected}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherInspected\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherInspected,'FireExtinguisherInspected')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherVisibleUnobstructed}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherVisibleUnobstructed\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherVisibleUnobstructed,'FireExtinguisherVisibleUnobstructed')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherCharged}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherCharged\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherCharged,'FireExtinguisherCharged')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherSafetyPinSecured}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherSafetyPinSecured\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherSafetyPinSecured,'FireExtinguisherSafetyPinSecured')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherOperatingInstructions}}s</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherOperatingInstructions\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherOperatingInstructions,'FireExtinguisherOperatingInstructions')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherNoVisibleDamage}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherNoVisibleDamage\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherNoVisibleDamage,'FireExtinguisherNoVisibleDamage')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireExtinguisherCertification}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireExtinguisherCertification\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireExtinguisherCertification,'FireExtinguisherCertification')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n  </form>\n</div>","import { Component, Input, OnInit } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsFireExtinguisher } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { FireExtinguisherFormLabels } from '../state/worksite-safety-inspection-state.model'\nimport { BottomSheetWorksiteSafetyInspectionComponent } from '../bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component'\n\n@Component({\n  selector: 'app-worksite-fire-extinguisher',\n  templateUrl: './worksite-fire-extinguisher.component.html',\n  styleUrls: ['./worksite-fire-extinguisher.component.scss']\n})\nexport class WorksiteFireExtinguisherComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isFireExtinguisher) isFireExtinguisher$: Observable<string>\n\n  @Input() fireExtinguisherForm\n\n  label = FireExtinguisherFormLabels\n  \n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit() {\n    this.store.dispatch(new SetTypeFilter('isFireExtinguisher'))\n    // this.fireExtinguisherForm.controls['TwentyPoundMinimumFireExtinguisherAvailable'].patchValue('yes')\n  }\n\n  toggle(toggle) {\n    this.store.dispatch(new SetIsFireExtinguisher(toggle))\n    if (toggle) {\n      const comments:any = this.store.selectSnapshot(CommentState.commentsByType)\n      if (comments.length > 0) this.bottomSheet.open(BottomSheetWorksiteSafetyInspectionComponent)\n    }\n    if (!toggle) {\n      this.openComment(this.label.TwentyPoundMinimumFireExtinguisherAvailable, 'TwentyPoundMinimumFireExtinguisherAvailable')\n    }\n  }\n\n  clearFields() {\n    this.fireExtinguisherForm.controls['FireExtinguisherInspected'].patchValue('')\n    this.fireExtinguisherForm.controls['FireExtinguisherVisibleUnobstructed'].patchValue('')\n    this.fireExtinguisherForm.controls['FireExtinguisherCharged'].patchValue('')\n    this.fireExtinguisherForm.controls['FireExtinguisherSafetyPinSecured'].patchValue('')\n    this.fireExtinguisherForm.controls['FireExtinguisherOperatingInstructions'].patchValue('')\n    this.fireExtinguisherForm.controls['FireExtinguisherNoVisibleDamage'].patchValue('')\n    this.fireExtinguisherForm.controls['FireExtinguisherCertification'].patchValue('')\n\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'Fire Extinguisher', label: label, field: field, type: 'isFireExtinguisher' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core'\n\nimport { MatDialog } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { AuthState } from '../../../../state/auth/auth.state'\nimport { AutoCompleteService } from \"../../../../service/auto-complete.service\"\nimport { SpeechRecognitionService } from \"../../../../service/speech-recognition.service\"\n\n@Component({\n  selector: 'app-worksite-safety-header',\n  templateUrl: './worksite-safety-header.component.html',\n  styleUrls: ['./worksite-safety-header.component.scss']\n})\nexport class WorksiteSafetyHeaderComponent implements OnInit {\n\n  @Input() headerForm\n  @Output() checkValidHeader = new EventEmitter<any>()\n\n  header\n  lookupLists\n\n  customYearValues = [2025, 2024, 2023, 2022, 2021, 2016, 2008, 2004, 2000, 1996];\n  customDayShortNames = ['s\\u00f8n', 'man', 'tir', 'ons', 'tor', 'fre', 'l\\u00f8r'];\n  customPickerOptions: any;\n\n  years: string[] = []\n  makes: string[] = []\n  models: string[] = []\n  divisions: string[] = []\n  stakeholders: string[] = []\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    public autoCompleteService: AutoCompleteService,\n    public speechRecognitionService: SpeechRecognitionService) { }\n\n  ngOnInit(): void {\n    this.headerForm.controls['Date'].setValue(new Date().toISOString())\n    this.lookupLists = this.store.selectSnapshot(AuthState.lookupListData)\n\n    if (this.lookupLists) {\n      this.divisions = this.lookupLists.filter(d => { return d.name == \"divisions\" })[0][\"rows\"].map(d => { return d.data })\n      this.divisions.sort()\n    }\n\n    navigator.geolocation.getCurrentPosition(position => {\n      const lat = position.coords.latitude\n      const long = position.coords.longitude\n      this.headerForm.controls['Latitude'].setValue(lat)\n      this.headerForm.controls['Longitude'].setValue(long)\n    })\n\n  }\n\n  validHeaderCheck() {\n    this.checkValidHeader.emit()\n  }\n\n  openVoice(formField) {\n    this.appService.popVoiceDialog(this.headerForm, formField, 'Scope of Work')\n  }\n\n}\n\n","<form fxLayout=\"column\" [formGroup]=\"headerForm\">\n  <ion-label position=\"stacked\">Date Inspection Completed</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"Date\" required>\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <br>\n  <mat-form-field class=\"bot-pad full-width-field\" fxFlex>\n    <mat-label>Worker Completing Inspection</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Inspection Completed By\" matInput\n      [formControl]=\"autoCompleteService.workersControl\" [matAutocomplete]=\"autoWorkers\" required>\n    <mat-autocomplete (optionSelected)=validHeaderCheck() #autoWorkers=\"matAutocomplete\">\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Site Supervisor Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Site Supervisor Name\" matInput\n      [formControl]=\"autoCompleteService.supervisorsControl\" [matAutocomplete]=\"autoSupervisors\" required>\n    <mat-autocomplete (optionSelected)=validHeaderCheck() #autoSupervisors=\"matAutocomplete\">\n      <mat-option *ngFor=\"let supervisor of autoCompleteService.filteredSupervisors$ | async\" [value]=\"supervisor.name\">\n        {{supervisor.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Site Supervisor Phone Number</mat-label>\n    <input matInput (change)=validHeaderCheck() placeholder=\"Site Supervisor Phone Number\"\n      formControlName=\"SupervisorPhone\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Client Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Client Name\" matInput\n      [formControl]=\"autoCompleteService.clientsControl\" [matAutocomplete]=\"autoClients\" required>\n    <mat-autocomplete (optionSelected)=validHeaderCheck() #autoClients=\"matAutocomplete\">\n      <mat-option *ngFor=\"let client of autoCompleteService.filteredClients$ | async\" [value]=\"client\">\n        {{client}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Worksite Location</mat-label>\n    <input matInput placeholder=\"Worksite Location\" formControlName=\"Location\" type=\"text\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>LSD/UWI</mat-label>\n    <input matInput placeholder=\"LSD/UWI\" formControlName=\"LSDUWI\" type=\"text\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Latitude</mat-label>\n    <input matInput placeholder=\"Latitude\" formControlName=\"Latitude\" type=\"text\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Longitude</mat-label>\n    <input matInput placeholder=\"Longitude\" formControlName=\"Longitude\" type=\"text\">\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Job/Project#</mat-label>\n    <input matInput (change)=validHeaderCheck() placeholder=\"Job/Project#\" formControlName=\"JobNumber\" type=\"text\"\n      required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Division</mat-label>\n    <mat-select (selectionChange)=validHeaderCheck() panelClass=\"select-panel\" formControlName=\"Division\" required>\n      <mat-option *ngFor=\"let division of divisions\" [value]=\"division\" required>{{division}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>STARS Site # (if applicable)</mat-label>\n    <input matInput placeholder=\"STARS Site # (if applicable)\" formControlName=\"STARSSiteNumber\" type=\"text\">\n  </mat-form-field>\n  <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n    <div>\n      <mat-label>Scope of Work</mat-label>\n    </div>\n    <div>\n      <button (click)=\"openVoice('ScopeOfWork')\" mat-mini-fab color=\"primary\">\n        <mat-icon matSuffix>mic_none</mat-icon>\n      </button>\n    </div>\n  </div>\n  <mat-form-field fxFlex>\n    <textarea (change)=validHeaderCheck() cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n      formControlName=\"ScopeOfWork\" fxFlex required></textarea>\n  </mat-form-field>\n</form>","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\n\nimport { HttpClient } from '@angular/common/http'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authUrl = environment.authUrl;\n  loginStatus = false;\n\n  constructor(\n    private store: Store,\n    private http: HttpClient) { \n  }\n\n  token() {\n    return this.http.get(this.authUrl+'token/')\n  }\n\n  addTenantId(obj) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    obj[\"tenant_id\"] = tenant.tenant_id\n    return obj \n  }\n\n  user(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'user/', obj)\n  }\n\n  register(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'register/', obj)\n  }\n\n  create(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'create/', obj)\n  }\n\n  update(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'update/', obj)\n  }\n\n  enable(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'enable/', obj)\n  }\n\n  disable(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'disable/', obj)\n  }\n\n  reset(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'reset/', obj)\n  }\n  \n  resetPassword(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'resetpassword/', obj)\n  }\n\n  getPermissions(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.authUrl+'permissions/', obj)\n  }\n\n  signupEmail(obj) {\n    return this.http.post(this.authUrl+'email/', obj)\n  }\n\n  getTenant(obj) {\n    return this.http.post(this.authUrl+'tenant/', obj)\n  }\n\n  signinEmail(obj) {\n    return this.http.post(this.authUrl, obj)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div>\n    <div class=\"header-font\" fxLayoutAlign=\"start center\">{{ data.label }}</div>\n  </div>\n  <div class=\"header-font\" fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"dialogRef.close()\">\n    <mat-icon class=\"hand\">close</mat-icon>\n  </div>\n</div>\n<br><br>\n<form fxLayout=\"column\" [formGroup]=\"correctiveActionForm\">\n  <ion-label position=\"stacked\">Date for corrective actions to be completed</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY\" formControlName=\"DateCorrectiveActionToBeCompleted\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <br>\n  <div>\n    <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n      <div>\n        <mat-label>Corrective Action Required</mat-label>\n      </div>\n      <div>\n        <button (click)=\"openVoice('CorrectiveActionRequired','Hazard Identification & Control Comments')\" mat-mini-fab\n          color=\"primary\">\n          <mat-icon matSuffix>mic_none</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div>\n      <mat-form-field fxFlex>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n          formControlName=\"CorrectiveActionRequired\" fxFlex></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n  <br>\n  <mat-form-field>\n    <mat-label>Person Responsible</mat-label>\n    <input type=\"text\" placeholder=\"Person Responsible\" matInput [formControl]=\"autoCompleteService.workersControl\"\n      [matAutocomplete]=\"autoWorkers\" required>\n    <mat-autocomplete #autoWorkers=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <div fxLayoutAlign=\"space-between center\">\n    <ion-label position=\"stacked\">Date corrective actions were complete</ion-label>\n    <button *ngIf=\"isResetDateCompleted\" (click)=\"clearDateCompleted()\" mat-mini-fab color=\"primary\">\n      <mat-icon matSuffix>restart_alt</mat-icon>\n    </button>\n  </div>\n  <ion-datetime (ionChange)=\"setIsResetDateCompleted()\" class=\"picker-color\" displayFormat=\"MMM DD, YYYY\" formControlName=\"DateCorrectiveActionCompleted\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <br>\n  <div class=\"hand\" fxLayoutAlign=\"center\">\n    <mat-icon *ngIf=\"!correctiveActionForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n    <mat-icon *ngIf=\"correctiveActionForm.valid\" class=\"icon-169px-action\" (click)=\"save()\">fingerprint</mat-icon>\n  </div>\n</form>","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Store } from '@ngxs/store';\nimport { AppService } from 'src/app/service/app.service';\nimport { AuthState } from '../../state/auth/auth.state';\n\nimport { CorrectiveActionState } from '../corrective-action/state/corrective-action.state';\n\nimport * as _ from 'lodash';\nimport { SetCorrectiveActions } from './state/corrective-action.actions';\nimport { AutoCompleteService } from '../../service/auto-complete.service';\n@Component({\n  selector: 'app-corrective-action',\n  templateUrl: './corrective-action.component.html',\n  styleUrls: ['./corrective-action.component.scss'],\n})\nexport class CorrectiveActionComponent implements OnInit {\n  @Input() correctiveActionForm;\n\n  isResetDateCompleted = false;\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private formBuilder: FormBuilder,\n    public autoCompleteService: AutoCompleteService,\n    public dialogRef: MatDialogRef<CorrectiveActionComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.correctiveActionForm = this.formBuilder.group({\n      CorrectiveActionRequired: [],\n      DateCorrectiveActionToBeCompleted: [],\n      PersonResponsibleCorrectiveAction: [],\n      DateCorrectiveActionCompleted: [],\n      PersonResponsible: [],\n    });\n  }\n\n  ngOnInit(): void {\n    const correctiveActions = this.store.selectSnapshot(\n      CorrectiveActionState.correctiveActions\n    );\n    const correctiveAction = correctiveActions?.filter(\n      (c) => c.field == this.data.field\n    );\n\n    if (correctiveAction?.length > 0) {\n      if (correctiveAction[0].dateCompleted) this.isResetDateCompleted = true;\n      this.correctiveActionForm.controls[\n        'DateCorrectiveActionToBeCompleted'\n      ].setValue(correctiveAction[0].dateToComplete);\n      this.correctiveActionForm.controls['CorrectiveActionRequired'].setValue(\n        correctiveAction[0].correctiveActionRequired\n      );\n      this.correctiveActionForm.controls[\n        'PersonResponsibleCorrectiveAction'\n      ].setValue(correctiveAction[0].personResponsible);\n      this.correctiveActionForm.controls[\n        'DateCorrectiveActionCompleted'\n      ].setValue(correctiveAction[0].dateCompleted);\n      this.correctiveActionForm.controls['PersonResponsible'].setValue(\n        correctiveAction[0].signature\n      );\n    }\n  }\n\n  async save() {\n    const correctiveActions = await _.cloneDeep(\n      this.store.selectSnapshot(CorrectiveActionState.correctiveActions)\n    );\n    const correctiveActionIdx = correctiveActions?.findIndex(\n      (c) => c.field == this.data.field\n    );\n\n    if (correctiveActionIdx == -1)\n      correctiveActions.push({\n        label: this.data.label,\n        dateToComplete:\n          this.correctiveActionForm.controls[\n            'DateCorrectiveActionToBeCompleted'\n          ].value,\n        actionItem: this.data.actionItem,\n        correctiveActionRequired:\n          this.correctiveActionForm.controls['CorrectiveActionRequired'].value,\n        personResponsible: this.autoCompleteService.workersControl.value,\n        dateCompleted:\n          this.correctiveActionForm.controls['DateCorrectiveActionCompleted']\n            .value,\n        field: this.data.field,\n        type: this.data.type,\n      });\n    else {\n      correctiveActions[correctiveActionIdx].dateToComplete =\n        this.correctiveActionForm.controls[\n          'DateCorrectiveActionToBeCompleted'\n        ].value;\n      correctiveActions[correctiveActionIdx].correctiveActionRequired =\n        this.correctiveActionForm.controls['CorrectiveActionRequired'].value;\n      correctiveActions[correctiveActionIdx].personResponsible =\n        this.autoCompleteService.workersControl.value;\n      correctiveActions[correctiveActionIdx].dateCompleted =\n        this.correctiveActionForm.controls[\n          'DateCorrectiveActionCompleted'\n        ].value;\n      correctiveActions[correctiveActionIdx].signature =\n        this.store.selectSnapshot(AuthState.user).email;\n    }\n    this.store.dispatch(new SetCorrectiveActions(correctiveActions));\n    this.dialogRef.close();\n  }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.correctiveActionForm, formField, title);\n  }\n\n  clearDateCompleted() {\n    this.isResetDateCompleted = false;\n    this.correctiveActionForm.controls['DateCorrectiveActionCompleted'].reset();\n  }\n\n  setIsResetDateCompleted() {\n    this.isResetDateCompleted = true;\n  }\n}\n","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">{{ data.name }}</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer hand\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<div fxLayoutAlign=\"center\">\n  <webcam [height]=\"HEIGHT\" [width]=\"WIDTH\" [trigger]=\"triggerObservable\"\n    (imageCapture)=\"handleImage($event)\" [imageQuality]=\"1\"></webcam>\n</div>\n<div [ngClass]=\"((pics$ | async).length > 0 ? 'float-left':'float')\" *ngIf=\"!isDelete\">\n  <mat-icon (click)=\"triggerSnapshot()\" class=\"icon-120px-action hand\">radio_button_checked</mat-icon>\n</div>\n<div *ngIf=\"(pics$ | async).length > 0\" class=\"float-right\">\n  <mat-icon color=\"primary\" class=\"material-icons-outlined icon-select-files hand\" (click)=\"showPhotos()\" matBadge=\"{{ (pics$ | async)?.length }}\" matBadgeColor=\"warn\">perm_media</mat-icon>\n</div>\n","import { Component, ViewContainerRef, Inject } from \"@angular/core\"\n\nimport * as _ from 'lodash'\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\"\n\nimport { Subject, Observable } from 'rxjs'\nimport { WebcamImage } from 'ngx-webcam'\n\nimport { PicsComponent } from '../pics/pics.component'\nimport { Store, Select } from '@ngxs/store'\nimport { DeviceState } from '../../state/device/device.state'\nimport { SetPics } from '../../state/device/device-state.actions'\n\n@Component({\n  selector: 'app-camera',\n  templateUrl: './camera.component.html',\n  styleUrls: ['./camera.component.scss']\n})\nexport class CameraComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n\n  public webcamImage: WebcamImage = null;\n  private trigger: Subject<void> = new Subject<void>();\n\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n  \n  WIDTH = window.innerWidth\n  HEIGHT = window.innerHeight\n\n  idx\n  pics\n  isDelete = false\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet,\n    public viewContainerRef: ViewContainerRef,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<CameraComponent>) {}\n\n  public triggerSnapshot(): void {\n    this.trigger.next();\n  }\n\n  public handleImage(webcamImage: WebcamImage): void {\n    this.webcamImage = webcamImage\n    this.pics = _.cloneDeep(this.store.selectSnapshot(DeviceState.pics))\n    this.pics.push(this.webcamImage.imageAsDataUrl)\n    this.store.dispatch(new SetPics(this.pics))\n  }\n\n  deletePhoto() {\n    this.pics = this.store.selectSnapshot(DeviceState.pics)\n    this.pics.splice(this.idx,1)\n    this.store.dispatch(new SetPics(this.pics))\n    this.isDelete = false\n  }\n\n  selectPhoto(idx: number) {\n    this.idx = idx\n    this.isDelete = true\n  }\n\n  showPhotos() {\n    this.bottomSheet.open(PicsComponent)\n  }\n\n}\n","import { AuthState } from './auth/auth.state'\nimport { DeviceState } from './device/device.state'\nimport { NotificationState } from './notification/notification.state'\nimport { CommentState } from '../component/comment/state/comment.state'\nimport { CorrectiveActionState } from '../component/corrective-action/state/corrective-action.state'\nimport { SpotCheckSafetyState } from '../component/forms/spot-check-safety/state/spot-check-safety.state'\nimport { VehicleInspectionState } from '../component/forms/vehicle-inspection/state/vehicle-inspection.state'\nimport { WorksiteSafetyInspectionState } from '../component/forms/worksite-safety-inspection/state/worksite-safety-inspection.state'\n\nexport const States = [\n  AuthState,\n  DeviceState,\n  CommentState,\n  NotificationState,\n  SpotCheckSafetyState,\n  CorrectiveActionState,\n  VehicleInspectionState,\n  WorksiteSafetyInspectionState\n]\n\nexport enum Platform {\n  version = '3.2'\n}\n\nexport enum Formloco {\n  pin = '111111',\n  tenant = 'formloco',\n  linkedinUrl = 'https://www.linkedin.com/in/formloco',\n  githubUrl = 'https://github.com/formloco/',\n  designUrl = 'https://design.formloco.com/',\n  designKioskeUrl = 'https://design.formloco.com/kioske/true',\n  idbName = 'formlocoMobileDB',\n  email = 'brock@formloco.com',\n  logo = 'assets/logo-light.png',\n  homeUrl = 'https://formloco.com/',\n  apiUrl = 'https://api.formloco.com/api/',\n  authUrl = 'https://api.formloco.com/auth/',\n  formUrl = 'https://api.formloco.com/form/',\n  emailUrl = 'https://api.formloco.com/email/',\n  assetUrl = 'https://api.formloco.com/asset/',\n  messageUrl = 'https://mobile.formloco.com/message/',\n  notificationUrl = 'https://api.formloco.com/',\n  signinUrl = 'https://mobile.formloco.com/e93f63d8e62d44da93009229f8a7f890/',\n  redirectForgotPasswordUrl = 'https://mobile.formloco.com/O451fd2702f54a00b1007f6e80b32e45/'\n}\n\nexport enum Summit {\n  pin = '999999',\n  tenant = 'summit',\n  idbName = 'summitEarthDB',\n  kioskeEmail = 'brock@formloco.com',\n  kioskePassword = 'simple',\n  kioskeTenant = 'formloco',\n  email = 'HSE@Summitearth.com',\n  logo = 'assets/logo-summit.svg',\n  // endpoints\n  apiUrl = 'https://forms.summitearth.com/api/',\n  authUrl = 'https://forms.summitearth.com/auth/',\n  formUrl = 'https://forms.summitearth.com/form/',\n  emailUrl = 'https://forms.summitearth.com/email/',\n  assetUrl = 'https://forms.summitearth.com/asset/',\n  notificationUrl = 'https://forms.summitearth.com/',\n\n  homeUrl = 'https://forms.summitearth.com/',\n  messageUrl = 'https://forms.summitearth.com/message/',\n  signinUrl = 'https://forms.summitearth.com/e93f63d8e62d44da93009229f8a7f890/',\n  redirectForgotPasswordUrl = 'https://forms.summitearth.com/O451fd2702f54a00b1007f6e80b32e45/'\n}\n\nexport enum SummitForms {\n  pin = '333333'\n}\n\nexport enum Rumzer {\n  pin = '333333',\n  tenant = 'rumzer',\n  idbName = 'rumzerMobileDB',\n  kioskeEmail = 'brock@formloco.com',\n  kioskePassword = 'simple',\n  kioskeTenant = 'formloco',\n  homeUrl = 'https://formloco.com/',\n  email = 'rumzerbot@rumzer.com',\n  logo = 'assets/logo-rumzer.svg',\n  apiUrl = 'https://api.formloco.com/api/',\n  authUrl = 'https://api.formloco.com/auth/',\n  formUrl = 'https://api.formloco.com/form/',\n  emailUrl = 'https://api.formloco.com/email/',\n  assetUrl = 'https://api.formloco.com/asset/',\n  notificationUrl = 'https://api.formloco.com/',\n  messageUrl = 'https://mobile.formloco.com/message/',\n  signinUrl = 'https://mobile.formloco.com/e93f63d8e62d44da93009229f8a7f890/',\n  redirectForgotPasswordUrl = 'https://mobile.formloco.com/O451fd2702f54a00b1007f6e80b32e45/'\n}\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-labels',\n  templateUrl: './labels.component.html',\n  styleUrls: ['./labels.component.scss']\n})\nexport class LabelsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>labels works!</p>\n","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\nimport { DeviceState } from '../state/device/device.state'\n\nimport { ApiService } from \"../service/api.service\"\nimport { IdbCrudService } from \"../service-idb/idb-crud.service\"\n\nimport { Form } from \"../state/auth/auth-state.model\"\nimport { SetPage, SetChildPageLabel } from '../state/auth/auth-state.actions'\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { HttpClient } from '@angular/common/http'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormService {\n\n  formUrl = environment.formUrl\n\n  constructor(\n    private store: Store,\n    private http: HttpClient,\n    private snackBar: MatSnackBar,\n    private apiService: ApiService,\n    private idbCrudService: IdbCrudService) { }\n\n  addTenantId(obj) {\n    obj[\"tenant_id\"] = this.store.selectSnapshot(AuthState.tenant).tenant_id\n    return obj \n  }\n\n  getForm(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.get(this.formUrl + obj.form_id+'/'+obj.data_id+'/')\n  }\n\n  getForms() {\n    const obj = {\n      tenant: this.store.selectSnapshot(AuthState.tenant).tenant_id,\n      userId: this.store.selectSnapshot(AuthState.user).id\n    }\n    return this.http.post(this.formUrl + 'forms/', obj)\n  }\n\n  createForm(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.formUrl, obj)\n  }\n\n  registerForm(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.formUrl + 'register/', obj)\n  }\n\n  statusToggle(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.formUrl + 'status/', obj)\n  }\n\n  setPermissions(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.formUrl + 'permission/', obj)\n  }\n\n  update(form: Form) {\n    form = this.addTenantId(form)\n    return this.http.put(this.formUrl, form)\n  }\n\n  updateForm(form, formData, data) {\n    const user = this.store.selectSnapshot(AuthState.user)\n\n    const isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n    const now = new Date().toLocaleString(\"en-US\", { timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone })\n\n    let userUpdated = {\n      email: user.email,\n      date_created: now\n    }\n\n    if (!isOnline) {\n      const obj = {\n        id: form[\"id\"],\n        data: data,\n        user: userUpdated,\n        data_id: null,\n        form_id: form[\"form_id\"],\n        date: now,\n        pics: this.store.selectSnapshot(DeviceState.pics)\n      }\n      this.idbCrudService.readAll('data').subscribe((data: any) => {\n        const idbData = data.find(data => data.id === form['id'])\n        obj.data = idbData\n        this.idbCrudService.put('data', obj)\n      })\n    }\n    else {\n      const obj = {\n        id: form[\"id\"],\n        data: JSON.stringify(data),\n        user: userUpdated,\n        data_id: formData[\"id\"],\n        form_id: form[\"form_id\"],\n        date: now,\n        pics: this.store.selectSnapshot(DeviceState.pics)\n      }\n\n      this.apiService.update(obj).subscribe((res) => {\n        this.store.dispatch(new SetPage('notification'))\n        this.store.dispatch(new SetChildPageLabel('Forms'))\n        this.snackBar.open(res[\"message\"], 'Success', {\n          duration: 3000,\n          verticalPosition: 'bottom'\n        })\n      })\n    }\n    return this.http.put(this.formUrl, form)\n  }\n\n  // getPermissions(obj) {\n  //   obj = this.addTenantId(obj)\n  //   return this.http.get(this.formUrl + 'permission/', obj)\n  // }\n  \n}\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentService } from \"../../../comment/service/comment.service\"\nimport { CommentComponent } from '../../../comment/comment.component'\n\n@Component({\n  selector: 'app-hazard-identification-control',\n  templateUrl: './hazard-identification-control.component.html',\n  styleUrls: ['./hazard-identification-control.component.scss']\n})\nexport class HazardIdentificationControlComponent {\n\n  @Input() hazardForm\n\n  constructor(\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService) { }\n\n  openVoice(formField) {\n    this.appService.popVoiceDialog(this.hazardForm, formField, 'Hazard Identification & Control Comments')\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { \n      title: 'Hazard Identification & Control', \n      label: label, \n      field: field, \n      type: 'isHazardIdentification' \n    }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n  \n  openDiscrepancy(label, field, discrepancy: boolean) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { \n      title: 'Hazard Identification & Control', \n      label, \n      field, \n      type: 'isHazardIdentification',\n      discrepancy\n    }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.hazardForm)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"hazardForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Are equipment and vehicles inspected, and at what frequency? (Examples and documentation)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"InspectionFrequency\">\n        <mat-radio-button (click)=\"openComment('Are equipment and vehicles inspected, and at what frequency?','InspectionFrequency')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Are equipment and vehicles inspected, and at what frequency?','InspectionFrequency', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Is there a system for hazard assessment, reporting and follow-up? (Written or verbal)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HazardAssessmentSystem\">\n        <mat-radio-button (click)=\"toggle('HazardAssessmentSystem')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Is there a system for hazard assessment, reporting and follow-up?','HazardAssessmentSystem', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Hazard Identification & Control Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('HazardComments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"HazardComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n\n","<mat-accordion multi [togglePosition]=\"'before'\" *ngFor=\"let notification of (notificationSigned$ | async)\">\n  <mat-expansion-panel class=\"panel-margin\">\n    <mat-expansion-panel-header class=\"accordion-margin right-aligned-header\">\n      <mat-panel-title>\n        {{notification.form_name}}\n        <br>Signed:&nbsp;{{notification.date_signed | date: 'mediumDate'}}<br>By:&nbsp;{{notification.signed_name}}\n      </mat-panel-title>\n      <mat-panel-description>\n          <button color=\"primary\" mat-mini-fab>\n            <mat-icon class=\"material-icons-outlined\" (click)=\"openPdf(notification)\">picture_as_pdf</mat-icon>\n          </button>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <br>\n    <div>Messages</div>\n    <mat-accordion>\n      <div class=\"form-padding\" *ngFor=\"let comment of notification.comment\">\n        <mat-card class=\"custom hand\">\n          {{ comment.from }}<br>\n          <br>{{comment.message}}\n        </mat-card>\n      </div>\n    </mat-accordion>\n  </mat-expansion-panel>\n</mat-accordion>\n<h4 class=\"text-color padding-left\" *ngIf=\"(notificationSigned$ | async)?.length === 0\">No signed notifications</h4>","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { FormControl } from \"@angular/forms\"\nimport { Store, Select } from '@ngxs/store'\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { NotificationState } from '../../../state/notification/notification.state'\nimport { SetNotification } from '../../../state/notification/notification-state.actions'\n\nimport { PicsComponent } from '../../pics/pics.component'\n\n@Component({\n  selector: 'app-notification-signed',\n  templateUrl: './notification-signed.component.html',\n  styleUrls: ['./notification-signed.component.scss']\n})\nexport class NotificationSignedComponent {\n\n  @Output() save = new EventEmitter<any>()\n  @Output() pdf = new EventEmitter<any>()\n  @Output() pic = new EventEmitter<any>()\n\n  @Select(NotificationState.notificationSigned) notificationSigned$: Observable<string>\n\n  public msgSigned = new FormControl([''])\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet,\n    private idbCrudService: IdbCrudService) {}\n\n  openPdf(notification) {\n    this.store.dispatch(new SetNotification(notification))\n    this.pdf.emit()\n  }\n\n}\n\n","import { Comment } from './comment.model'\n\nexport class SetComments {\n  static type = '[CommentStateModel] SetComments'\n  constructor(public comments: Comment[]) {}\n}\n\nexport class SetComment {\n  static type = '[CommentStateModel] SetComment'\n  constructor(public comment: Comment) {}\n}\n\nexport class SetText {\n  static type = '[CommentStateModel] SetText'\n  constructor(public text: string) {}\n}\n\nexport class SetLabel {\n  static type = '[CommentStateModel] SetLabel'\n  constructor(public label: string) {}\n}\n\nexport class SetTypeFilter {\n  static type = '[CommentStateModel] SetTypeFilter'\n  constructor(public type: string) {}\n}\n\nexport class ResetTypeComments {\n  static type = '[CommentStateModel] ResetTypeComments'\n  constructor(public type: string) {}\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nimport { Formloco, Summit, Platform } from '../app/state/app.state'\n\nexport const environment = {\n  production: false,\n\n  // kioske: true,\n  // designUrl: Formloco.designKioskeUrl,\n\n  kioske: false,\n  // designUrl: 'http://localhost:4201',\n  // design is an external app\n  designUrl: Formloco.designUrl,\n  version: Platform.version,\n  \n  homeUrl: 'http://localhost:4200',\n  // messageUrl is used by email service to embed link in notification email\n  messageUrl: 'http://localhost:4200/message/',\n\n  // local endpoints\n  // apiUrl: 'http://localhost:9001/api/',\n  // authUrl: 'http://localhost:9000/auth/',\n  // formUrl: 'http://localhost:9002/form/',\n  // emailUrl: 'http://localhost:9003/email/',\n  // assetUrl: 'http://localhost:9005/asset/',\n  // notificationUrl: 'http://localhost:9004/',\n\n  // router re-directs, message comes from email link\n  // signinUrl: 'http://localhost:4200/e93f63d8e62d44da93009229f8a7f890/',\n  // redirectForgotPasswordUrl: 'http://localhost:4200/O451fd2702f54a00b1007f6e80b32e45/',\n\n\n  apiUrl: Summit.apiUrl,\n  authUrl: Summit.authUrl,\n  formUrl: Summit.formUrl,\n  emailUrl: Summit.emailUrl,\n  assetUrl: Summit.assetUrl,\n  notificationUrl: Summit.notificationUrl,\n\n  signinUrl: Summit.signinUrl,\n  redirectForgotPasswordUrl: Summit.redirectForgotPasswordUrl,\n\n  tenant: { email: Summit.email, tenant_id: Summit.tenant },\n  logo: Summit.logo,\n  idbName: Summit.idbName,\n  pin: Summit.pin,\n\n  // kioske links\n  linkedinUrl: Formloco.linkedinUrl,\n  githubUrl: Formloco.githubUrl,\n  \n  // apiUrl: Formloco.apiUrl,\n  // authUrl: Formloco.authUrl,\n  // formUrl: Formloco.formUrl,\n  // emailUrl: Formloco.emailUrl,\n  // assetUrl: Formloco.assetUrl,\n  // notificationUrl: Formloco.notificationUrl,\n  \n  // signinUrl: Formloco.signinUrl,\n  // tenant: { email: Formloco.email, tenant_id: Formloco.tenant },  \n\n  // logo: Formloco.logo,\n  // lastUpdate: Platform.lastUpdate,\n  // idbName: Formloco.idbName,\n  // pin: Formloco.pin\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core'\nimport { openDB, deleteDB } from 'idb'\nimport { Observable, from } from 'rxjs'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdbPersistenceService {\n\n  private idb;\n  idbName = environment.idbName\n\n  async connect(): Promise<void> {\n    this.idb = await openDB(this.idbName, 1, {\n      upgrade(db) {\n        db.createObjectStore('prefs', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('form', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('pics', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('voice', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('data', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('lists', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('workers', { keyPath: 'id', autoIncrement: true })\n        db.createObjectStore('supervisors', { keyPath: 'id', autoIncrement: true })\n      }\n    })\n\n    // this.idb = await deleteDB(this.idbName)\n  }\n\n  read(storeName: string, key): Observable<any> {\n    return from(this.idb.get(storeName, key))\n  }\n\n  readAll(storeName: string): Observable<any> {\n    return from(this.idb.getAll(storeName))\n  }\n\n  add(storeName: string, item: any): Observable<any> {\n    return from(this.idb.add(storeName, item))\n  }\n  \n  // update, create for auto-increment store\n  put(storeName: string, item: any): Observable<any> {\n    return from(this.idb.put(storeName, item))\n  }\n\n  delete(storeName: string, key: any): Observable<any> {\n    return from(this.idb.delete(storeName, key))\n  }\n\n  deleteDb(): Observable<any> {\n    return from(this.idb.delete(this.idbName))\n  }\n\n  clear(storeName: string): Observable<any> {\n    return from(this.idb.clear(storeName))\n  }\n\n}\n\n","import { Component, OnInit } from '@angular/core'\n\nimport * as _moment from 'moment'\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { ApiService } from \"../../../service/api.service\"\nimport { AppService } from \"../../../service/app.service\"\nimport { FormService } from \"../../../service/form.service\"\nimport { EmailService } from '../../../service/email.service'\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { AutoCompleteService } from \"../../../service/auto-complete.service\"\n\nimport { MEANINGFUL_SITE_TOUR } from './state/meaningful-site-tour.model'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\n\nimport { NotificationState } from '../../../state/notification/notification.state'\nimport { environment } from '../../../../environments/environment';\n\nimport { SetPics } from '../../../state/device/device-state.actions'\n@Component({\n  selector: 'app-meaningful-site-tour',\n  templateUrl: './meaningful-site-tour.component.html',\n  styleUrls: ['./meaningful-site-tour.component.scss']\n})\nexport class MeaningfulSiteTourComponent implements OnInit {\n\n  pics\n  kioske\n  formData\n  formDataID\n  step = 0\n  isEdit = false\n  isOnline\n  notificationObj\n  messageUrl = environment.messageUrl;\n\n  headerForm: FormGroup\n  notesForm: FormGroup\n  todoForm: FormGroup\n\n  MEANINGFUL_SITE_TOUR = MEANINGFUL_SITE_TOUR\n\n  constructor(\n    private store: Store,\n    private snackBar: MatSnackBar,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private formService: FormService,\n    private emailService: EmailService,\n    private idbCrudService: IdbCrudService,\n    private autoCompleteService: AutoCompleteService) {\n    this.headerForm = this.formBuilder.group({\n      Date: [null, Validators.required],\n      Name: [null, Validators.required],\n      Location: [],\n    })\n    this.todoForm = this.formBuilder.group({\n      SiteOrientation: [],\n      DailySafetyMeeting: [],\n      SiteTour: [],\n      SiteTourWithWorker: [],\n      ReviewDiscuss: [],\n      PositiveInterventionRecognition: [],\n      EngageWithContractors: [],\n      HousekeepingInspection: [],\n      CompleteBBO: [],\n      OpenTeamDiscussion: [],\n      SafetyAlert: [],\n      ProvideFeedback: [],\n      FormalAuditInspection: []\n    })\n    this.notesForm = this.formBuilder.group({\n      PositiveObservations: [null, Validators.required],\n      ImprovementOpportunities: [null, Validators.required],\n      FeedbackSummary: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n\n    this.store.select(AuthState.formData).subscribe(formData => {\n      this.formData = formData\n      if (this.formData && formData[\"data\"]) {\n        this.isEdit = true\n        this.setFormData(formData[\"data\"])\n      }\n    })\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++\n  }\n\n  prevStep() {\n    this.step--\n  }\n\n  showSnackBar(msg) {\n    this.snackBar.open(msg.message, 'Success', {\n      duration: 3000,\n      verticalPosition: 'bottom'\n    })\n  }\n\n  setFormData(data) {\n    if (data.header) {\n      this.headerForm.controls['Date'].setValue(data.header.Date)\n      this.headerForm.controls['Name'].setValue(data.header.Name)\n      this.headerForm.controls['Location'].setValue(data.header.Location)\n      this.autoCompleteService.workersControl.setValue(data.header.Worker)\n      this.autoCompleteService.supervisorsControl.setValue(data.header.Supervisor)\n    }\n\n    if (data.todo) {\n      this.todoForm.controls['SiteOrientation'].setValue(data.todo.SiteOrientation)\n      this.todoForm.controls['DailySafetyMeeting'].setValue(data.todo.DailySafetyMeeting)\n      this.todoForm.controls['SiteTour'].setValue(data.todo.SiteTour)\n      this.todoForm.controls['SiteTourWithWorker'].setValue(data.todo.SiteTourWithWorker)\n      this.todoForm.controls['ReviewDiscuss'].setValue(data.todo.ReviewDiscuss)\n      this.todoForm.controls['PositiveInterventionRecognition'].setValue(data.todo.PositiveInterventionRecognition)\n      this.todoForm.controls['EngageWithContractors'].setValue(data.todo.EngageWithContractors)\n      this.todoForm.controls['HousekeepingInspection'].setValue(data.todo.HousekeepingInspection)\n      this.todoForm.controls['CompleteBBO'].setValue(data.todo.CompleteBBO)\n      this.todoForm.controls['OpenTeamDiscussion'].setValue(data.todo.OpenTeamDiscussion)\n      this.todoForm.controls['SafetyAlert'].setValue(data.todo.SafetyAlert)\n      this.todoForm.controls['ProvideFeedback'].setValue(data.todo.ProvideFeedback)\n      this.todoForm.controls['FormalAuditInspection'].setValue(data.todo.FormalAuditInspection)\n    }\n\n    if (data.notes) {\n      this.notesForm.controls['PositiveObservations'].setValue(data.notes.PositiveObservations)\n      this.notesForm.controls['ImprovementOpportunities'].setValue(data.notes.ImprovementOpportunities)\n      this.notesForm.controls['FeedbackSummary'].setValue(data.notes.FeedbackSummary)\n    }\n  }\n\n  updateForm() {\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n    const user = this.store.selectSnapshot(AuthState.user)\n    const notification = this.store.selectSnapshot(NotificationState.notification)\n\n    let header = this.headerForm.value\n    let todo = this.todoForm.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let data = {\n      header: header,\n      todo: todo,\n      notes: this.notesForm.value\n    }\n\n    this.formService.updateForm(form, this.formData, data).subscribe(_ => {\n      this.appService.sendEmail()\n      this.resetForm()\n    })\n\n  }\n\n  submitForm() {\n    const user = this.store.selectSnapshot(AuthState.user)\n    const form = this.store.selectSnapshot(AuthState.selectedForm)\n\n    let userCreated = {\n      email: user.email,\n      date_created: this.appService.now\n    }\n\n    let header = this.headerForm.value\n    header.Worker = this.autoCompleteService.workersControl.value\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value\n\n    let todo = this.todoForm.value\n\n    let data = {\n      header: header,\n      todo: todo,\n      notes: this.notesForm.value\n    }\n\n    let obj = {\n      data: JSON.stringify(data),\n      user: userCreated,\n      form: form,\n      type: 'custom',\n      date: this.appService.now,\n      name: form[\"name\"],\n      pics: this.store.selectSnapshot(DeviceState.pics)\n    }\n\n    if (!this.isOnline) {\n      this.setNotificationObj(header, form)\n      obj['notification'] = this.notificationObj\n      this.idbCrudService.put('data', obj)\n    }\n    else {\n      this.apiService.save(obj).subscribe(idObj => {\n        this.formDataID = idObj\n\n        const workers: any = this.store.selectSnapshot(AuthState.workers)\n        const supervisors: any = this.store.selectSnapshot(AuthState.supervisors)\n\n        if (workers.length == 0 && supervisors.length == 0)\n          this.snackBar.open(\"Notifications not setup, please add workers and supervisors.\", 'Attention', {\n            duration: 3000,\n            verticalPosition: 'bottom'\n          })\n        else {\n          this.setNotificationObj(header, form)\n          const worker: any = this.appService.getWorker(header.Worker)\n          const supervisor: any = this.appService.getSupervisor(header.Supervisor)\n\n          this.appService.createNotification(this.notificationObj)\n          this.resetForm()\n        }\n      })\n    }\n  }\n\n  setNotificationObj(header, form) {\n    this.notificationObj = {\n      name: form[\"name\"],\n      worker: this.appService.getWorker(header.Worker),\n      supervisor: this.appService.getSupervisor(header.Supervisor),\n      description: 'Meaningful Site Tour ' + this.appService.now,\n      message: 'Meaningful site tour completed for ' + this.headerForm.controls['Name'].value,\n      subject: 'New Meaningful Site Tour from ' + header.Worker + ', ' + this.appService.now,\n      form_id: form[\"form_id\"],\n      data_id: this.formDataID,\n      pdf: 'meaningful-site-tour' + this.formDataID\n    }\n  }\n\n  resetForm() {\n    this.headerForm.reset()\n    this.notesForm.reset()\n    this.store.dispatch(new SetPics([]))\n    this.autoCompleteService.workersControl.reset()\n    this.autoCompleteService.supervisorsControl.reset()\n  }\n\n}\n","<mat-accordion>\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Conducting Your Tour\n      </mat-panel-title>\n      <mat-panel-description fxLayout=\"end\">*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-meaningful-site-tour-header [headerForm]=headerForm></app-meaningful-site-tour-header>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!headerForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Things To Do/Check\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-meaningful-site-tour-todo [todoForm]=todoForm></app-meaningful-site-tour-todo>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!headerForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Tour Etiquette Plan for Success\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-meaningful-site-tour-suggestions></app-meaningful-site-tour-suggestions>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!headerForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 3\" (opened)=\"setStep(3)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Observations, Improvement & Feedback\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-meaningful-site-tour-notes [notesForm]=notesForm></app-meaningful-site-tour-notes>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!notesForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 4\" (opened)=\"setStep(4)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"text-color\">\n        Signature\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div class=\"text-color\"><b>Signs of a great site tour:</b></div>\n    <div class=\"text-color\">\n      <ul>\n        <li>You have included a member of the work crew in your tour, not just management or client</li>\n        <li>You made it personal - you know the crew by their names and hobbies</li>\n        <li>You know you have been respectful, sincere, honest and focused</li>\n        <li>You have walked the work site, met our people, observed operations, understood the hazards, risks and\n          controls</li>\n        <li>You have listened more than you have talked</li>\n        <li>You personally thanked someone or the crew for being a safety leader and recognized that person / crew\n          before you leave the site</li>\n        <li>You have a clear picture of the follow-up conversation with the executive group or peers following the\n          visit. Be prepared to talk at weekly or monthly meetings about your site visit.</li>\n        <li>You have sent a “Thank-You” email or message and detailed your key findings, both positive take-aways and\n          opportunities for improvement</li>\n        <li>You plan to visit again to follow up</li>\n      </ul>\n    </div>\n    <br>\n    <div *ngIf=\"kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon class=\"icon-169px text-color\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"!isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"!headerForm.valid && !notesForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"headerForm.valid && notesForm.valid\" class=\"icon-169px-action hand\" (click)=\"submitForm()\">\n        fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"headerForm.valid && notesForm.valid\" class=\"icon-169px-action hand\" (click)=\"updateForm()\">\n        fingerprint</mat-icon>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-quill-run',\n  templateUrl: './quill-run.component.html',\n  styleUrls: ['./quill-run.component.scss']\n})\nexport class QuillRunComponent {\n\n  @Input() index;\n  \n  content;\n  quillConfig = {\n    toolbar: false,\n    theme: 'bubble'\n  };\n\n  constructor(public appService: AppService) { }\n\n}\n","<quill-view-html [content]=\"appService.detailArray[index].html\" theme=\"snow\"></quill-view-html>\n","import { Component, OnInit, Input } from '@angular/core'\n\nimport { FormControl, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-gps-run',\n  templateUrl: './gps-run.component.html',\n  styleUrls: ['./gps-run.component.scss']\n})\nexport class GpsRunComponent implements OnInit {\n\n  @Input() index\n  @Input() runForm\n\n  lat\n  long\n  isPosition = true\n\n  constructor() {}\n\n  ngOnInit() {\n    this.runForm.addControl('Latitude', new FormControl(''))\n    this.runForm.addControl('Longitude', new FormControl(''))  \n  }\n\n}\n","<div fxLayout=\"row\" class=\"text-color control-padding\" fxLayoutGap=\"20px\" fxFlexAlign=\"center center\">\n  <div>Latitude: </div>\n  <div>Longitude: </div>\n</div>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { ApiService } from \"../../../service/api.service\"\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { FormControl, Validators } from '@angular/forms'\n\n@Component({\n  selector: 'app-select-run',\n  templateUrl: './select-run.component.html',\n  styleUrls: ['./select-run.component.scss']\n})\nexport class SelectRunComponent implements OnInit {\n\n  multi: boolean\n  data\n  lists\n\n  @Input() index\n  @Input() runForm\n\n  constructor(\n    public appService: AppService,\n    private authService: AuthService,\n    private apiService: ApiService,\n    private idbCrudService: IdbCrudService) { }\n\n  ngOnInit() {\n    // if (this.appService.detailArray[this.index].list !== undefined) {\n    //  this.getListsCloud()\n    // }\n\n    this.multi = this.appService.detailArray[this.index].multiple\n    if (this.appService.detailArray[this.index].required)\n      this.runForm.addControl(this.appService.detailArray[this.index]\n        .formControlName, new FormControl(null, Validators.required))\n    else\n      this.runForm.addControl(this.appService.detailArray[this.index]\n        .formControlName, new FormControl(''))\n  }\n\n  getListsCloud() {\n    let obj = ({\n      form_id: this.appService.detailArray[this.index].list.form_id,\n      tenant_id: this.appService.detailArray[this.index].list.tenantID\n    })\n    this.apiService.getData(obj).subscribe(data => {\n      this.data = data\n      if (this.data.length === 0) this.appService.detailArray[this.index].selectArray = []\n      this.appService.detailArray[this.index].selectArray = this.data\n    })\n  }\n\n}\n\n","<div [formGroup]=\"runForm\" class=\"control-padding\" fxFlex>\n  <mat-form-field appearance=\"{{appService.detailArray[index].appearance}}\" fxFlex>\n    <mat-label>{{appService.detailArray[index].label}}</mat-label>\n    <span *ngIf=\"multi\">\n      <mat-select multiple formControlName=\"{{appService.detailArray[index].formControlName}}\" [required]=\"appService.detailArray[index].required\">\n        <mat-option *ngFor=\"let select of appService.detailArray[index].selectArray\" [value]=\"select.value\">\n          {{select.value}}\n        </mat-option>\n      </mat-select>\n    </span>\n    <span *ngIf=\"!multi\">\n      <mat-select formControlName=\"{{appService.detailArray[index].formControlName}}\" [required]=\"appService.detailArray[index].required\">\n        <mat-option *ngFor=\"let select of appService.detailArray[index].selectArray\" [value]=\"select.value\">\n          {{select.value}}\n        </mat-option>\n      </mat-select>\n    </span>\n    <mat-error>\n      {{appService.detailArray[index].error}}\n    </mat-error>\n  </mat-form-field>\n</div>","<div class=\"container-padding\">\n  <form fxLayout=\"column\" fxLayoutGap=\"5px\" [formGroup]=\"emailForm\">\n    <mat-form-field fxFlex>\n      <mat-label>Enter Name</mat-label>\n      <input matInput type=\"text\" formControlName=\"name\" placeholder=\"Enter Name\" required>\n      <mat-error>You must enter a name</mat-error>\n    </mat-form-field>\n    <mat-form-field fxFlex>\n      <mat-label>Enter Email</mat-label>\n      <input matInput type=\"text\" formControlName=\"email\" placeholder=\"Enter Email\" required>\n      <mat-error>You must enter a valid email</mat-error>\n    </mat-form-field>\n    <div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n      <mat-checkbox formControlName=\"worker\" color=\"primary\">Worker</mat-checkbox>\n      <mat-checkbox formControlName=\"supervisor\" color=\"primary\">Supervisor</mat-checkbox>\n    </div>\n    <br>\n    <button *ngIf=\"!(kioske$ | async)\" mat-raised-button (click)=\"save()\" color=\"primary\" [disabled]=\"!emailForm.valid\" runForm.type=\"submit\">\n      Add Email to List\n    </button>\n    <button *ngIf=\"(kioske$ | async)\" mat-raised-button (click)=\"save()\" color=\"primary\" [disabled]=\"true\" runForm.type=\"submit\">\n      Add Email to List\n    </button>\n  </form>\n  <br>\n  <div>\n    <table mat-table [dataSource]=\"appService.dataSource\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let element;\">\n          <span *ngIf=\"element.enabled\">\n            <mat-icon class=\"material-icons-outlined\" color=\"primary\">check_circle</mat-icon>\n          </span>\n          <span *ngIf=\"element.enabled === false\">\n            <mat-icon class=\"material-icons-outlined\" color=\"warn\">cancel</mat-icon>\n          </span>\n          <span *ngIf=\"element.enabled === null\">\n            <mat-icon class=\"material-icons-outlined\">do_not_disturb_on</mat-icon>\n          </span>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef>Email</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let element;\">\n          {{element.email}}\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row (click)=\"edit(i)\" *matRowDef=\"let row; let i = index; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core'\n\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\n\nimport { Observable } from 'rxjs'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { ErrorService } from \"../../../service/error.service\"\n\nimport { EmailEditComponent } from '../email-edit/email-edit.component'\n\nimport { environment } from '../../../../environments/environment'\n\n@Component({\n  selector: 'app-email-list',\n  templateUrl: './email-list.component.html',\n  styleUrls: ['./email-list.component.scss']\n})\nexport class EmailListComponent implements OnInit{\n\n  @Select(AuthState.lookupListName) lookupListName$: Observable<string>\n  emailForm: FormGroup\n\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  user\n  data\n  kioske\n  allData\n  selectedIdx\n  isSync = false\n  lookupListWorkers\n  lookupListSupervisors\n\n  displayedColumns: string[] = ['status', 'email']\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    public authService: AuthService,\n    private formBuilder: FormBuilder,\n    private errorService: ErrorService) {\n    this.emailForm = this.formBuilder.group({\n      name: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required, Validators.email])],\n      worker: [null],\n      supervisor: [null]\n    })\n  }\n\n  ngOnInit() {\n    const emailList:any = this.store.selectSnapshot(AuthState.emailList)\n    this.appService.dataSource.data = emailList\n  }\n\n  edit(idx) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = {idx: idx}\n    this.dialog.open(EmailEditComponent, dialogConfig)\n  }\n\n  save() {\n    let obj = Object.assign(this.emailForm.value)\n    this.authService.create(obj).subscribe(data => {\n      this.data = data\n      if (this.data.rows.length == 0)\n        this.errorService.popSnackbar(this.data.msg)\n      else {\n        this.emailForm.reset()\n        Object.keys(this.emailForm.controls).forEach((key) => {\n          const control = this.emailForm.controls[key];\n          control.setErrors(null);\n      });\n        this.appService.dataSource.data = this.data.rows\n      }\n    })\n  }\n\n}\n\n","<div *ngIf=\"kioske\" class=\"padding\" fxLayout=\"row\">\n  <div class=\"text-color mat-h1\">\n    Sign In\n  </div>\n  <span class=\"toolbar-spacer\"></span>\n  <button mat-icon-button (click)=\"close()\">\n    <mat-icon class=\"text-color\">close</mat-icon>\n  </button>\n</div>\n<div fxLayout=\"column\">\n  <form class=\"container-padding\" [formGroup]=\"idForm\">\n    <div fxLayout=\"column\">\n      <div class=\"text-color text-center\">\n        <div><img src=\"{{logo}}\"></div>\n      </div>\n      <br>\n      <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n        <mat-label>Company Email</mat-label>\n        <input matInput placeholder=\"Company Email\" formControlName=\"email\" type=\"text\" required>\n        <mat-error>\n          Proper email is required!\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n        <mat-label>Password</mat-label>\n        <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" required>\n        <mat-error>\n          Password is required!\n        </mat-error>\n      </mat-form-field>\n      <div class=\"hand\" fxLayoutAlign=\"center\">\n        <mat-icon *ngIf=\"!idForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n        <mat-icon *ngIf=\"idForm.valid\" class=\"icon-169px-action\" (click)=\"signin()\">fingerprint</mat-icon>\n      </div>\n    </div>\n  </form>\n  <br>\n  <div>\n    <button (click)=\"getEmail()\" mat-stroked-button color=\"primary\" fxFlex>Reset Password</button>\n  </div>\n</div>","import { Component } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Router } from '@angular/router'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { environment } from '../../../../environments/environment'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { ErrorService } from \"../../../service/error.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage, SetUser, SetChildPageLabel, SetTenant, SetIsSignIn, SetKioske } from '../../../state/auth/auth-state.actions'\nimport { SetIsDarkMode } from '../../../state/device/device-state.actions'\n\nimport { IdbPersistenceService } from '../../../service-idb/idb-persistence.service';\n@Component({\n  selector: 'app-identification',\n  templateUrl: './identification.component.html',\n  styleUrls: ['./identification.component.scss']\n})\nexport class IdentificationComponent {\n\n  @Select(DeviceState.isDarkMode) isDarkMode$: Observable<boolean>\n\n  version = environment.version\n  logo = environment.logo\n  kioske = environment.kioske\n  tenant = environment.tenant\n\n  data\n  idForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private fb: FormBuilder,\n    public appService: AppService,\n    private authService: AuthService,\n    private errorService: ErrorService,\n    private idbCrudService: IdbCrudService,\n    private idbPersistenceService: IdbPersistenceService) {\n    this.idForm = this.fb.group({\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required,]]\n    })\n  }\n\n  signin() {\n    if (this.kioske) {\n      // tenant got from formloco kioske signin\n      // endpoint runs against kioske user db\n      this.authService.getTenant(this.idForm.value).subscribe((tenant: any) => {\n        this.store.dispatch(new SetTenant({\n          email: this.idForm.value['email'],\n          tenant_id: tenant.tenant_id\n        }))\n        this.store.dispatch(new SetKioske(false))\n        // this.appService.setIndexedDbUser(this.idForm.value['email'], tenant.tenant_id)\n        this.registerUser(tenant.tenant_id)\n      })\n    }\n    // tenant got from mobile environment\n    // endpoint runs against tenant user db\n    else {\n      // this.appService.setIndexedDbUser(this.idForm.value['email'], this.tenant.tenant_id)\n      this.registerUser(this.tenant.tenant_id)\n    }\n  }\n\n  registerUser(tenant_id) {\n    // register cheecks for account, account disabled, no account and valid password\n    this.authService.register(this.idForm.value).subscribe(response => {\n\n      if (response['row']) {\n        this.authService.user({ email: this.idForm.value['email'] }).subscribe((user: any) => {\n          if (user.row) {\n            this.store.dispatch(new SetUser(user.row))\n            this.appService.initializeUser()\n    \n            if (this.kioske) this.router.navigate(['forms/' + this.idForm.value['email'] + '/' + tenant_id])\n            else this.store.dispatch(new SetPage('home'))\n    \n            this.store.dispatch(new SetIsSignIn(true))\n            this.store.dispatch(new SetIsDarkMode(true))\n            this.store.dispatch(new SetChildPageLabel('Forms'))\n          }\n        })\n      }\n      else this.errorService.popSnackbar(response['message'])\n    })\n  }\n\n  getEmail() {\n    this.store.dispatch(new SetPage('send-password'))\n  }\n\n  upGradeIndexDB() {\n    this.idbPersistenceService.deleteDb()\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('kioske'))\n  }\n\n}\n","<form fxLayout=\"column\" [formGroup]=\"headerForm\">\n  <ion-label position=\"stacked\">Choose a date</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"Date\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <br>\n  <mat-form-field>\n    <mat-label>Others included in the Tour</mat-label>\n    <input matInput placeholder=\"Others included in the Tour\" formControlName=\"Name\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Location</mat-label>\n    <input matInput placeholder=\"\" formControlName=\"Location\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field class=\"bot-pad full-width-field\">\n    <mat-label> First & Last Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter First Name & Last Name\" matInput\n      [formControl]=\"autoCompleteService.workersControl\" [matAutocomplete]=\"autoWorkers\" required>\n    <mat-hint>Worker Completing the Tour</mat-hint>\n    <mat-autocomplete #autoWorkers=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Supervisor Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Supervisor Name\" matInput\n      [formControl]=\"autoCompleteService.supervisorsControl\" [matAutocomplete]=\"autoSupervisors\" required>\n    <mat-autocomplete #autoSupervisors=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let supervisor of autoCompleteService.filteredSupervisors$ | async\" [value]=\"supervisor.name\"\n        required>\n        {{supervisor.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <div class=\"text-color\">\n    <p class=\"text-color\"><b>10 Questions to Ask:</b></p>\n    <p class=\"text-color\">How does it work here?&nbsp;How does the day start?&nbsp;How are daily safety meetings\n      conducted?&nbsp;What is discussed?<br>\n      What are the top 3 things that Summit should focus on or fix?<br>\n      What are the main hazards to this operation or site/location and how well do we mitigate them?<br>\n      How would you describe Summit's safety culture to your coworkers/family/friends - would you encourage people to\n      work for Summit?<br>\n      Do you, your crew or site believe that Summit is fully committed to putting people's safety before profits?<br>\n      When was the last time you/we intervened at this site?<br>\n      How comfortable is everyone with intervention?<br>\n      What are you proud of at this site?<br>\n      Make it personal.<br>\n      Start conversation - How long with Summit? Family? Hobbies?<br>\n      Do you believe you have support to STOP work or refuse unsafe work?<br>\n      Is there a short service worker program in place?<br>\n      Does it work?<br>\n      Competency process?</p>\n  </div>\n</form>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\n\nimport { AutoCompleteService } from \"../../../../service/auto-complete.service\"\n\n@Component({\n  selector: 'app-meaningful-site-tour-header',\n  templateUrl: './meaningful-site-tour-header.component.html',\n  styleUrls: ['./meaningful-site-tour-header.component.scss']\n})\nexport class MeaningfulSiteTourHeaderComponent implements OnInit {\n\n  @Input() headerForm\n\n  header\n  lookupLists\n\n  customYearValues = [2025, 2024, 2023, 2022, 2021, 2016, 2008, 2004, 2000, 1996];\n  customDayShortNames = ['s\\u00f8n', 'man', 'tir', 'ons', 'tor', 'fre', 'l\\u00f8r'];\n  customPickerOptions: any;\n  \n  constructor(\n    public autoCompleteService: AutoCompleteService) { \n     }\n\n  ngOnInit(): void {\n    this.headerForm.controls['Date'].setValue(new Date().toISOString())\n  }\n\n}\n","<mat-toolbar>\n  <mat-toolbar-row>\n    <div fxLayoutAlign=\"space-around center\">\n      <mat-icon color=\"primary\" class=\"material-icons-outlined\">dynamic_form</mat-icon>\n      <div class=\"primary\">&nbsp;Forms</div>\n    </div>\n    <span class=\"toolbar-spacer\"></span>\n    <div class=\"text-color\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"15px\">\n      <a *ngIf=\"(isOnline$ | async)\" mat-icon-button (click)=\"openNotifications(0)\" color=\"primary\">\n        <mat-icon class=\"material-icons-outlined\" matBadgeColor=\"warn\" matBadge=\"{{notificationCount$ | async}}\">notifications</mat-icon>\n      </a>\n      <a mat-icon-button (click)=\"openProfile()\" color=\"primary\">\n        <mat-icon class=\"material-icons-outlined\">person</mat-icon>\n      </a>\n      <a *ngIf=\"kioske\" mat-icon-button color=\"primary\" href=\"{{homeUrl}}\">\n        <mat-icon class=\"material-icons-outlined\">home</mat-icon>\n      </a>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<div class=\"form-padding\" *ngFor=\"let formObj of (formsPublished$ | async)\">\n  <mat-card *ngIf=\"formObj.is_published\" class=\"hand\" (click)=selectForm(formObj)>\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon text-color material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n      </div>\n      <mat-card-title class=\"text-color\">{{ formObj.name }}</mat-card-title>\n      <mat-card-subtitle>{{ formObj.description }}</mat-card-subtitle>\n    </mat-card-header>\n  </mat-card>\n</div>\n<div class=\"footer\">\n  <mat-toolbar>\n    <div fxLayoutAlign=\"space-around center\">\n      <div *ngIf=\"(isOnline$ | async)\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"10px\">\n        <a mat-stroked-button color=\"accent\" href='{{designUrl}}'>\n          <mat-icon>design_services</mat-icon>&nbsp;Design\n        </a>\n        <a *ngIf=\"user?.admin\" mat-stroked-button (click)=\"signin()\" color=\"primary\">\n          <mat-icon class=\"material-icons-outlined\">admin_panel_settings</mat-icon>&nbsp;Admin\n        </a>\n      </div>\n    </div>\n    <span class=\"toolbar-spacer\"></span>\n    <img src=\"assets/parrot.svg\" height=\"28px\">&nbsp;<span class=\"mat-small text-color\">{{version}}</span>\n  </mat-toolbar>\n</div>","import { Component, Output, EventEmitter, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { AppService } from \"../../service/app.service\"\nimport { NotificationService } from '../../service/notification.service'\n\nimport { environment } from '../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\n\nimport { AuthState } from '../../state/auth/auth.state'\nimport { SetComments } from '../comment/state/comment.actions'\nimport { SetCorrectiveActions } from '../corrective-action/state/corrective-action.actions'\n\nimport { SetPage, SetSelectedForm, SetIsSignIn, SetChildPageLabel, SetFormData, SetChildPage, SetChildPageIcon } from '../../state/auth/auth-state.actions'\nimport { DeviceState } from '../../state/device/device.state'\nimport { Form } from '../../state/auth/auth-state.model'\n\nimport { NotificationState } from '../../state/notification/notification.state'\nimport { SetNotificationTab, SetNotificationMyCount, SetNotificationOpen } from '../../state/notification/notification-state.actions'\n\nimport { IdbPersistenceService } from '../../service-idb/idb-persistence.service';\n\nimport { SignupComponent } from \"../admin/signup/signup.component\"\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  @Output() changeTheme = new EventEmitter()\n\n  @Select(AuthState.isSignIn) isSignIn$: Observable<boolean>\n  @Select(AuthState.formsPublished) formsPublished$: Observable<Form[]>\n  @Select(AuthState.childPageLabel) childPageLabel$: Observable<string>\n\n  @Select(DeviceState.isOnline) isOnline$: Observable<boolean>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(DeviceState.isDarkMode) isDarkMode$: Observable<boolean>\n\n  @Select(NotificationState.notificationMyCount) notificationCount$: Observable<number>\n\n  user\n  form\n  prefs\n  tenant\n  checkform\n  notificationCount\n\n  kioske = environment.kioske\n  version = environment.version\n  signinUrl = environment.signinUrl\n  homeUrl = environment.homeUrl\n  designUrl = environment.designUrl\n  kioskeTenant = environment.tenant\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private bottomSheet: MatBottomSheet,\n    private idbPersistenceService: IdbPersistenceService,\n    private notificationService: NotificationService) { }\n\n  ngOnInit() {\n    this.user = this.store.selectSnapshot(AuthState.user)\n    this.tenant = this.store.selectSnapshot(AuthState.tenant)\n\n    setInterval(() => {\n      const isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n\n      if (this.user && isOnline) {\n        this.notificationService.getMyNotificationCount().subscribe((notification: any) => {\n          if (notification.count == 0) this.store.dispatch(new SetNotificationMyCount(undefined))\n          else this.store.dispatch(new SetNotificationMyCount(notification.count))\n        })\n      }\n    }, 120000)\n  }\n\n  selectForm(form) {\n    this.store.dispatch(new SetComments([]))\n    this.store.dispatch(new SetCorrectiveActions([]))\n    this.store.dispatch(new SetFormData([]))\n    this.store.dispatch(new SetSelectedForm(form))\n    this.store.dispatch(new SetChildPage(null))\n    this.store.dispatch(new SetPage('form'))\n  }\n\n  goPIN() {\n    this.store.dispatch(new SetPage('pin'))\n  }\n\n  goAdmin() {\n    this.store.dispatch(new SetPage('pin'))\n  }\n\n  signin() {\n    this.store.dispatch(new SetPage('admin'))\n    this.store.dispatch(new SetChildPage('dashboard'))\n    this.store.dispatch(new SetChildPageLabel('Dashboard'))\n    this.store.dispatch(new SetChildPageIcon('space_dashboard'))\n    this.store.dispatch(new SetIsSignIn(true))\n    this.appService.initializeAdminNotifications()\n  }\n\n  signup() {\n    this.bottomSheet.open(SignupComponent)\n  }\n\n  toggleTheme() {\n    this.changeTheme.emit()\n  }\n\n  openNotifications(tabIndex) {\n    if (tabIndex === 0) {\n      // const user = this.store.selectSnapshot(AuthState.userIdb)\n      this.notificationService.getMyNotifications().subscribe((notifications: any) => {\n        let openNotifications: any = []\n        notifications.forEach(element => {\n          if (!element.email_signed) openNotifications.push(element)\n        })\n        this.store.dispatch(new SetNotificationOpen(openNotifications))\n      })\n    }\n    this.store.dispatch(new SetPage('notification'))\n    this.store.dispatch(new SetChildPageLabel('Notifications'))\n    this.store.dispatch(new SetNotificationTab(tabIndex))\n  }\n\n  openProfile() {\n    this.store.dispatch(new SetPage('profile'))\n  }\n\n  upGradeIndexDB() {\n    this.idbPersistenceService.deleteDb()\n  }\n\n}\n","<div class=\"responsive-container\">\n  <!-- purposely commented out - used to add list for each mobile form app -->\n  <!-- <div class=\"lookup-bnt\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <button mat-stroked-button (click)=\"isLookupOpen = !isLookupOpen\" cdkOverlayOrigin\n      #lookupTrigger=\"cdkOverlayOrigin\">\n      Create List\n    </button>\n    <ng-template cdkConnectedOverlay [cdkConnectedOverlayOrigin]=\"lookupTrigger\"\n      [cdkConnectedOverlayOpen]=\"isLookupOpen\" (backdropClick)=\"closeOverlay()\" [cdkConnectedOverlayHasBackdrop]=true\n      cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\" cdkConnectedOverlayOffsetX\n      cdkConnectedOverlayOffsetY>\n      <form [formGroup]=\"lookupListForm\">\n        <div [ngStyle]=\"{'background-color': (background$ | async)}\" class=\"link-overlay\" fxLayout=\"column\">\n          <div>\n            <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n              <mat-label>List</mat-label>\n              <input matInput placeholder=\"Lookup List Name\" formControlName=\"lookupListName\" type=\"text\" required>\n              <mat-error>\n                List is required!\n              </mat-error>\n            </mat-form-field>\n          </div>\n          <div fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"1rem\">\n            <button (click)=\"createLookuplist()\" mat-raised-button color=\"primary\" [disabled]=\"!lookupListForm.valid\">\n              Create List\n            </button>\n            <button mat-stroked-button color=\"primary\" (click)=\"closeOverlay()\">\n              Cancel\n            </button>\n          </div>\n        </div>\n      </form>\n    </ng-template>\n  </div> -->\n  <div fxLayout=\"row wrap\">\n    <mat-card (click)=run(name) class=\"custom hand\" *ngFor=\"let name of (lookupListNames$ | async)\">\n      <div class=\"action-label\" fxLayoutAlign=\"center\">{{name}}</div>\n      <div>\n        <mat-icon class=\"card-icon\">list</mat-icon>\n      </div>\n    </mat-card>\n  </div>\n</div>","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Validators, FormGroup, FormBuilder } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { FormService } from \"../../../service/form.service\"\nimport { ApiService } from \"../../../service/api.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetChildPage, SetChildPageLabel , SetLookupListName } from '../../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../../environments/environment'\n\n@Component({\n  selector: 'app-form-lists',\n  templateUrl: './form-lists.component.html',\n  styleUrls: ['./form-lists.component.scss']\n})\nexport class FormListsComponent {\n\n  @Select(AuthState.lookupListNames) lookupListNames$: Observable<any>\n  @Select(DeviceState.background) background$: Observable<string>\n\n  @Output() selectChild = new EventEmitter<any>()\n\n  token\n  lookupLists\n  isLookupOpen = false\n\n  lookupListForm: FormGroup\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private formBuilder: FormBuilder,\n    private formService: FormService,\n    private apiService: ApiService) {\n    this.lookupListForm = this.formBuilder.group({\n      lookupListName: ['', Validators.required]\n    })\n  }\n\n  createLookuplist() {\n    let form = this.appService.createList(this.lookupListForm.get('lookupListName').value)\n    this.formService.createForm(form).subscribe(res => {\n      this.closeOverlay()\n      this.lookupListForm.reset()\n      const tenant = this.store.selectSnapshot(AuthState.tenant)\n      this.apiService.getLists({tenant_id: tenant.tenant_id}).subscribe(lists => {\n        this.appService.lookupLists = lists\n      })\n    })\n  }\n\n  run(name) {\n    this.store.dispatch(new SetLookupListName(name))\n    this.store.dispatch(new SetChildPage('list'))\n    this.store.dispatch(new SetChildPageLabel('Form Lists'))\n    const lookupListArray = this.store.selectSnapshot(AuthState.lookupListData)\n    const lookupList = lookupListArray.find(list => list[\"name\"] == name)\n    \n    if (lookupList) this.appService.dataSource.data = lookupList[\"rows\"]\n    else this.appService.dataSource.data = []\n    this.appService.isListMenu = false\n  }\n\n  closeOverlay() {\n    this.isLookupOpen = false\n  }\n\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-toggle-run',\n  templateUrl: './toggle-run.component.html',\n  styleUrls: ['./toggle-run.component.scss']\n})\nexport class ToggleRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    this.appService.detailArray[this.index].toggleArray.forEach(element => {\n      if (element.required)\n        this.runForm.addControl(element.formControlName, \n            new FormControl(false, Validators.required));\n      else\n        this.runForm.addControl(element.formControlName, new FormControl(false));\n    });\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding\" fxLayoutGap=\"10px\">\n  <div fxLayout=\"row\">\n    <label>{{appService.detailArray[index].label}}</label>\n  </div>\n  <div fxLayout=\"row\" fxLayoutGap=\"10px\">\n    <mat-slide-toggle *ngFor=\"let toggle of appService.detailArray[index].toggleArray\"\n      formControlName=\"{{toggle.formControlName}}\"\n      [labelPosition]=\"toggle.labelPosition\" \n      [required]=\"toggle.required\">\n      {{toggle.label}}\n    </mat-slide-toggle>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SuccessService {\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  popSnackbar(message) {\n    this.snackBar.open(message, \"Success:\", {duration: 3000})\n  }\n\n}\n","<div class=\"padding\" fxLayoutAlign=\"center space-between\" fxLayout=\"row\">\n  <div fxLayoutAlign=\"start center\" class=\"text-color\">Reset Password</div>\n  <span class=\"toolbar-spacer\"></span>\n  <div>\n    <button (click)=close() mat-icon-button>\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </div>\n</div>\n<div fxLayout=\"column\">\n  <form class=\"container-padding\" [formGroup]=\"emailForm\">\n    <div fxLayout=\"column\">\n      <div class=\"text-color text-center\">\n        <div><img src=\"{{logo}}\"></div>\n      </div>\n      <br>\n      <h3 class=\"text-color text-center\">Send Password Reset Email</h3>\n      <br>\n      <mat-form-field appearance=\"outline\" fxFlex>\n        <mat-label>Company Email</mat-label>\n        <input matInput placeholder=\"Company Email\" formControlName=\"email\" type=\"text\" required>\n        <mat-error>\n          Proper email is required!\n        </mat-error>\n      </mat-form-field>\n      <div class=\"hand\" fxLayoutAlign=\"center\">\n        <mat-icon *ngIf=\"!emailForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n        <mat-icon *ngIf=\"emailForm.valid\" class=\"icon-169px-action\" (click)=\"forgotPasswordEmail()\">fingerprint\n        </mat-icon>\n      </div>\n    </div>\n  </form>\n</div>","import { Component } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { EmailService } from \"../../../service/email.service\"\nimport { ErrorService } from \"../../../service/error.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { SetPage } from '../../../state/auth/auth-state.actions'\nimport { IdbPersistenceService } from '../../../service-idb/idb-persistence.service'\n\n@Component({\n  selector: 'app-send-password',\n  templateUrl: './send-password.component.html',\n  styleUrls: ['./send-password.component.scss']\n})\nexport class SendPasswordComponent {\n\n  logo = environment.logo\n\n  @Select(AuthState.childPage) childPage$: Observable<string>\n\n  emailForm: FormGroup\n\n  redirectForgotPasswordUrl = environment.redirectForgotPasswordUrl\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private emailService: EmailService,\n    private errorService: ErrorService,\n    private successService: SuccessService,\n    private idbPersistenceService: IdbPersistenceService) { \n    this.emailForm = this.fb.group({\n      email: [null, [Validators.required, Validators.email]]\n    })\n  }\n\n  forgotPasswordEmail() {\n    let obj = {\n      tenant: environment.tenant,\n      email: this.emailForm.value['email'],\n      url: this.redirectForgotPasswordUrl\n    }\n    if (obj.email !== null)\n    this.emailService.forgotPassword(obj).subscribe(() => {\n      this.successService.popSnackbar('Email Sent.')\n      this.store.dispatch(new SetPage('identify'))\n      this.idbPersistenceService.deleteDb()\n    })\n    else this.errorService.popSnackbar('Please Enter a Valid Email.')\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('identify'))\n  }\n\n}\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\nimport { DeviceState } from '../../../../state/device/device.state'\n\nimport { SetSelectedVoiceFieldLabel } from '../../../../state/auth/auth-state.actions'\nimport { SetTranscription } from '../../../../state/device/device-state.actions'\nimport { VoiceComponent } from '../../../voice/voice.component'\nimport { AppService } from \"../../../../service/app.service\"\n\n@Component({\n  selector: 'app-meaningful-site-tour-notes',\n  templateUrl: './meaningful-site-tour-notes.component.html',\n  styleUrls: ['./meaningful-site-tour-notes.component.scss']\n})\nexport class MeaningfulSiteTourNotesComponent {\n\n  @Input() notesForm\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService) { }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.notesForm, formField, title)\n  }\n}\n","<form [formGroup]=\"notesForm\">\n  <div>\n    <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n      <div>\n        <mat-label>Positive Obervations</mat-label>\n      </div>\n      <div>\n        <button (click)=\"openVoice('PositiveObservations','Positive Obervations')\" mat-mini-fab color=\"primary\">\n          <mat-icon matSuffix>mic_none</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div>\n      <mat-form-field fxFlex>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n          formControlName=\"PositiveObservations\" fxFlex></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n  <br>\n  <div>\n    <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n      <div>\n        <mat-label>Opportunities for Improvement</mat-label>\n      </div>\n      <div>\n        <button (click)=\"openVoice('ImprovementOpportunities','Opportunities for Improvement')\" mat-mini-fab\n          color=\"primary\">\n          <mat-icon matSuffix>mic_none</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div>\n      <mat-form-field fxFlex>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n          formControlName=\"ImprovementOpportunities\" fxFlex></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n  <br>\n  <div>\n    <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n      <div>\n        <mat-label>Summary & Feedback</mat-label>\n      </div>\n      <div>\n        <button (click)=\"openVoice('FeedbackSummary','Summary & Feedback')\" mat-mini-fab color=\"primary\">\n          <mat-icon matSuffix>mic_none</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div>\n      <mat-form-field fxFlex>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n          formControlName=\"FeedbackSummary\" fxFlex></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n</form>","/**\n * adminstration of the forms is run from the json model locally\n * to add a form \n * users consume forms from indexedDB\n */\nimport { Component } from '@angular/core'\nimport { Observable } from 'rxjs'\n\nimport * as _ from 'lodash'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { ErrorService } from '../../../service/error.service'\nimport { FormService } from \"../../../service/form.service\"\nimport { SuccessService } from \"../../../service/success.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { LISTS } from \"../../../model/forms\"\nimport { Form } from '../../../state/auth/auth-state.model'\n\n// custom forms\nimport { VEHICLE_INSPECTION } from '../../forms/vehicle-inspection/state/vehicle-inspection-state.model'\nimport { MEANINGFUL_SITE_TOUR } from '../../forms/meaningful-site-tour/state/meaningful-site-tour.model'\nimport { WORKSITE_SAFETY_INSPECTION } from '../../forms/worksite-safety-inspection/state/worksite-safety-inspection-state.model'\nimport { SPOT_CHECK_SAFETY } from '../../forms/spot-check-safety/state/spot-check-safety.model'\n\nimport { SetSelectedForm, SetLookupListNames } from '../../../state/auth/auth-state.actions'\nimport { SetPage, SetChildPageLabel, SetForms, SetFormsPublished } from '../../../state/auth/auth-state.actions'\nimport { AuthState } from '../../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.scss']\n})\nexport class FormsComponent {\n\n  @Select(AuthState.forms) forms$: Observable<Form[]>\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  form: Form\n  forms = []\n  lists: any = LISTS\n\n  constructor(\n    private store: Store,\n    private appService: AppService,\n    private formService: FormService,\n    private errorService: ErrorService,\n    private idbCrudService: IdbCrudService,\n    private successService: SuccessService) {\n    this.forms.push(VEHICLE_INSPECTION)\n    // this.forms.push(MEANINGFUL_SITE_TOUR)\n    this.forms.push(WORKSITE_SAFETY_INSPECTION)\n    this.forms.push(SPOT_CHECK_SAFETY)\n  }\n\n  selectForm(form) {\n    let formObjClone = _.cloneDeep(form)\n    if (!form.type) this.errorService.popSnackbar('Form is not Configured')\n    else if (form.type === 'custom') {\n      const tenant = this.store.selectSnapshot(AuthState.tenant)\n      formObjClone[\"user_created\"] = { email: tenant.email, date_created: this.appService.now }\n\n      // forms are taken from local json and registered to the database\n      this.formService.registerForm(formObjClone).subscribe(_ => {\n        this.runForm(formObjClone)\n      })\n    }\n    else {\n      this.appService.detailArray = form.details\n      this.runForm(form)\n    }\n  }\n\n  runForm(form) {\n    this.store.dispatch(new SetSelectedForm(form))\n    this.store.dispatch(new SetChildPageLabel(form.name))\n    this.store.dispatch(new SetPage('form'))\n  }\n\n  selectSharedLists() {\n    this.store.dispatch(new SetLookupListNames(this.lists))\n    this.appService.isListMenu = true\n  }\n\n  publish(formObj, event) {\n    let formObjClone = _.cloneDeep(formObj)\n\n    const accessDate = this.appService.now\n    formObjClone['is_published'] = event.checked\n    formObjClone['date_last_access'] = accessDate\n\n    let obj = {\n      form_id: formObj.form_id,\n      formObj: formObjClone,\n      is_deployed: true,\n      is_published: event.checked,\n      date_last_accessed: accessDate\n    }\n    this.formService.statusToggle(obj).subscribe((response: any) => {\n      this.updateIdb(formObjClone, response)\n      this.idbCrudService.readAll('form').subscribe((forms: any) => {\n        const formsPublished = forms.filter(form => form.is_published === true)\n        this.store.dispatch(new SetFormsPublished(formsPublished))\n      })\n    })\n  }\n\n  setPermission(formObj, event) {\n    let formObjClone = _.cloneDeep(formObj)\n\n    const accessDate = this.appService.now\n    formObjClone['is_manager'] = event.checked\n    formObjClone['date_last_access'] = accessDate\n\n    let obj = {\n      formObj: formObjClone,\n      is_manager: event.checked,\n      form_id: formObj.form_id\n    }\n    this.formService.setPermissions(obj).subscribe((response: any) => {\n      this.updateIdb(formObjClone, response)\n    })\n  }\n\n  archive(formObj) {\n    let formObjClone = _.cloneDeep(formObj)\n    formObjClone['date_archived'] = this.appService.now\n    formObjClone['user_archived'] = this.store.selectSnapshot(AuthState.user)\n    formObjClone['is_deployed'] = false\n\n    this.formService.update(formObjClone).subscribe((response: any) => {\n      this.updateIdb(formObjClone, response)\n    })\n  }\n\n  updateIdb(formObjClone, response) {\n    this.idbCrudService.put('form', formObjClone).subscribe(_ => {\n      this.idbCrudService.readAll('form').subscribe((forms: any) => {\n        const formsDeployed = forms.filter(form => !form.date_archived)\n        this.store.dispatch(new SetForms(formsDeployed))\n      })\n      this.successService.popSnackbar(response.message)\n    })\n  }\n\n}","<div class=\"form-padding\" *ngFor=\"let formObj of (forms$ | async)\">\n  <mat-card class=\"hand\">\n    <mat-card-header (click)=selectForm(formObj)>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon32 material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n      </div>\n      <mat-card-title>{{ formObj.name }}</mat-card-title>\n      <mat-card-subtitle>{{ formObj.description }}</mat-card-subtitle>\n    </mat-card-header>\n    <div class=\"publish\" fxLayoutAlign=\"space-between center\">\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"25px\">\n        <div>\n          <mat-slide-toggle (change)=\"publish(formObj, $event)\" color=\"primary\" [checked]=formObj.is_published\n            [disabled]=\"kioske$ | async\">\n          </mat-slide-toggle>&nbsp;&nbsp;\n          <span class=\"action-label-pub\" *ngIf=\"formObj.is_published\">Published</span>\n          <span class=\"action-label-pub\" *ngIf=\"!formObj.is_published\">Unpublished</span>\n        </div>\n        <div>\n          <mat-slide-toggle (change)=\"setPermission(formObj,$event)\" color=\"primary\" [checked]=formObj.is_manager\n            [disabled]=\"kioske$ | async\">\n          </mat-slide-toggle>&nbsp;&nbsp;\n          <span class=\"action-label-pub\" *ngIf=\"formObj.is_manager\">Manager</span>\n          <span class=\"action-label-pub\" *ngIf=\"!formObj.is_manager\">Everyone</span>\n        </div>\n      </div>\n      <span class=\"toolbar-spacer\"></span>\n      <div *ngIf=\"formObj.type === 'dynamic' && !formObj.is_published\">\n        <button (click)=\"archive(formObj)\" mat-icon-button>\n          <mat-icon color=\"warn\" class=\"material-icons-outlined\">delete</mat-icon>\n        </button>\n      </div>\n    </div>\n  </mat-card>\n</div>","<mat-accordion multi [togglePosition]=\"'before'\" *ngFor=\"let notification of (notificationOpen$ | async);  index as i\">\n  <mat-expansion-panel  (click)=\"setStep(i); setNotification(notification, i)\" class=\"accordion-padding\"\n  [expanded]=\"step === i\">\n    <mat-expansion-panel-header (click)=\"setRead(notification)\">\n      <mat-panel-title fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n        <mat-icon *ngIf=\"!notification.read\" class=\"material-icons-outlined icon-orange\">mark_as_unread</mat-icon>\n        <mat-icon *ngIf=\"notification.read\" class=\"material-icons-outlined\">mail</mat-icon>\n        <div>{{notification.description}}</div>\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div class=\"form-padding\"  *ngFor=\"let comment of (notificationComments$ | async)\">\n      <mat-card class=\"custom hand\">\n        <b>{{comment.from}} - {{comment.date | date: 'short'}}</b>\n        <br>{{comment.message}}\n      </mat-card>\n    </div>\n    <br>\n    <form class=\"container-padding\" [formGroup]=\"messageForm\">\n      <div>\n        <mat-form-field class=\"text-color\" fxFlex>\n          <mat-label>Send Message to {{sendTo}}</mat-label>\n          <input matInput placeholder=\"New Message\" formControlName=\"message\" type=\"text\">\n        </mat-form-field>\n      </div>\n    </form>\n    <div fxLayoutAlign=\"space-between center\">\n      <div>\n        <button *ngIf=\"!kioske\" color=\"primary\" mat-mini-fab [disabled]=\"!messageForm.valid\">\n          <mat-icon class=\"material-icons-outlined\" (click)=\"sendMessage(i)\">send</mat-icon>\n        </button>\n        <button *ngIf=\"kioske\" color=\"primary\" mat-mini-fab [disabled]=\"kioske$ | async\">\n          <mat-icon class=\"material-icons-outlined\">send</mat-icon>\n        </button>\n      </div>\n      <div fxLayoutGap=\"30px\">\n        <button color=\"primary\" mat-mini-fab>\n          <mat-icon class=\"material-icons-outlined\" (click)=\"openPdf(notification)\">picture_as_pdf</mat-icon>\n        </button>\n        <button color=\"primary\" mat-mini-fab>\n          <mat-icon class=\"material-icons-outlined\" (click)=\"openForm(notification, i)\">dynamic_form</mat-icon>\n        </button>\n        <button *ngIf=\"notification.email_from !== user?.email\" color=\"primary\" mat-mini-fab>\n          <mat-icon class=\"material-icons-outlined\" (click)=\"openSign(notification)\">border_color</mat-icon>\n        </button>\n      </div>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>\n<h4 class=\"text-color padding-left\" *ngIf=\"(notificationOpen$ | async)?.length === 0\">No open notifications</h4>","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\n\nimport * as _ from 'lodash';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { environment } from '../../../../environments/environment';\n\nimport { Store, Select } from '@ngxs/store';\n\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\n\nimport { NotificationActionComponent } from '../notification-action/notification-action.component';\n\nimport { ApiService } from '../../../service/api.service';\nimport { EmailService } from '../../../service/email.service';\nimport { IdbCrudService } from '../../../service-idb/idb-crud.service';\nimport { NotificationService } from '../../../service/notification.service';\n\nimport { AuthState } from '../../../state/auth/auth.state';\nimport { SetPics } from '../../../state/device/device-state.actions';\nimport { SetComments } from '../../comment/state/comment.actions';\nimport {\n  SetSelectedForm,\n  SetPage,\n  SetFormData,\n  SetChildPage,\n} from '../../../state/auth/auth-state.actions';\nimport { NotificationState } from '../../../state/notification/notification.state';\nimport {\n  SetNotification,\n  SetNotificationIdx,\n  SetNotificationComments,\n} from '../../../state/notification/notification-state.actions';\nimport { SetIsWorksiteSafetyHeaderValid } from '../../forms/worksite-safety-inspection/state/worksite-safety-inspection-state.actions';\nimport { SetCorrectiveActions } from '../../corrective-action/state/corrective-action.actions';\n\nimport { PicsComponent } from '../../pics/pics.component';\nimport { CameraComponent } from '../../camera/camera.component';\n\n@Component({\n  selector: 'app-notification-open',\n  templateUrl: './notification-open.component.html',\n  styleUrls: ['./notification-open.component.scss'],\n})\nexport class NotificationOpenComponent implements OnInit {\n  @Output() pdf = new EventEmitter<any>();\n\n  @Select(NotificationState.notificationOpen)\n  notificationOpen$: Observable<string>;\n  @Select(NotificationState.notificationIdx)\n  notificationIdx$: Observable<number>;\n  @Select(NotificationState.notificationComments)\n  notificationComments$: Observable<any[]>;\n\n  @Select(AuthState.kioske) kioske$: Observable<boolean>;\n\n  kioske = environment.kioske;\n  messageUrl = environment.messageUrl;\n\n  data;\n  user;\n  sendTo;\n  formData;\n  picArray = [];\n  customExpandedHeight: string = '80px';\n  step;\n\n  messageForm: FormGroup;\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar,\n    private apiService: ApiService,\n    private emailService: EmailService,\n    private bottomSheet: MatBottomSheet,\n    private idbCrudService: IdbCrudService,\n    private notificationService: NotificationService\n  ) {\n    this.messageForm = this.fb.group({\n      message: [{ value: null, disabled: this.kioske }, [Validators.required]],\n    });\n  }\n\n  ngOnInit() {\n    this.user = this.store.selectSnapshot(AuthState.user);\n  }\n\n  sendMessage(idx) {\n    const notifications = this.store.selectSnapshot(\n      NotificationState.notificationOpen\n    );\n\n    const notification = notifications[idx];\n    const user = this.user;\n\n    const message = this.messageForm.get('message').value;\n\n    this.messageForm.reset();\n    let messageObj = {\n      email_to_id:\n        notification.email_to_id === user.id\n          ? notification.email_from_id\n          : notification.email_to_id,\n      email_from_id:\n        notification.email_to_id !== user.id\n          ? notification.email_from_id\n          : notification.email_to_id,\n      notificationID: notification.id,\n      date: new Date().toLocaleString('en-US', {\n        timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      }),\n      message: message,\n    };\n\n    this.notificationService\n      .updateNotificationMessage(messageObj)\n      .subscribe((response: any) => {\n        this.snackBar.open('Message Submitted!', 'Success', {\n          duration: 3000,\n          verticalPosition: 'bottom',\n        });\n\n        this.store.dispatch(\n          new SetNotificationComments(response.data.comments)\n        );\n\n        let toEmail, fromEmail\n        toEmail = notification.email_to_id === user.id\n          ? notification.email_from\n          : notification.email_to\n  \n        fromEmail = notification.email_to_id !== user.id\n          ? notification.email_from\n          : notification.email_to\n\n        const subject = notification.form_name+' message from '+user.name+' '+new Date()\n\n        const obj = {\n          tenant: this.store.selectSnapshot(AuthState.tenant),\n          toName: response.data.toName,\n          messageID: response.data.notificationID,\n          url: this.messageUrl,\n          subject: subject,\n          emailTo: toEmail,\n          emailFrom: fromEmail\n        };\n        this.emailService.sendNotificationEmail(obj).subscribe((_) => {});\n      });\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  setNotification(notification, i) {\n    const notifications = this.store.selectSnapshot(\n      NotificationState.notificationOpen\n    );\n\n    const user = this.store.selectSnapshot(AuthState.user);\n    const workers = this.store.selectSnapshot(AuthState.workers);\n    const worker = workers.find(\n      (worker) => worker.email == notification.email_from\n    );\n    const supervisors = this.store.selectSnapshot(AuthState.supervisors);\n    const supervisor = supervisors.find(\n      (supervisor) => supervisor.email == notification.email_to\n    );\n\n    if (worker && worker.email !== user.email) this.sendTo = worker.name;\n    if (supervisor.email !== user.email) this.sendTo = supervisor.name;\n\n    this.idbCrudService.readAll('form').subscribe((forms: any) => {\n      const form = forms.find((f) => {\n        return f.form_id == notification.form_id;\n      });\n\n      this.store.dispatch(new SetSelectedForm(form));\n      this.store.dispatch(new SetNotificationComments(notification.comment));\n    });\n  }\n\n  openSign(notification) {\n\n    this.store.dispatch(new SetNotification(notification));\n    this.apiService\n      .getFormData(notification.form_id, notification.data_id)\n      .subscribe((form) => {\n        const obj = {\n          form: form,\n          notification: notification,\n        };\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.height = '100%';\n        dialogConfig.width = '100%';\n        (dialogConfig.maxWidth = '100vw'),\n          (dialogConfig.maxHeight = '100vh'),\n          (dialogConfig.data = obj);\n        this.dialog.open(NotificationActionComponent, dialogConfig);\n      });\n  }\n\n  openPdf(notification) {\n    this.store.dispatch(new SetNotification(notification));\n    this.pdf.emit();\n  }\n\n  openForm(notification, idx) {\n    this.store.dispatch(new SetComments([]));\n    this.store.dispatch(new SetCorrectiveActions([]));\n    this.store.dispatch(new SetNotification(notification));\n    this.store.dispatch(new SetNotificationIdx(idx));\n    const page = this.store.selectSnapshot(AuthState.page);\n    const childPage = this.store.selectSnapshot(AuthState.childPage);\n    this.apiService\n      .getFormData(notification.form_id, notification.data_id)\n      .subscribe((data: any) => {\n        const selectedForm: any = this.store.selectSnapshot(\n          AuthState.selectedForm\n        );\n        this.store.dispatch(new SetIsWorksiteSafetyHeaderValid(false));\n        this.store.dispatch(new SetSelectedForm(selectedForm));\n        this.store.dispatch(new SetFormData(data));\n        this.store.dispatch(new SetCorrectiveActions(data.correctiveAction));\n        this.store.dispatch(new SetChildPage('notification'));\n        this.store.dispatch(new SetPage('form'));\n      });\n  }\n\n  openImage() {\n    this.bottomSheet.open(PicsComponent);\n  }\n\n  snapShot() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.height = '100%';\n    dialogConfig.width = '100%';\n    (dialogConfig.maxWidth = '100vw'),\n      (dialogConfig.maxHeight = '100vh'),\n      (dialogConfig.data = this.store.selectSnapshot(AuthState.selectedForm));\n    this.dialog.open(CameraComponent, dialogConfig);\n  }\n\n  setRead(notification) {\n    const user = this.store.selectSnapshot(AuthState.user);\n    if (notification.email_from !== user.email) {\n      let obj = {\n        notificationID: notification.id,\n        email_from: user.email,\n      };\n      this.notificationService.updateNotificationRead(obj).subscribe(() => {});\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'dashboard-filter',\n  templateUrl: './dashboard-filter.component.html',\n  styleUrls: ['./dashboard-filter.component.scss']\n})\n\nexport class DashboardFilterComponent implements OnInit {\n\n  @Input() filters;\n  @Input() supervisors;\n  @Output() filterUpdate = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  updateFilters(key, value) {\n    this.filters[key] = value\n    this.filterUpdate.emit(this.filters)\n  }\n\n}\n","<div class='filter-box'>\n  <select name=\"form\" id=\"dashboard-form-select\" class='filter-select'\n    (change)='updateFilters(\"form\", $event.target.value)'>\n    <option value=\"all\" selected>All Forms</option>\n    <option value=\"Spot Check Inspection\">Spot Check Inspection</option>\n    <option value=\"Meaningful Site Tour\">Meaningful Site Tour</option>\n    <option value=\"Vehicle Inspection\">Vehicle Inspections</option>\n    <option value=\"Worksite Safety Inspection\">Worksite Safety Inspection</option>\n  </select>\n  <select name=\"month\" id=\"dashboard-month-select\" class='filter-select'\n    (change)='updateFilters(\"month\", $event.target.value)'>\n    <option value=\"all\" selected>All Months</option>\n    <option value=\"01\">January</option>\n    <option value=\"02\">February</option>\n    <option value=\"03\">March</option>\n    <option value=\"04\">April</option>\n    <option value=\"05\">May</option>\n    <option value=\"06\">June</option>\n    <option value=\"07\">July</option>\n    <option value=\"08\">August</option>\n    <option value=\"09\">September</option>\n    <option value=\"10\">October</option>\n    <option value=\"11\">November</option>\n    <option value=\"12\">December</option>\n  </select>\n  <select name=\"year\" id=\"dashboard-year-select\" class='filter-select'\n    (change)='updateFilters(\"year\", $event.target.value)'>\n    <option value=\"all\" selected>All Years</option>\n    <option value=\"2021\">2021</option>\n    <option value=\"2022\">2022</option>\n    <option value=\"2023\">2023</option>\n  </select>\n  <select name=\"supervisor\" id=\"dashboard-supervisor-select\" class='filter-select'\n    (change)='updateFilters(\"supervisor\", $event.target.value)'>\n    <option value=\"all\" selected>All Supervisors</option>\n    <option *ngFor='let supervisor of supervisors' value=\"{{supervisor.email}}\">{{supervisor.name}}</option>\n  </select>\n</div>","export class SetLat {\n  static type = '[Device] SetLat'\n  constructor(public lat: number) {}\n}\n\nexport class SetLong {\n  static type = '[Device] SetLong'\n  constructor(public long: number) {}\n}\n\nexport class SetBackground {\n  static type = '[Device] SetBackground'\n  constructor(public background: string) {}\n}\n\nexport class SetScreenSize {\n  static type = '[Device] SetScreenSize'\n  constructor(public screenSize: string) {}\n}\n\nexport class SetScreenWidth {\n  static type = '[Device] SetScreenWidth'\n  constructor(public screenWidth: string) {}\n}\n\nexport class SetIsIOS {\n  static type = '[Device] SetIsIOS'\n  constructor(public isIOS: boolean) {}\n}\n\nexport class SetIsSafari {\n  static type = '[Device] SetIsSafari'\n  constructor(public isSafari: boolean) {}\n}\n\nexport class SetPics {\n  static type = '[Device] SetPics'\n  constructor(public pics: []) {}\n}\n\nexport class SetIsDarkMode {\n  static type = '[Device] SetIsDarkMode'\n  constructor(public isDarkMode: boolean) {}\n}\n\nexport class SetVoice {\n  static type = '[Device] SetVoice'\n  constructor(public voice: any[]) {}\n}\n\nexport class SetTranscription {\n  static type = '[Device] SetTranscription'\n  constructor(public transcription: string) {}\n}\n\nexport class SetIsOnline {\n  static type = '[Device] SetIsOnline'\n  constructor(public isOnline: boolean) {}\n}\n\n\n\n\n","import { Component, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Router, ActivatedRoute, Params } from '@angular/router'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { SuccessService } from \"../../../service/success.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage } from '../../../state/auth/auth-state.actions'\n\nimport { SetIsDarkMode } from '../../../state/device/device-state.actions'\nimport { environment } from '../../../../environments/environment'\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  @Select(DeviceState.background) background$: Observable<string>\n\n  logo = environment.logo\n  \n  prefs\n  email\n  token\n  hide = true\n  passwordForm: FormGroup;\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    public appService: AppService,\n    private authService: AuthService,\n    private successService: SuccessService,\n    private idbCrudService: IdbCrudService) { \n    this.passwordForm = this.fb.group({\n      password: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params: Params) => {\n      this.email = params.email\n    })\n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs\n      if (this.prefs.length > 0) {\n        if (this.prefs[0][\"user\"][\"isDarkMode\"]) this.appService.setMode('darkMode')\n        else this.appService.setMode('')\n\n        this.store.dispatch(new SetIsDarkMode(this.prefs[0][\"user\"][\"isDarkMode\"]))\n        this.email = this.prefs[0][\"user\"][\"email\"]\n      }\n      else {\n        this.appService.setMode('darkMode')\n        this.store.dispatch(new SetIsDarkMode(true)) \n      }\n    })\n  }\n\n  resetPassword() {\n    const obj = this.passwordForm.value\n    obj[\"email\"] = this.email\n\n    this.authService.resetPassword(obj).subscribe((res:any) => {\n      this.successService.popSnackbar(res.message)\n      this.router.navigate([''])\n    });  \n  }\n\n  close() {\n    this.router.navigate(['identify'])\n  }\n\n}\n","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div class=\"padding\" fxLayoutAlign=\"center space-between\" fxLayout=\"row\">\n    <div fxLayoutAlign=\"start center\" class=\"text-color\">Reset Password</div>\n    <span class=\"toolbar-spacer\"></span>\n    <div>\n      <button (click)=close() mat-icon-button>\n        <mat-icon class=\"text-color\">close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <form class=\"container-padding text-color\" [formGroup]=\"passwordForm\">\n    <div fxLayout=\"column\">\n      <div class=\"text-color text-center\">\n        <div><img src=\"{{logo}}\"></div>\n      </div>\n      <br>\n      <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n        <mat-label class=\"text-color\">Password</mat-label>\n        <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n        <mat-icon class=\"hand\" matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n      </mat-form-field>\n      <button (click)=\"resetPassword()\" color=\"primary\" mat-flat-button>\n        Reset Password\n      </button>\n    </div>\n  </form>\n</div>\n","export class SetIsWorksiteSafetyHeaderValid {\n  static type = '[WorksiteSafetyStateModel] SetHeader'\n  constructor(public isWorksiteSafetyHeaderValid: boolean) {}\n}\n\nexport class SetIsFireExtinguisher {\n  static type = '[WorksiteSafetyStateModel] SetIsFireExtinguisher'\n  constructor(public isFireExtinguisher: boolean) {}\n}\n\nexport class SetIsErpPlanning {\n  static type = '[WorksiteSafetyStateModel] SetIsErpPlanning'\n  constructor(public isErpPlanning: boolean) {}\n}\n\nexport class SetIsGroundwork {\n  static type = '[WorksiteSafetyStateModel] SetIsGround'\n  constructor(public isGroundwork: boolean) {}\n}\n\nexport class SetIsHotwork {\n  static type = '[WorksiteSafetyStateModel] SetIsHotwork'\n  constructor(public isHotwork: boolean) {}\n}\n\nexport class SetIsConfinedSpace {\n  static type = '[WorksiteSafetyStateModel] SetIsConfinedSpace'\n  constructor(public isConfinedSpace: boolean) {}\n}\n\n\n\n\n","<div class=\"form-padding\">\n  <mat-card class=\"custom hand\" (click)=selectSharedLists()>\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon material-icons-outlined\">fact_check</mat-icon>\n      </div>\n      <mat-card-title>All Lists</mat-card-title>\n      <mat-card-subtitle>Lists Accross All Forms</mat-card-subtitle>\n    </mat-card-header>\n  </mat-card>\n</div>\n<div class=\"form-padding\" *ngFor=\"let formObj of (forms$ | async)\">\n  <mat-card class=\"custom hand\" (click)=selectForm(formObj)>\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n      </div>\n      <mat-card-title>{{ formObj.name }}</mat-card-title>\n      <mat-card-subtitle>{{ formObj.description }}</mat-card-subtitle>\n    </mat-card-header>\n  </mat-card>\n</div>\n\n","import { Component, Output, EventEmitter  } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { Store, Select } from '@ngxs/store'\nimport { LISTS } from \"../../../model/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { SetSelectedForm, SetLookupListNames } from '../../../state/auth/auth-state.actions'\nimport { AuthState } from '../../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-list-forms',\n  templateUrl: './list-forms.component.html',\n  styleUrls: ['./list-forms.component.scss']\n})\nexport class ListFormsComponent {\n\n  @Select(AuthState.forms) forms$: Observable<any[]>\n\n  @Output() selectData = new EventEmitter<any>()\n\n  lists:any = LISTS\n\n  constructor(\n    private store: Store,\n    private appService: AppService) { }\n\n  selectForm(formObj) {\n    this.store.dispatch(new SetSelectedForm(formObj))\n    this.store.dispatch(new SetLookupListNames(formObj.lists))\n    this.selectData.emit()\n  }\n\n  selectSharedLists() {\n    this.store.dispatch(new SetLookupListNames(this.lists))\n    this.appService.isListMenu = true\n  }\n\n}","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n\n  transform(value: string, args: string[]): string {\n    const limit = args.length > 0 ? parseInt(args[0], 10) : 20\n    const trail = args.length > 1 ? args[1] : '...'\n    return value.length > limit ? value.substring(0, limit) + trail : value\n   }\n\n}\n","<div class=\"container-padding\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div>\n      <h2>{{ lookupListName$ | async }}</h2>\n    </div>\n    <div>\n      <button color=\"primary\" (click)=\"openMenu()\" mat-flat-button>Lists</button>\n    </div>\n  </div>\n  <div fxLayout=\"column\">\n    <form [formGroup]=\"runForm\">\n      <mat-form-field fxFlex>\n        <mat-label>Enter new List Item</mat-label>\n        <input matInput type=\"text\" formControlName=\"item\" placeholder=\"Enter new List Item\" required>\n      </mat-form-field>\n    </form>\n    <button *ngIf=\"kioske\" mat-raised-button (click)=\"save()\" color=\"primary\" [disabled]=true runForm.type=\"submit\">\n      Add Item to List\n    </button>\n    <button *ngIf=\"!kioske\" mat-raised-button (click)=\"save()\" color=\"primary\" [disabled]=\"!runForm.valid\" runForm.type=\"submit\">\n      Add Item to List\n    </button>\n  </div>\n  <br>\n  <div>\n    <table mat-table [dataSource]=\"appService.dataSource\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>Item</th>\n        <td (click)=\"edit(i, element)\" class=\"hand\" mat-cell *matCellDef=\"let element; let i = index\">\n          <div>{{element.data}}</div>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; let i = index; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core'\n\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\n\nimport { Observable } from 'rxjs'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { ApiService } from \"../../../service/api.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { ListEditComponent } from '../list-edit/list-edit.component'\n\nimport { LIST_FORM } from '../../../model/forms'\n\n@Component({\n  selector: 'app-list-run',\n  templateUrl: './list-run.component.html',\n  styleUrls: ['./list-run.component.scss']\n})\nexport class ListRunComponent implements OnInit {\n\n  kioske\n\n  @Select(AuthState.lookupListName) lookupListName$: Observable<string>\n  runForm: FormGroup\n\n  id\n  user\n  data\n  allData\n  selectedIdx\n  lookupLists\n  isSync = false\n  LIST_FORM = LIST_FORM\n\n  displayedColumns: string[] = ['id']\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    private apiService: ApiService,\n    public authService: AuthService,\n    private formBuilder: FormBuilder,\n    private successService: SuccessService) {\n    this.runForm = this.formBuilder.group({\n      item: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.id = new FormControl({value: null, disabled: this.kioske})\n  }\n\n  edit(idx, element) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { id: idx, element: element }\n    const dialogRef = this.dialog.open(ListEditComponent, dialogConfig)\n  }\n\n  save() {\n    let obj = {\n      value: this.runForm.controls['item'].value,\n      name: this.store.selectSnapshot(AuthState.lookupListName)\n    }\n    this.apiService.saveList(obj).subscribe((data:any) => {\n      this.runForm.controls['item'].reset()\n      this.appService.dataSource = data.rows\n      this.successService.popSnackbar('Item Saved')\n    })\n  }\n\n  openMenu() {\n    this.runForm.reset()\n    this.selectedIdx = undefined\n    this.appService.isListMenu = true\n  }\n\n}\n\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-meaningful-site-tour-todo',\n  templateUrl: './meaningful-site-tour-todo.component.html',\n  styleUrls: ['./meaningful-site-tour-todo.component.scss']\n})\nexport class MeaningfulSiteTourTodoComponent {\n\n  @Input() todoForm\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"header-form\" [formGroup]=\"todoForm\">\n  <div fxLayout=\"column\" color=\"primary\" fxLayoutAlign=\"center start\" fxLayoutGap=\"20px\">\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"SiteOrientation\">SiteOrientation</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"DailySafetyMeeting\">Attend a Daily Safety Meeting / Toolbox Talk</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"SiteTour\">Site tour (2 hrs)</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"SiteTourWithWorker\">Site tour with worker</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"ReviewDiscuss\">Complete/review and discuss FLHA/JSA,HA etc.</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"PositiveInterventionRecognition\">Positive intervention/recognition</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"EngageWithContractors\">Engage with contractors</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"HousekeepingInspection\">Housekeeping inspection</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"CompleteBBO\">Complete a BBO</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"OpenTeamDiscussion\">Hold an open discussion with the team</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"SafetyAlert\">Share a recent “Safety Alert” verbally if required</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"ProvideFeedback\">Provide feedback and follow-up</mat-checkbox>\n    <mat-checkbox color=\"primary\" class=\"text-color\" formControlName=\"FormalAuditInspection\">Participate in a formal audit/inspection if available or applicable</mat-checkbox>\n  </div>\n</form>","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t\"jDxf\",\n\t\t43\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t\"37vE\",\n\t\t44\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t\"cJxf\",\n\t\t45\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t\"eGHz\",\n\t\t46\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t\"fHjd\",\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"KwcL\";\nmodule.exports = webpackAsyncContext;","export interface SpotCheckSafetyModel {\n  isWorksiteSafetyHeaderValid: boolean\n  isAppropriateTraining?: boolean\n  isSpotCheckSafetyCompleted?: boolean // used to display message in discrepancies\n}\n\nexport const SPOT_CHECK_SAFETY = {\n  id: \"spot-check-safety\",\n  name: \"Spot Check Safety\",\n  icon: \"grading\",\n  type: \"custom\",\n  is_published: true,\n  is_data: false,\n  is_manager: false,\n  is_list: false,\n  lists: [],\n  description: \"Worksite Safety Management Review\"\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"erpPlanningForm\">\n    <div class=\"text-color radio-center\">Emergency Response Plan (ERP) onsite</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencyResponsePlanOnSite\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false); clearFields()\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false); clearFields()\" value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isErpPlanning$ | async)\">\n      <div class=\"text-color radio-center\">Muster point(s) identified</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"MusterPointsIdentified\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openDiscrepancy(label.MusterPointsIdentified,'MusterPointsIdentified', true)\" value=\"no\">No\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">ERP includes directions to nearest hospital</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ERPIncludesDirectionsToNearestHospital\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button\n            (click)=\"openDiscrepancy(label.ERPIncludesDirectionsToNearestHospital,'ERPIncludesDirectionsToNearestHospital', true)\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">STARS # (if applicable)</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"STARSNumber\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openDiscrepancy(label.STARSNumber,'STARSNumber', true)\" value=\"no\">No</mat-radio-button>\n          <mat-radio-button value=\"na\">N/A</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">ERP responder roles and <br>responsibilities identified</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ERPResponderRolesAndResponsibilitiesIdentified\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button\n            (click)=\"openDiscrepancy(label.ERPResponderRolesAndResponsibilitiesIdentified,'ERPResponderRolesAndResponsibilitiesIdentified', true)\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n\n      <div class=\"text-color radio-center\">Cellular or radio coverage confirmed. <br>If no, what communication is in\n        place?</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"CellularOrRadioCoverageConfirmed\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button\n            (click)=\"openDiscrepancy(label.CellularOrRadioCoverageConfirmed,'CellularOrRadioCoverageConfirmed', true)\"\n            value=\"no\">No</mat-radio-button>\n          <mat-radio-button value=\"na\">N/A</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet';\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsErpPlanning } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { ErpPlanningFormLabels } from '../state/worksite-safety-inspection-state.model'\nimport { BottomSheetWorksiteSafetyInspectionComponent } from '../bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component'\n\n@Component({\n  selector: 'app-worksite-safety-erp-planning',\n  templateUrl: './worksite-safety-erp-planning.component.html',\n  styleUrls: ['./worksite-safety-erp-planning.component.scss']\n})\nexport class WorksiteSafetyErpPlanningComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isErpPlanning) isErpPlanning$: Observable<string>\n\n  @Input() erpPlanningForm\n\n  label = ErpPlanningFormLabels\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(new SetTypeFilter('isErpPlanning'))\n  }\n\n  toggle(toggle) {\n    this.store.dispatch(new SetIsErpPlanning(toggle))\n    if (toggle) {\n      const comments:any = this.store.selectSnapshot(CommentState.commentsByType)\n      if (comments.length > 0) this.bottomSheet.open(BottomSheetWorksiteSafetyInspectionComponent)\n    }\n    if (!toggle) {\n      this.openComment(this.label.EmergencyResponsePlanOnSite, 'EmergencyResponsePlanOnSite')\n    }\n  }\n\n  clearFields() {\n    this.erpPlanningForm.controls['MusterPointsIdentified'].patchValue('')\n    this.erpPlanningForm.controls['ERPIncludesDirectionsToNearestHospital'].patchValue('')\n    this.erpPlanningForm.controls['STARSNumber'].patchValue('')\n    this.erpPlanningForm.controls['ERPResponderRolesAndResponsibilitiesIdentified'].patchValue('')\n    this.erpPlanningForm.controls['CellularOrRadioCoverageConfirmed'].patchValue('')\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'ERP Planning', label: label, field: field, type: 'isErpPlanning' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n  openDiscrepancy(label, field, discrepancy) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { \n      title: 'ERP Planning', \n      label, field, \n      type: 'isErpPlanning',\n      discrepancy\n    }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">{{ selectedVoiceFieldLabel$ | async }}</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<section>\n  <mat-card *ngIf=\"errorMessage$| async as errorMessage\" class=\"notification\">{{errorMessage}}</mat-card>\n</section>\n<div fxLayout=\"column\" class=\"hand\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"20px\">\n  <mat-icon class=\"icon-169px recorder-running-color soundwave\" *ngIf=\"listening$ | async; else mic\" (click)=\"stop()\">mic</mat-icon>\n  <ng-template #mic>\n    <mat-icon class=\"hand icon-169px-action\" (click)=\"start()\">mic</mat-icon>\n  </ng-template>\n</div>\n<div *ngIf=\"transcript$ | async\">\n<mat-card class=\"mat-elevation-z4\">{{transcript$ | async}}</mat-card>\n</div>\n<div>\n<mat-form-field class=\"speech-result-width\">\n  <textarea #transcriptInput matInput [value]=\"totalTranscript || ''\" rows=\"5\"></textarea>\n</mat-form-field>\n<div *ngIf=\"this.isDone\">\n  <button color=\"primary\" (click)=\"save()\" mat-flat-button fxFlex>Done</button>\n</div>\n</div>\n\n","import { ChangeDetectionStrategy, Component, OnInit, ViewChild, ElementRef } from '@angular/core'\nimport { merge, Observable, of, Subject } from 'rxjs'\nimport { map, tap } from 'rxjs/operators'\nimport { SpeechError, SpeechEvent, SpeechNotification } from '../../model/speech'\n\nimport { MatDialogRef } from \"@angular/material/dialog\"\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { SpeechRecognitionService } from '../../service/speech-recognition.service'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\nimport { SetTranscription } from '../../state/device/device-state.actions'\n\n@Component({\n  selector: 'app-voice',\n  templateUrl: './voice.component.html',\n  styleUrls: ['./voice.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class VoiceComponent implements OnInit {\n\n  @Select(AuthState.selectedVoiceFieldLabel) selectedVoiceFieldLabel$: Observable<string>\n\n  @ViewChild('transcriptInput') input:ElementRef; \n\n  isDone = false\n  totalTranscript?: string\n\n  voiceForm: FormGroup\n\n  transcript$?: Observable<string>\n  listening$?: Observable<boolean>\n  errorMessage$?: Observable<string>\n  defaultError$ = new Subject<string | undefined>()\n\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<VoiceComponent>,\n    private speechRecognitionService: SpeechRecognitionService,\n  ) {\n    this.voiceForm = this.formBuilder.group({\n      transcription: [null]\n    })\n  }\n\n  ngOnInit(): void {\n    this.totalTranscript = this.store.selectSnapshot(DeviceState.transcription)\n    if (this.totalTranscript) this.isDone = true\n\n    const webSpeechReady = this.speechRecognitionService.initialize()\n    if (webSpeechReady) {\n      this.initRecognition()\n    }else {\n      this.errorMessage$ = of('Your Browser is not supported. Please try Google Chrome.')\n    }\n  }\n\n  start(): void {\n    this.isDone = false\n    if (this.speechRecognitionService.isListening) {\n      this.stop()\n      return\n    }\n\n    this.defaultError$.next(undefined)\n    this.speechRecognitionService.start()\n  }\n\n  stop(): void {\n    this.isDone = true\n    this.speechRecognitionService.stop()\n  }\n\n  save(): void {\n    this.store.dispatch(new SetTranscription(this.input.nativeElement.value)) \n    this.dialogRef.close()\n  }\n\n  private initRecognition(): void {\n    this.transcript$ = this.speechRecognitionService.onResult().pipe(\n      tap((notification) => {\n        this.processNotification(notification)\n      }),\n      map((notification) => notification.content || '')\n    )\n\n    this.listening$ = merge(\n      this.speechRecognitionService.onStart(),\n      this.speechRecognitionService.onEnd()\n    ).pipe(map((notification) => notification.event === SpeechEvent.Start))\n\n    this.errorMessage$ = merge(\n      this.speechRecognitionService.onError(),\n      this.defaultError$\n    ).pipe(\n      map((data) => {\n        if (data === undefined) {\n          return ''\n        }\n        if (typeof data === 'string') {\n          return data\n        }\n        let message\n        switch (data.error) {\n          case SpeechError.NotAllowed:\n            message = `\n            Your browser is not authorized to access your microphone.\n            Verify that your browser has access to your microphone and try again.`\n            break\n          case SpeechError.NoSpeech:\n            message = `No speech has been detected. Please try again.`\n            break\n          case SpeechError.AudioCapture:\n            message = `Microphone is not available. Plese verify the connection of your microphone and try again.`\n            break\n          default:\n            message = ''\n            break\n        }\n        return message\n      })\n    )\n  }\n\n  private processNotification(notification: SpeechNotification<string>): void {\n    if (notification.event === SpeechEvent.FinalContent) {\n      const message = notification.content?.trim() || ''\n      this.totalTranscript = this.totalTranscript\n        ? `${this.totalTranscript}\\n${message}`\n        : notification.content\n    }\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as AuthActions from './auth-state.actions'\nimport { AuthStateModel } from './auth-state.model'\nimport { User, UserIdb, Tenant, Form } from './auth-state.model'\n\n@Injectable()\n@State<AuthStateModel>({\n  name: 'auth'\n})\n\nexport class AuthState {\n\n  @Selector()\n  static isIdentified(state: AuthStateModel): boolean {\n    return state.isIdentified\n  }\n\n  @Selector()\n  static isSignIn(state: AuthStateModel): boolean {\n    return state.isSignIn\n  }\n\n  @Selector()\n  static isAdmin(state: AuthStateModel): boolean {\n    return state.isAdmin\n  }\n\n  @Selector()\n  static isListMenu(state: AuthStateModel): boolean {\n    return state.isListMenu\n  }\n\n  @Selector()\n  static tenant(state: AuthStateModel): Tenant {\n    return state.tenant\n  }\n\n  @Selector()\n  static user(state: AuthStateModel): User {\n    return state.user\n  }\n\n  @Selector()\n  static userIdb(state: AuthStateModel): UserIdb {\n    return state.userIdb\n  }\n\n  @Selector()\n  static page(state: AuthStateModel): string {\n    return state.page\n  }\n\n  @Selector()\n  static workers(state: AuthStateModel): any[] {\n    return state.workers\n  }\n\n  @Selector()\n  static supervisors(state: AuthStateModel): any[] {\n    return state.supervisors\n  }\n\n  @Selector()\n  static lookupListData(state: AuthStateModel): [] {\n    return state.lookupListData\n  }\n\n  @Selector()\n  static lookupListName(state: AuthStateModel): string {\n    return state.lookupListName\n  }\n\n  @Selector()\n  static emailList(state: AuthStateModel): [] {\n    return state.emailList\n  }\n\n  @Selector()\n  static lookupListNames(state: AuthStateModel): [] {\n    return state.lookupListNames\n  }\n  @Selector()\n  static childPage(state: AuthStateModel): string {\n    return state.childPage\n  }\n\n  @Selector()\n  static childPageLabel(state: AuthStateModel): string {\n    return state.childPageLabel\n  }\n\n  @Selector()\n  static selectedForm(state: AuthStateModel): Form {\n    return state.selectedForm\n  }\n\n  @Selector()\n  static forms(state: AuthStateModel): {} {\n    return state.forms\n  }\n\n  @Selector()\n  static formLabels(state: AuthStateModel): {} {\n    return state.formLabels\n  }\n  \n  @Selector()\n  static selectedVoiceFieldLabel(state: AuthStateModel): {} {\n    return state.selectedVoiceFieldLabel\n  }\n\n  @Selector()\n  static formData(state: AuthStateModel): {} {\n    return state.formData\n  }\n\n  @Selector()\n  static notificationId(state: AuthStateModel): {} {\n    return state.notificationId\n  }\n\n  @Selector()\n  static childPageIcon(state: AuthStateModel): {} {\n    return state.childPageIcon\n  }\n\n  @Selector()\n  static kioske(state: AuthStateModel): {} {\n    return state.kioske\n  }\n\n  @Selector()\n  static formsPublished(state: AuthStateModel): {} {\n    return state.formsPublished\n  }\n\n  @Action(AuthActions.SetIsIdentified)\n  onSetIsIdentified(ctx: StateContext<AuthStateModel>, { isIdentified }: AuthActions.SetIsIdentified) {\n    ctx.patchState({\n      isIdentified: isIdentified\n    })\n  }\n\n  @Action(AuthActions.SetIsSignIn)\n  onSetIsSignIn(ctx: StateContext<AuthStateModel>, { isSignIn }: AuthActions.SetIsSignIn) {\n    ctx.patchState({\n      isSignIn: isSignIn\n    })\n  }\n\n  @Action(AuthActions.SetIsAdmin)\n  onSetIsAdmin(ctx: StateContext<AuthStateModel>, { isAdmin }: AuthActions.SetIsAdmin) {\n    ctx.patchState({\n      isAdmin: isAdmin\n    })\n  }\n\n  @Action(AuthActions.SetIsListMenu)\n  onSetIsListMenu(ctx: StateContext<AuthStateModel>, { isListMenu }: AuthActions.SetIsListMenu) {\n    ctx.patchState({\n      isListMenu: isListMenu\n    })\n  }\n\n  @Action(AuthActions.SetPage)\n  onSetPage(ctx: StateContext<AuthStateModel>, { page }: AuthActions.SetPage) {\n    ctx.patchState({\n      page: page\n    })\n  }\n\n  @Action(AuthActions.SetWorkers)\n  onSetWorkers(ctx: StateContext<AuthStateModel>, { workers }: AuthActions.SetWorkers) {\n    ctx.patchState({\n      workers: workers\n    })\n  }\n\n  @Action(AuthActions.SetSupervisors)\n  onSetSupervisors(ctx: StateContext<AuthStateModel>, { supervisors }: AuthActions.SetSupervisors) {\n    ctx.patchState({\n      supervisors: supervisors\n    })\n  }\n\n  @Action(AuthActions.SetLookupListData)\n  onSetLookupListData(ctx: StateContext<AuthStateModel>, { lookupListData }: AuthActions.SetLookupListData) {\n    ctx.patchState({\n      lookupListData: lookupListData\n    })\n  }\n\n  @Action(AuthActions.SetLookupListName)\n  onSetLookupListName(ctx: StateContext<AuthStateModel>, { lookupListName }: AuthActions.SetLookupListName) {\n    ctx.patchState({\n      lookupListName: lookupListName\n    })\n  }\n\n  @Action(AuthActions.SetLookupListNames)\n  onSetLookupListNames(ctx: StateContext<AuthStateModel>, { lookupListNames }: AuthActions.SetLookupListNames) {\n    ctx.patchState({\n      lookupListNames: lookupListNames\n    })\n  }\n\n  @Action(AuthActions.SetEmailList)\n  onSetEmailList(ctx: StateContext<AuthStateModel>, { emailList }: AuthActions.SetEmailList) {\n    ctx.patchState({\n      emailList: emailList\n    })\n  }\n\n  @Action(AuthActions.SetChildPage)\n  onSetChildPage(ctx: StateContext<AuthStateModel>, { childPage }: AuthActions.SetChildPage) {\n    ctx.patchState({\n      childPage: childPage\n    })\n  }\n\n  @Action(AuthActions.SetChildPageLabel)\n  onSetChildPageLabel(ctx: StateContext<AuthStateModel>, { childPageLabel }: AuthActions.SetChildPageLabel) {\n    ctx.patchState({\n      childPageLabel: childPageLabel\n    })\n  }\n\n  @Action(AuthActions.SetTenant)\n  onSetTenant(ctx: StateContext<AuthStateModel>, { tenant }: AuthActions.SetTenant) {\n    ctx.patchState({\n      tenant: tenant\n    })\n  }\n\n  @Action(AuthActions.SetUserIdb)\n  onSetUserIdb(ctx: StateContext<AuthStateModel>, { userIdb }: AuthActions.SetUserIdb) {\n    ctx.patchState({\n      userIdb: userIdb\n    })\n  }\n\n  @Action(AuthActions.SetUser)\n  onSetUser(ctx: StateContext<AuthStateModel>, { user }: AuthActions.SetUser) {\n    ctx.patchState({\n      user: user\n    })\n  }\n\n  @Action(AuthActions.SetSelectedForm)\n  onSetSelectedForm(ctx: StateContext<AuthStateModel>, { selectedForm }: AuthActions.SetSelectedForm) {\n    ctx.patchState({\n      selectedForm: selectedForm\n    });\n  }\n\n  @Action(AuthActions.ResetAuth)\n  onResetAuth(ctx: StateContext<AuthStateModel>, { }: AuthActions.ResetAuth) {\n    ctx.patchState({\n      page: 'home',\n      childPageLabel: 'Forms'\n    })\n  }\n\n  @Action(AuthActions.SetForms)\n  onSetForms(ctx: StateContext<AuthStateModel>, { forms }: AuthActions.SetForms) {\n    ctx.patchState({\n      forms: forms\n    })\n  }\n\n  @Action(AuthActions.SetSelectedVoiceFieldLabel)\n  onSelectedVoiceFieldLabel(ctx: StateContext<AuthStateModel>, { selectedVoiceFieldLabel }: AuthActions.SetSelectedVoiceFieldLabel) {\n    ctx.patchState({\n      selectedVoiceFieldLabel: selectedVoiceFieldLabel\n    });\n  }\n\n  \n  @Action(AuthActions.SetFormLabels)\n  onSetFormLabels(ctx: StateContext<AuthStateModel>, { formLabels }: AuthActions.SetFormLabels) {\n    ctx.patchState({\n      formLabels: formLabels\n    });\n  }\n\n  @Action(AuthActions.SetFormData)\n  onSetFormData(ctx: StateContext<AuthStateModel>, { formData }: AuthActions.SetFormData) {\n    ctx.patchState({\n      formData: formData\n    });\n  }\n\n  @Action(AuthActions.SetNotificationId)\n  onSetNotificationId(ctx: StateContext<AuthStateModel>, { notificationId }: AuthActions.SetNotificationId) {\n    ctx.patchState({\n      notificationId: notificationId\n    });\n  }\n\n  @Action(AuthActions.SetChildPageIcon)\n  onSetChildPageIcon(ctx: StateContext<AuthStateModel>, { childPageIcon }: AuthActions.SetChildPageIcon) {\n    ctx.patchState({\n      childPageIcon: childPageIcon\n    });\n  }\n\n  @Action(AuthActions.SetKioske)\n  onSetKioske(ctx: StateContext<AuthStateModel>, { kioske }: AuthActions.SetKioske) {\n    ctx.patchState({\n      kioske: kioske\n    });\n  }\n\n  @Action(AuthActions.SetFormsPublished)\n  onSetFormsPublished(ctx: StateContext<AuthStateModel>, { formsPublished }: AuthActions.SetFormsPublished) {\n    ctx.patchState({\n      formsPublished: formsPublished\n    });\n  }\n  \n}\n\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as NotificationActions from './notification-state.actions'\nimport { NotificationModel, NotificationStateModel } from './notification-state.model'\n\n@Injectable()\n@State<NotificationStateModel>({\n  name: 'notification'\n})\n\nexport class NotificationState {\n\n  @Selector()\n  static notification(state: NotificationStateModel): NotificationModel {\n    return state.notification\n  }\n\n  @Selector()\n  static notificationOpen(state: NotificationStateModel): NotificationModel {\n    return state.notificationOpen\n  }\n\n  @Selector()\n  static notificationSigned(state: NotificationStateModel): NotificationModel {\n    return state.notificationSigned\n  }\n\n  @Selector()\n  static notificationAllOpen(state: NotificationStateModel): NotificationModel {\n    return state.notificationAllOpen\n  }\n\n  @Selector()\n  static notificationAllSigned(state: NotificationStateModel): NotificationModel {\n    return state.notificationAllSigned\n  }\n\n  @Selector()\n  static notificationMyCount(state: any): number {\n    return state.notificationOpen.length\n  }\n\n  @Selector()\n  static notificationAdminCount(state: NotificationStateModel): number {\n    return state.notificationAdminCount\n  }\n\n  @Selector()\n  static notificationTab(state: NotificationStateModel): number {\n    return state.notificationTab\n  }\n\n  @Selector()\n  static notificationIdx(state: NotificationStateModel): number {\n    return state.notificationIdx\n  }\n\n  @Selector()\n  static notificationComments(state: NotificationStateModel): any[] {\n    return state.notificationComments\n  }\n\n  @Action(NotificationActions.SetNotification)\n  onSetNotification(ctx: StateContext<NotificationStateModel>, { notification }: NotificationActions.SetNotification) {\n    ctx.patchState({\n      notification: notification\n    })\n  }\n  // for user to see their notifications\n  @Action(NotificationActions.SetNotificationOpen)\n  onSetNotificationOpen(ctx: StateContext<NotificationStateModel>, { notificationOpen }: NotificationActions.SetNotificationOpen) {\n    ctx.patchState({\n      notificationOpen: notificationOpen\n    })\n  }\n  // for user to see their notifications\n  @Action(NotificationActions.SetNotificationSigned)\n  onSetNotificationSigned(ctx: StateContext<NotificationStateModel>, { notificationSigned }: NotificationActions.SetNotificationSigned) {\n    ctx.patchState({\n      notificationSigned: notificationSigned\n    })\n  }\n  // for admin to see all notifications\n  @Action(NotificationActions.SetNotificationAllOpen)\n  onSetNotificationAllOpen(ctx: StateContext<NotificationStateModel>, { notificationAllOpen }: NotificationActions.SetNotificationAllOpen) {\n    ctx.patchState({\n      notificationAllOpen: notificationAllOpen\n    })\n  }\n  // for admin to see all notifications\n  @Action(NotificationActions.SetNotificationAllSigned)\n  onSetNotificationAllSigned(ctx: StateContext<NotificationStateModel>, { notificationAllSigned }: NotificationActions.SetNotificationAllSigned) {\n    ctx.patchState({\n      notificationAllSigned: notificationAllSigned\n    })\n  }\n\n  @Action(NotificationActions.SetNotificationMyCount)\n  onSetNotificationMyCount(ctx: StateContext<NotificationStateModel>, { notificationMyCount }: NotificationActions.SetNotificationMyCount) {\n    ctx.patchState({\n      notificationMyCount: notificationMyCount\n    })\n  }\n\n  @Action(NotificationActions.SetNotificationAdminCount)\n  onSetNotificationAdminCount(ctx: StateContext<NotificationStateModel>, { notificationAdminCount }: NotificationActions.SetNotificationAdminCount) {\n    ctx.patchState({\n      notificationAdminCount: notificationAdminCount\n    })\n  }\n\n  @Action(NotificationActions.SetNotificationTab)\n  onSetNotificationTab(ctx: StateContext<NotificationStateModel>, { notificationTab }: NotificationActions.SetNotificationTab) {\n    ctx.patchState({\n      notificationTab: notificationTab\n    })\n  }\n\n  @Action(NotificationActions.SetNotificationIdx)\n  onSetNotificationIdx(ctx: StateContext<NotificationStateModel>, { notificationIdx }: NotificationActions.SetNotificationIdx) {\n    ctx.patchState({\n      notificationIdx: notificationIdx\n    })\n  }\n\n  @Action(NotificationActions.SetNotificationComments)\n  onSetNotificationComments(ctx: StateContext<NotificationStateModel>, { notificationComments }: NotificationActions.SetNotificationComments) {\n    ctx.patchState({\n      notificationComments: notificationComments\n    })\n  }\n  \n\n  \n\n}\n\n","import { Component } from '@angular/core'\n\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { environment } from '../../../../environments/environment'\n\nimport { AuthService } from \"../../../service/auth.service\"\nimport { EmailService } from \"../../../service/email.service\"\nimport { ErrorService } from \"../../../service/error.service\"\n\nimport { Store } from '@ngxs/store'\n\n@Component({\n  selector: 'app-signup-bottom',\n  templateUrl: './signup-bottom.component.html',\n  styleUrls: ['./signup-bottom.component.scss']\n})\nexport class SignupBottomComponent {\n\n  auth\n  step = 0\n  notContinue = true\n  terms = false\n  subscription\n\n  logo = environment.logo\n  linkedinUrl = environment.linkedinUrl\n  githubUrl = environment.githubUrl\n\n  emailSignupForm: FormGroup\n  forgotPasswordForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private errorService: ErrorService,\n    private emailService: EmailService,\n    private idbCrudService: IdbCrudService,\n    public matBottomSheetRef: MatBottomSheetRef<SignupBottomComponent>) {\n    this.emailSignupForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      password: ['', Validators.required]\n    })\n  }\n\n  close() {\n    this.matBottomSheetRef.dismiss()\n  }\n\n  signupEmail() {\n    this.authService.signupEmail(this.emailSignupForm.value).subscribe(auth => {\n      this.auth = auth\n\n      if (this.auth.message === 'Signup sucessful.') {\n        this.step = 1\n        this.emailService.signup({ email: this.auth.user.email }).subscribe(_ => {})\n      }\n      else this.errorService.popSnackbar(this.auth.message)\n    })\n  }\n\n  checkTerms(terms) {\n    this.terms = terms\n    if (!this.terms) this.notContinue = true\n    else if (this.subscription) this.notContinue = false\n  }\n\n  selectSubscription() {\n    if (this.terms) this.notContinue = false\n    else this.notContinue = true\n  }\n\n}\n","<div fxLayout=\"column\">\n  <div class=\"text-color mat-h1\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div>Sign Up</div>\n    <div fxLayoutGap=\"20px\">\n      <button mat-icon-button (click)=\"close()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"container-padding\">\n    <div *ngIf=\"step === 0\" fxLayout=\"column\">\n      <form [formGroup]=\"emailSignupForm\">\n        <div fxLayout=\"column\" class=\"form-padding\">\n          <mat-form-field appearance=\"outline\" fxFlex>\n            <mat-label>Email Address</mat-label>\n            <input matInput placeholder=\"Email\" formControlName=\"email\" type=\"text\" required>\n            <mat-error>\n              Email address is required!\n            </mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" fxFlex>\n            <mat-label>Password</mat-label>\n            <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" required>\n            <mat-error>\n              Password is required!\n            </mat-error>\n          </mat-form-field>\n          <button (click)=\"signupEmail()\" mat-stroked-button color=\"primary\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n    </div>\n    <div *ngIf=\"step === 1\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n      <div>\n        <app-terms></app-terms>\n      </div>\n      <div class=\"text-color\">\n        <mat-checkbox (change)=\"checkTerms($event.checked)\" color=\"primary\" [checked]=\"terms\">Accept terms and conditions</mat-checkbox>\n      </div>\n      <h3 class=\"text-color\">Monthly Subscription</h3>\n      <div class=\"text-color\">\n        <mat-radio-group (change)=\"selectSubscription()\" [(ngModel)]=\"subscription\">\n          <mat-radio-button value=\"paypal\">Credit Card</mat-radio-button>\n          <mat-radio-button value=\"invoice\">Invoice or EFT</mat-radio-button>\n          <mat-radio-button value=\"free\">Free</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <br>\n      <div>\n        <button (click)=\"step = 2\" mat-stroked-button color=\"primary\" fxFlex [disabled]=\"notContinue\">\n          Continue\n        </button>\n      </div>\n      <br><br>\n    </div>\n    <div *ngIf=\"step === 2\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n      <div *ngIf=\"subscription === 'invoice'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/MonthlySubscriptionInvoiceEFT/formperma/DPyidrkamlSTiR52sfYCU82m7h2MZZzREanwDfrQQy4'></iframe>\n      </div>\n      <div *ngIf=\"subscription === 'paypal'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/contactus/formperma/4cYAlnbRcWnLrjP9pBkPFnCCTKGrtP6gHMrEsteGIow'></iframe>\n      </div>\n      <div *ngIf=\"subscription === 'free'\">\n        <iframe frameborder=\"0\" style=\"height:500px;width:99%;border:none;\" src='https://forms.zohopublic.com/formloco/form/FreeSubscription/formperma/ekqZGlUJ2Q6fESOo2EYdj6y13302mqTvK895Wb6_hx0'></iframe>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as CommentActions from './comment.actions'\nimport { CommentStateModel, Comment } from './comment.model'\n\n@Injectable()\n@State<CommentStateModel>({\n  name: 'comment',\n  defaults: {\n    comments: []\n  }\n})\n\nexport class CommentState {\n\n  @Selector()\n  static comments(state: CommentStateModel): Comment[] {\n    return state.comments\n  }\n\n  @Selector()\n  static text(state: Comment): string {\n    return state.text\n  }\n\n  @Selector()\n  static commentsByType(state: CommentStateModel) { \n    return state.comments.filter(c => c.type === state.type)\n  }\n\n  @Selector()\n  static commentType(state: CommentStateModel) { \n    return state.type\n  }\n\n  @Selector()\n  static commentLabel(state: CommentStateModel) { \n    return state.label\n  }\n\n  @Action(CommentActions.SetComments)\n  onSetComment(ctx: StateContext<CommentStateModel>, { comments }: CommentActions.SetComments) {\n    ctx.patchState({\n      comments: comments\n    });\n  }\n\n\n  @Action(CommentActions.SetText)\n  onSetText(ctx: StateContext<Comment>, { text }: CommentActions.SetText) {\n    ctx.patchState({\n      text: text\n    });\n  }\n\n  @Action(CommentActions.SetTypeFilter)\n  onSetTypeFilter(ctx: StateContext<CommentStateModel>, { type }: CommentActions.SetTypeFilter) {\n    ctx.patchState({\n      type: type\n    });\n  }\n\n  @Action(CommentActions.ResetTypeComments)\n  onResetTypeComments(ctx: StateContext<CommentStateModel>, { type }: CommentActions.ResetTypeComments) {\n    \n    // comments.indexOf(c => c.type === type);\n    ctx.patchState({\n      type: type\n    });\n  }\n\n  \n  @Action(CommentActions.SetLabel)\n  onSetLabel(ctx: StateContext<CommentStateModel>, { label }: CommentActions.SetLabel) {\n    ctx.patchState({\n      label: label\n    });\n  }\n\n}\n\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\nimport { CommentState } from 'src/app/component/comment/state/comment.state'\n\nimport * as WorksiteSafetyInspectionActions from './worksite-safety-inspection-state.actions'\nimport { WorksiteSafetyInspectionStateModel } from './worksite-safety-inspection-state.model'\n\n@Injectable()\n@State<WorksiteSafetyInspectionStateModel>({\n  name: 'worksitesafetyinspection',\n  defaults: {\n    isWorksiteSafetyHeaderValid: true,\n    isFireExtinguisher: true,\n    isErpPlanning: true,\n    isGroundwork: true,\n    isConfinedSpace: true,\n    isHotwork: true\n  }\n})\n\nexport class WorksiteSafetyInspectionState {\n\n  @Selector()\n  static isWorksiteSafetyHeaderValid(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isWorksiteSafetyHeaderValid\n  }\n\n  // @Selector()\n  // static isSiteHazardAssessmentCompleted?(state: WorksiteSafetyInspectionStateModel): boolean {\n  //   return state.isSiteHazardAssessmentCompleted\n  // }\n\n  @Selector()\n  static isFireExtinguisher?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isFireExtinguisher\n  }\n\n  @Selector()\n  static isErpPlanning?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isErpPlanning\n  }\n\n  @Selector()\n  static isGroundwork?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isGroundwork\n  }\n\n  @Selector()\n  static isHotwork?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isHotwork\n  }\n\n  @Selector()\n  static isConfinedSpace?(state: WorksiteSafetyInspectionStateModel): boolean {\n    return state.isConfinedSpace\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsWorksiteSafetyHeaderValid)\n  onSetIsWorksiteSafetyHeaderValid(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isWorksiteSafetyHeaderValid }: WorksiteSafetyInspectionActions.SetIsWorksiteSafetyHeaderValid) {\n    ctx.patchState({\n      isWorksiteSafetyHeaderValid: isWorksiteSafetyHeaderValid\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsFireExtinguisher)\n  onSetIsFireExtinguisher(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isFireExtinguisher }: WorksiteSafetyInspectionActions.SetIsFireExtinguisher) {\n    ctx.patchState({\n      isFireExtinguisher: isFireExtinguisher\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsErpPlanning)\n  onSetIsErpPlanning(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isErpPlanning }: WorksiteSafetyInspectionActions.SetIsErpPlanning) {\n    ctx.patchState({\n      isErpPlanning: isErpPlanning\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsGroundwork)\n  onSetIsGroundwork(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isGroundwork }: WorksiteSafetyInspectionActions.SetIsGroundwork) {\n    ctx.patchState({\n      isGroundwork: isGroundwork\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsConfinedSpace)\n  onSetIsConfinedSpace(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isConfinedSpace }: WorksiteSafetyInspectionActions.SetIsConfinedSpace) {\n    ctx.patchState({\n      isConfinedSpace: isConfinedSpace\n    });\n  }\n\n  @Action(WorksiteSafetyInspectionActions.SetIsHotwork)\n  onSetIsHotwork(ctx: StateContext<WorksiteSafetyInspectionStateModel>, { isHotwork }: WorksiteSafetyInspectionActions.SetIsHotwork) {\n    ctx.patchState({\n      isHotwork: isHotwork\n    });\n  }\n  \n}\n\n","import { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { IdbPersistenceService } from './idb-persistence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdbCrudService {\n\n  constructor(private idbPersistenceService: IdbPersistenceService) { }\n\n  private hazardAssessmentDB;\n\n  add(store, obj): Observable<void> {\n    return this.idbPersistenceService.put(store, obj);\n  }\n\n  put(store, obj): Observable<void> {\n    return this.idbPersistenceService.put(store, obj);\n  }\n\n  read(store, key): Observable<void> {\n    return this.idbPersistenceService.read(store, key);\n  }\n\n  readAll(store): Observable<void> {\n    return this.idbPersistenceService.readAll(store);\n  }\n\n  delete(store, key): Observable<void> {\n    return this.idbPersistenceService.delete(store, key);\n  }\n\n  clear(store): Observable<void> {\n    return this.idbPersistenceService.clear(store);\n  }\n\n}\n","import { Component, Input } from '@angular/core'\nimport { AppService } from \"../../../../service/app.service\"\n@Component({\n  selector: 'app-worksite-key-positive-finding',\n  templateUrl: './worksite-key-positive-finding.component.html',\n  styleUrls: ['./worksite-key-positive-finding.component.scss']\n})\nexport class WorksiteKeyPositiveFindingComponent {\n\n  @Input() keyPositiveFindingsForm\n\n  constructor(public appService: AppService) { }\n\n  openVoice(formField) {\n    this.appService.popVoiceDialog(this.keyPositiveFindingsForm, formField, 'Scope of Work')\n  }\n\n}\n","<form fxLayout=\"column\" [formGroup]=\"keyPositiveFindingsForm\">\n  <div>\n    <button (click)=\"openVoice('ScopeOfWork')\" mat-mini-fab color=\"primary\">\n      <mat-icon matSuffix>mic_none</mat-icon>\n    </button>\n  </div>\n  <mat-form-field fxFlex>\n    <mat-label>Other Comments - Key Positive Findings</mat-label>\n    <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"5\" cdkAutosizeMaxRows=\"10\" matInput\n      formControlName=\"KeyPositiveFindings\" placeholder=\"Key Positive Findings\"\n      fxFlex></textarea>\n  </mat-form-field>\n</form>","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../state/auth/auth.state'\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\nimport { environment } from '../../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  apiUrl = environment.apiUrl\n\n  constructor(\n    private store: Store,\n    private http: HttpClient) { }\n\n  addTenantId(obj) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    obj[\"tenant_id\"] = tenant.tenant_id\n    return obj\n  }\n\n  save(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl, obj)\n  }\n\n  getFormData(form_id, data_id) {\n    const tenant = this.store.selectSnapshot(AuthState.tenant)\n    return this.http.get(this.apiUrl + 'form/' + tenant.tenant_id + '/' + form_id + '/' + data_id + '/')\n  }\n\n  getData(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.get(this.apiUrl + obj.tenant_id + '/' + obj.form_id + '/')\n  }\n\n  saveList(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl + 'list/', obj)\n  }\n\n  getLists(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl + 'lists/', obj)\n  }\n\n  getEmailList(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl + 'emails/', obj)\n  }\n\n  update(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.put(this.apiUrl, obj)\n  }\n\n  delete(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.post(this.apiUrl + 'delete/', obj)\n  }\n\n  signForm(obj) {\n    obj = this.addTenantId(obj)\n    return this.http.put(this.apiUrl + 'form/sign/', obj)\n  }\n\n  getPDF(name) {\n    try {\n      let headers = new HttpHeaders().set('Accept', 'application/pdf')\n      this.http.get(this.apiUrl + 'pdf/' + name + '/', {\n        headers: headers,\n        responseType: 'blob'\n      }).subscribe(data => {\n        const blob: Blob = new Blob([data], { type: 'application/pdf' });\n        const fileName = name;\n        const objectUrl: string = URL.createObjectURL(blob);\n        const a: HTMLAnchorElement = document.createElement('a') as HTMLAnchorElement;\n\n        a.href = objectUrl;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.click();\n\n        document.body.removeChild(a);\n        URL.revokeObjectURL(objectUrl);\n      })\n    }\n    catch (error) {\n      throw error;\n    }\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core'\n\nimport { MAT_DIALOG_DATA, MatDialogConfig, MatDialogRef, MatDialog } from \"@angular/material/dialog\"\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CameraComponent } from '../../../camera/camera.component'\n\nimport { Store } from '@ngxs/store'\nimport { VehicleInspectionState } from '../state/vehicle-inspection.state'\nimport { SetSelectedComments } from '../state/vehicle-inspection-state.actions'\n\n@Component({\n  selector: 'app-detail-comments',\n  templateUrl: './detail-comments.component.html',\n  styleUrls: ['./detail-comments.component.scss']\n})\nexport class DetailCommentsComponent implements OnInit {\n\n  commentForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    public appService: AppService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<DetailCommentsComponent>) {\n    this.commentForm = this.formBuilder.group({\n      comments: ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.commentForm.controls['comments'].setValue(this.data.detailForm.get(this.data.formControlName).value)\n  }\n\n  snapShot() {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.height = '100%'\n    dialogConfig.width = '100%'\n    dialogConfig.maxWidth = '100vw',\n    dialogConfig.maxHeight = '100vh',\n    dialogConfig.data = this.data.formControlName\n    this.dialog.open(CameraComponent, dialogConfig)\n  }\n\n  save() {\n    let selectedComments:any = this.store.selectSnapshot(VehicleInspectionState.selectedComments)\n    const isSaved = selectedComments.find(c => c == this.data.fieldName)\n    if (!isSaved) selectedComments.push(this.data.fieldName)\n    this.store.dispatch(new SetSelectedComments(selectedComments))\n    this.data.detailForm.controls[this.data.formControlName].setValue(this.commentForm.get('comments').value)\n    this.appService.currentDetailForm = this.data.detailForm.value\n    this.dialogRef.close()\n  }\n\n  delete() {\n    //TODO - delete pics for formfield\n    let selectedComments:any = this.store.selectSnapshot(VehicleInspectionState.selectedComments)\n    const idx = selectedComments.findIndex(c => c == this.data.fieldName)\n    selectedComments.splice(idx,1)\n    this.store.dispatch(new SetSelectedComments(selectedComments))\n    this.data.detailForm.controls[this.data.formControlName].setValue(null)\n    this.dialogRef.close()\n  }\n}\n","<div fxLayout=\"column\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n    <div class=\"mat-headline\">{{data.formControlName | splitCamelCase}}</div>\n    <div class=\"hand\" (click)=\"dialogRef.close()\">\n      <mat-icon>close</mat-icon>\n    </div>\n  </div>\n  <form [formGroup]=\"commentForm\">\n    <div fxLayout=\"column\">\n      <mat-form-field fxFlex>\n        <mat-label>Describe Discrepancies</mat-label>\n        <textarea matInput formControlName=\"comments\"></textarea>\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n      <button (click)=\"snapShot()\" mat-raised-button color=\"primary\" [disabled]=\"!commentForm.valid\">\n        SNAP PIC\n      </button>\n      <div fxLayoutGap=\"20px\">\n        <button (click)=\"delete()\" mat-stroked-button color=\"warn\">DELETE</button>\n        <button (click)=\"save()\" mat-raised-button color=\"primary\">SAVE</button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Router } from '@angular/router'\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { ErrorService } from \"../../../service/error.service\"\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage, SetChildPage, SetChildPageLabel, SetIsSignIn, SetChildPageIcon } from '../../../state/auth/auth-state.actions'\n\n@Component({\n  selector: 'app-pin',\n  templateUrl: './pin.component.html',\n  styleUrls: ['./pin.component.scss']\n})\nexport class PinComponent {\n\n  @Output() changeTheme = new EventEmitter()\n\n  @Select(DeviceState.background) background$: Observable<string>\n\n  auth\n  token\n  prefs\n\n  pin = environment.pin\n  tenant = environment.tenant\n\n  pinForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private fb: FormBuilder,\n    public appService: AppService,\n    private authService: AuthService, \n    private errorService: ErrorService) { \n    this.pinForm = this.fb.group({\n      pin: ['', Validators.required]\n    })\n  }\n\n  loginPIN() {\n    if (this.pin == this.pinForm.controls['pin'].value) {\n      this.store.dispatch(new SetPage('admin'))\n      this.store.dispatch(new SetChildPage('forms'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n      this.store.dispatch(new SetChildPageIcon('dynamic_form'))\n      this.store.dispatch(new SetIsSignIn(true))\n      this.appService.initializeAdminNotifications()\n    }\n    else this.errorService.popSnackbar('Incorrect PIN')\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('home'))\n  }\n\n}\n","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <mat-toolbar>\n    <span class=\"text-color\"><mat-icon class=\"material-icons-outlined\">admin_panel_settings</mat-icon>&nbsp;Admin</span>\n    <span class=\"toolbar-spacer\"></span>\n    <button (click)=close() mat-icon-button>\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <div class=\"top-margin text-color\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n      <div>Enter PIN</div>\n    </div>\n    <form [formGroup]=\"pinForm\">\n      <div fxLayout=\"column\">\n        <mat-form-field appearance=\"outline\" fxFlex>\n          <mat-label>PIN</mat-label>\n          <input matInput placeholder=\"Enter PIN\" formControlName=\"pin\" type=\"password\" required>\n          <mat-error>\n            PIN is required!\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"1rem\">\n        <button (click)=close() mat-stroked-button color=\"primary\">\n          CANCEL\n        </button>\n        <button (click)=loginPIN() mat-raised-button color=\"primary\" [disabled]=\"!pinForm.valid\">\n          OK\n        </button>\n      </div>\n    </form>\n  </div>\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\nimport { environment } from '../../../environments/environment'\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent {\n\n  githubUrl = environment.githubUrl\n\n  constructor(\n    public matBottomSheetRef: MatBottomSheetRef<ContactComponent>) { }\n\n  close() {\n    this.matBottomSheetRef.dismiss()\n  }\n\n  signup() {}\n\n}\n","<div fxLayout=\"column\">\n  <div class=\"text-color mat-h1\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div>Contact</div>\n    <div>\n      <button mat-icon-button (click)=\"close()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div fxLayout=\"column\" class=\"text-color\" fxLayoutAlign=\"center center\">\n      <!-- <img src=\"assets/formlocoMap.svg\" width=\"269px\"> -->\n      <!-- <h1>formloco Canada</h1>\n      <div>Brock Clayton</div>\n      <div>Calgary, Alberta</div> -->\n      <h3>brock@formloco.com</h3>\n      <h3>403-465-2151</h3>\n      <!-- <h1>formloco USA</h1>\n      <div>Ted Messerly</div>\n      <div>Lodi, Wisconson</div>\n      <div>ted@formloco.com</div>\n      <div>1-833-665-0776</div> -->\n  </div>\n</div>","import { Component, Inject } from \"@angular/core\"\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\"\n\nimport * as _ from 'lodash'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\nimport { DeviceState } from '../../state/device/device.state'\nimport { SetPics } from '../../state/device/device-state.actions'\n\n@Component({\n  selector: 'app-pic-delete',\n  templateUrl: './pic-delete.component.html',\n  styleUrls: ['./pic-delete.component.scss']\n})\nexport class PicDeleteComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n\n  pics\n\n  constructor(\n    private store: Store,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<PicDeleteComponent>\n  ) { }\n\n  deletePhoto() {\n    this.pics = _.cloneDeep(this.store.selectSnapshot(DeviceState.pics))\n    this.pics.splice(this.data, 1)\n    this.store.dispatch(new SetPics(this.pics))\n    this.dialogRef.close()\n  }\n\n}\n","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">Delete Pic</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer hand\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<div fxLayoutAlign=\"center center\">\n  <img [src]=\"(pics$ | async)[data]\" height=\"200px\">\n</div>\n<br>\n<div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"2rem\">\n  <button (click)=\"deletePhoto()\" mat-raised-button color=\"warn\">\n    Delete\n  </button>\n  <button mat-stroked-button color=\"warn\" (click)=\"dialogRef.close()\">\n    Cancel\n  </button>\n</div>\n","import { Component, OnInit, HostBinding, OnDestroy } from '@angular/core'\n\nimport { OverlayContainer } from '@angular/cdk/overlay'\n\nimport { Subject } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\n\nimport { Platform } from '@angular/cdk/platform'\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout'\n\nimport { AppService } from \"./service/app.service\"\nimport { AuthService } from \"./service/auth.service\"\nimport { IdbCrudService } from \"./service-idb/idb-crud.service\"\n\nimport { Store } from '@ngxs/store'\nimport { DeviceState } from './state/device/device.state'\n\nimport { SetScreenSize, SetScreenWidth } from './state/device/device-state.actions'\nimport { SetUser, SetPage, SetTenant, SetKioske } from './state/auth/auth-state.actions'\nimport { SetBackground, SetIsDarkMode } from './state/device/device-state.actions'\n\nimport { environment } from '../environments/environment'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  @HostBinding('class') className = 'darkMode'\n\n  kioske = environment.kioske\n  tenant = environment.tenant\n\n  destroyed = new Subject<void>();\n  title = 'MOBILE FORMS'\n\n  prefs\n\n  myInnerWidth = window.innerWidth\n\n  displayNameMap = new Map([\n    [Breakpoints.XSmall, 'XSmall'],\n    [Breakpoints.Small, 'Small'],\n    [Breakpoints.Medium, 'Medium'],\n    [Breakpoints.Large, 'Large'],\n    [Breakpoints.XLarge, 'XLarge'],\n  ]);\n\n  constructor(\n    private store: Store,\n    public platform: Platform,\n    public appService: AppService,\n    private authService: AuthService,\n    private idbCrudService: IdbCrudService,\n    breakpointObserver: BreakpointObserver,\n    private overlayContainer: OverlayContainer) {\n    breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge,\n    ]).pipe(takeUntil(this.destroyed)).subscribe(result => {\n      for (const query of Object.keys(result.breakpoints)) {\n        if (result.breakpoints[query]) {\n          this.store.dispatch(new SetScreenSize(this.displayNameMap.get(query) ?? 'Unknown'))\n          this.store.dispatch(new SetScreenWidth(this.myInnerWidth + 'px'))\n        }\n      }\n    })\n  }\n\n  ngOnInit(): void {\n    this.store.dispatch(new SetKioske(this.kioske))\n    this.store.dispatch(new SetTenant(this.tenant))\n\n    this.appService.checkNetworkStatus()\n\n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs\n      if (this.prefs.length > 0) {\n        if (this.prefs[0][\"user\"][\"isDarkMode\"]) this.setMode('darkMode')\n        else this.setMode('')\n\n        this.store.dispatch(new SetUser(this.prefs[0][\"user\"]))\n        this.store.dispatch(new SetIsDarkMode(this.prefs[0][\"user\"][\"isDarkMode\"]))\n\n        const isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n\n        if (isOnline) this.appService.checkOfflineData()\n      }\n      else {\n        this.setMode('darkMode')\n        this.store.dispatch(new SetIsDarkMode(true))\n\n        if (this.kioske) this.store.dispatch(new SetPage('kioske'))\n        else this.store.dispatch(new SetPage('identify'))\n      }\n    })\n  }\n\n  setMode(darkClassName) {\n    this.className = 'darkMode' ? darkClassName : ''\n\n    if (darkClassName === 'darkMode') {\n      this.store.dispatch(new SetBackground('#3b3b3b'))\n      this.overlayContainer.getContainerElement().classList.add(darkClassName)\n    }\n    else {\n      this.store.dispatch(new SetBackground(''))\n      this.overlayContainer.getContainerElement().classList.remove('darkMode')\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next()\n    this.destroyed.complete()\n  }\n\n}\n\n","<router-outlet></router-outlet>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox-run',\n  templateUrl: './checkbox-run.component.html',\n  styleUrls: ['./checkbox-run.component.scss']\n})\nexport class CheckboxRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    this.appService.detailArray[this.index].checkboxArray.forEach(element => {\n      if (element.required)\n        this.runForm.addControl(element.formControlName, \n            new FormControl(false, Validators.required));\n      else\n        this.runForm.addControl(element.formControlName, new FormControl(false));\n    });\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding text-color\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n  <div fxLayout=\"row\">\n    <label>{{appService.detailArray[index].label}}</label>\n  </div>\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n    <mat-checkbox *ngFor=\"let checkbox of appService.detailArray[index].checkboxArray\"\n                  formControlName=\"{{checkbox.formControlName}}\"\n                  value=\"{{checkbox.value}}\"  \n                  [labelPosition]=\"checkbox.labelPosition\" [required]=\"checkbox.required\">\n      {{checkbox.label}}\n    </mat-checkbox>\n  </div>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core'\n\nimport { FormControl } from \"@angular/forms\"\nimport { Store } from '@ngxs/store'\n\nimport { AuthState } from '../../../../state/auth/auth.state'\n\nimport { AutoCompleteService } from \"../../../../service/auto-complete.service\"\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() headerForm\n\n  header\n  lookupLists\n\n  customYearValues = [2025, 2024, 2023, 2022, 2021, 2016, 2008, 2004, 2000, 1996];\n  customDayShortNames = ['s\\u00f8n', 'man', 'tir', 'ons', 'tor', 'fre', 'l\\u00f8r'];\n  customPickerOptions: any;\n\n  years: string[] = []\n  makes: string[] = []\n  models: string[] = []\n  divisions: string[] = []\n  stakeholders: string[] = []\n\n  constructor(\n    private store: Store,\n    public autoCompleteService: AutoCompleteService) { }\n\n  ngOnInit(): void {\n    this.headerForm.controls['Date'].setValue(new Date().toISOString())\n    this.lookupLists = this.store.selectSnapshot(AuthState.lookupListData)\n\n    if (this.lookupLists) {\n      this.stakeholders = this.lookupLists.filter(d => { return d.name == \"stakeholders\" })[0][\"rows\"].map(d => { return d.data })\n      this.stakeholders.sort()\n\n      this.divisions = this.lookupLists.filter(d => { return d.name == \"divisions\" })[0][\"rows\"].map(d => { return d.data })\n      this.divisions.sort()\n\n      this.years = this.lookupLists.filter(d => { return d.name == \"years\" })[0][\"rows\"].map(d => { return d.data })\n      this.years.sort()\n    }\n  }\n\n}\n","<form fxLayout=\"column\" [formGroup]=\"headerForm\">\n  <ion-label position=\"stacked\">Choose a date</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"Date\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <mat-form-field class=\"bot-pad full-width-field\">\n    <mat-label> First & Last Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter First Name & Last Name\" matInput\n      [formControl]=\"autoCompleteService.workersControl\" [matAutocomplete]=\"autoWorkers\" required>\n    <mat-hint>Worker Completing Inspection</mat-hint>\n    <mat-autocomplete #autoWorkers=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Supervisor Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Supervisor Name\" matInput\n      [formControl]=\"autoCompleteService.supervisorsControl\" [matAutocomplete]=\"autoSupervisors\" required>\n    <mat-autocomplete #autoSupervisors=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let supervisor of autoCompleteService.filteredSupervisors$ | async\" [value]=\"supervisor.name\"\n        required>\n        {{supervisor.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Stakeholder</mat-label>\n    <mat-select panelClass=\"select-panel\" formControlName=\"Stakeholder\" required>\n      <mat-option *ngFor=\"let stakeholder of stakeholders\" [value]=\"stakeholder\" required>{{stakeholder}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Division</mat-label>\n    <mat-select panelClass=\"select-panel\" formControlName=\"Division\" required>\n      <mat-option *ngFor=\"let division of divisions\" [value]=\"division\" required>{{division}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>License Plate #</mat-label>\n    <input type=\"text\" placeholder=\"Enter Vehicle License Plate #\" matInput formControlName=\"LicensePlate\" required>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Unit #</mat-label>\n    <input type=\"text\" placeholder=\"Unit #\" matInput formControlName=\"UnitNumber\">\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Vehicle Make</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Vehicle Make\" matInput\n      [formControl]=\"autoCompleteService.makesControl\" [matAutocomplete]=\"make\" required>\n    <mat-autocomplete #make=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let make of autoCompleteService.filteredMakes$ | async\" [value]=\"make\" required>\n        {{make}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Vehicle Model</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Vehicle Model\" matInput\n      [formControl]=\"autoCompleteService.modelsControl\" [matAutocomplete]=\"model\" required>\n    <mat-autocomplete #model=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let model of autoCompleteService.filteredModels$ | async\" [value]=\"model\" required>\n        {{model}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Vehicle Year</mat-label>\n    <mat-select panelClass=\"select-panel\" formControlName=\"Year\" required>\n      <mat-option *ngFor=\"let year of years\" [value]=\"year\">{{year}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Vehicle Mileage Reading (KM)</mat-label>\n    <input matInput placeholder=\"Vehicle Mileage Reading (KM)\" formControlName=\"Mileage\" type=\"number\" required>\n  </mat-form-field>\n  <div class=\"text-color radio-center\">Current Registration is in the vehicle</div>\n  <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n    <mat-radio-group formControlName=\"CurrentRegistrationInVehicle\">\n      <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n      <mat-radio-button value=\"no\">No</mat-radio-button>\n    </mat-radio-group>\n  </div>\n  <div class=\"text-color radio-center\">Current Insurance (pink slip) in vehicle</div>\n  <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n    <mat-radio-group formControlName=\"CurrentInsuranceInVehicle\">\n      <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n      <mat-radio-button value=\"no\">No</mat-radio-button>\n    </mat-radio-group>\n  </div>\n  <ion-label position=\"stacked\">Insurance Expiry Date</ion-label>\n  <ion-datetime displayFormat=\"MMM DD, YYYY\" formControlName=\"RegistrationDate\" max=\"2025-12-31\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-radio-run',\n  templateUrl: './radio-run.component.html',\n  styleUrls: ['./radio-run.component.scss']\n})\nexport class RadioRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    if (this.appService.detailArray[this.index].required !== undefined)\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(null, Validators.required));\n    else\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(''));\n  }\n   \n}\n","<div [formGroup]=\"runForm\" class=\"control-padding text-color\" fxLayout=\"column\" fxLayoutAlign=\"center\">\n  <div>\n    <label>{{appService.detailArray[index].label}}</label>\n  </div>\n  <br>\n  <div fxLayoutAlign=\"center\">\n    <mat-radio-group formControlName=\"{{appService.detailArray[index].formControlName}}\" fxLayoutGap=\"40px\">\n      <mat-radio-button *ngFor=\"let radio of appService.detailArray[index].radioArray\" [labelPosition]=\"radio.labelPosition\" [value]=\"radio.value\"\n        required=\"appService.detailArray[index].required\">\n        {{radio.label}}\n      </mat-radio-button>\n    </mat-radio-group>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3 class=\"h5 text-primary font-weight-semi-bold\">Using our services</h3>\n\n<p>You must follow any policies made available to you within the Services.</p>\n<p>Don't misuse our Services. For example, don't interfere with our Services or try to access them using a method\n  other than the interface and the instructions that we provide. You may use our Services only as permitted by\n  law, including applicable export and re-export control laws and regulations. We may suspend or stop providing\n  our Services to you if you do not comply with our terms or policies or if we are investigating suspected misconduct.\n</p>\n<p>Using our Services does not give you ownership of any intellectual property rights in our Services or the content\n  you access. You may not use content from our Services unless you obtain permission from its owner or are otherwise\n  permitted by law. These terms do not grant you the right to use any branding or logos used in our Services. Don't\n  remove, obscure, or alter any legal notices displayed in or along with our Services.</p>\n\n<h3 class=\"h5 text-primary font-weight-semi-bold\">Privacy and copyright protection</h3>\n\n<p>Some of our Services allow you to upload, submit, store, send or receive content. You retain ownership of any\n  intellectual\n  property rights that you hold in that content. In short, what belongs to you stays yours.</p>\n<p>formloco will never sell, share or distribute your data to any 3rd party.</p>","<div class=\"container-padding\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n    <div fxFlex=\"70\">\n      <h2>{{ (selectedForm$ | async)?.name }}</h2>\n    </div>\n    <!-- <div *ngIf=\"isData\" fxLayoutGap=\"20px\">\n      <button mat-raised-button color=\"primary\" (click)=\"exportData()\">\n        Export Data\n      </button>\n    </div> -->\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" fxLayoutGap=\"20px\">\n    <mat-form-field>\n      <mat-label>Filter by Worker</mat-label>\n      <mat-select (selectionChange)=\"applyFilter($event)\">\n        <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n          {{worker.name}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Filter by Supervisor</mat-label>\n      <mat-select (selectionChange)=\"applyFilter($event)\">\n        <mat-option *ngFor=\"let supervisor of autoCompleteService.filteredSupervisors$ | async\" [value]=\"supervisor.name\"\n          required>\n          {{supervisor.name}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n  <div>\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n      <ng-container matColumnDef=\"Worker\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Worker</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let row\">\n          {{row.data.header.Worker}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"Supervisor\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Supervisor</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let row\">\n          {{row.data.header.Supervisor}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"date_created\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Create Date</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let row\">\n          {{row.user_created.date_created}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"SignoffDate\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Signoff Date</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let row\">\n          {{row.data.SignoffDate}}\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"comments\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Comments</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let row\">\n          <div *ngIf=\"row.data.comments\" (click)=\"openPdf(element.pdf)\">\n            <mat-icon class=\"material-icons-outlined\" matBadgeColor=\"primary\" matBadge=\"{{row.data.comments.length}}\">comment</mat-icon>\n          </div>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"corrective_actions\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let row\">\n          <div *ngIf=\"row.data.correctiveActions && row.data.correctiveActions.length > 0\" (click)=\"openPdf(element.pdf)\">\n            <mat-icon class=\"material-icons-outlined\" matBadgeColor=\"primary\" matBadge=\"{{row.data.correctiveActions.length}}\">check_circle</mat-icon>\n          </div>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"notifications\">\n        <th mat-header-cell *matHeaderCellDef>Notifications</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let row\">\n          <div (click)=\"openNotification(element)\">\n            <mat-icon class=\"material-icons-outlined\">notifications</mat-icon>\n          </div>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"pdf\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>PDF</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let row\">\n          <div (click)=\"openPdf(element.pdf)\"><u>{{ row.pdf }}</u></div>\n        </td>\n      </ng-container>\n      <ng-container matColumnDef=\"form\">\n        <th mat-header-cell *matHeaderCellDef>Form</th>\n        <td class=\"hand\" mat-cell *matCellDef=\"let row\">\n          <mat-icon class=\"material-icons-outlined\">dynamic_form</mat-icon>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row (click)=\"edit(i)\" *matRowDef=\"let row; let i = index; columns: displayedColumns;\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[25, 50, 75, 100]\"></mat-paginator>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { ApiService } from \"../../../service/api.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { MatSort } from '@angular/material/sort'\nimport { MatPaginator } from '@angular/material/paginator'\nimport { MatTableDataSource } from '@angular/material/table'\n\nimport { saveAs } from 'file-saver'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { AutoCompleteService } from \"../../../service/auto-complete.service\"\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.component.html',\n  styleUrls: ['./data.component.scss']\n})\nexport class DataComponent implements OnInit {\n\n  @Select(AuthState.selectedForm) selectedForm$: Observable<string>\n\n  @ViewChild(MatPaginator) paginator: MatPaginator\n  @ViewChild(MatSort) sort: MatSort\n\n  dataSource\n  displayedColumns: string[] = ['Worker', 'Supervisor', 'date_created', 'SignoffDate', 'pdf', 'comments', 'corrective_actions', 'notifications', 'form']\n \n  name\n  forms\n  records\n\n  isData = false\n  \n  constructor(\n    private store: Store,\n    private apiService: ApiService,\n    public idbCrudService: IdbCrudService,\n    public autoCompleteService: AutoCompleteService) { }\n\n  ngOnInit() {\n    this.getCloud()\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getCloud() {\n    this.idbCrudService.readAll('form').subscribe(forms => {\n      this.forms = forms\n      const selectedForm = this.store.selectSnapshot(AuthState.selectedForm)\n      const tenant = this.store.selectSnapshot(AuthState.tenant)\n      let form = this.forms.filter(f => f.id === selectedForm[\"id\"])\n      let obj = {\n        form_id: form[0][\"form_id\"],\n        tenant_id: tenant[\"tenant_id\"]\n      }\n      this.apiService.getData(obj).subscribe((data: any) => {\n        console.log(data)\n        this.dataSource = new MatTableDataSource(data)\n        // this.dataSource.data = data\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        // this.appService.\n        if (data.length > 0) this.isData = true\n      })\n    })\n  }\n\n  exportData() {\n    const dataKeys = Object.keys(this.records[0].data);\n   \n    console.log(dataKeys)\n     dataKeys.forEach((key, idx) => {\n      this.records.forEach(record => {\n        // console.log(key, record)\n        let tt = dataKeys[idx]\n        console.log(tt)\n        // allData.push({key: record[key]})\n        // console.log(record[key])\n      })\n    })\n    // let allData = []\n    // dataKeys.forEach(key => {\n    //   let ff = key[]\n    //   allData.push(key,[])\n    // })\n\n    // console.log(allData)\n    // let dataArray = []\n    // this.records.forEach(record => {\n    //   dataArray.push(record.data)\n    // })\n\n    // let allData = []\n    // dataKeys.forEach(key => {\n    //   dataArray.forEach(record => {\n    //     console.log(key)\n    //     // allData.push({key: record[key]})\n    //     // console.log(record[key])\n    //   })\n    // })\n    // console.log(allData)\n    // let csv = this.records.map(row =>\n    //   header.map(fieldName => JSON.stringify(row[fieldName], replacer)).join(','));\n    // csv.unshift(header.join(','));\n    // let csvArray = csv.join('\\r\\n');\n\n    // console.log(csvArray)\n    // var blob = new Blob([csvArray], { type: 'text/csv' })\n    // saveAs(blob, this.store.selectSnapshot(AuthState.page))\n  }\n\n  openPdf(pdf) {\n    const pdfName = pdf.slice(0, -4)\n    this.apiService.getPDF(pdfName)\n  }\n\n}","<mat-accordion>\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Vehicle\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-header [headerForm]=headerForm></app-header>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"isHeaderValid$ | async\" [expanded]=\"step === 1\" (opened)=\"setStep(1)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Details\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-detail [detailForm]=detailForm></app-detail>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"detailStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"isHeaderValid$ | async\" [expanded]=\"step === 2\" (opened)=\"setStep(2)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Discrepancies\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-discrepancy [step]='step'></app-discrepancy>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"isHeaderValid$ | async\" [expanded]=\"step === 3\" (opened)=\"setStep(3)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Signature\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div *ngIf=\"kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon class=\"icon-169px text-color\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"!isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"!(isHeaderValid$ | async)\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"(isHeaderValid$ | async)\" class=\"icon-169px-action hand\" (click)=\"submitForm()\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"(isHeaderValid$ | async)\" class=\"icon-169px-action hand\" (click)=\"updateForm()\">fingerprint</mat-icon>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit } from '@angular/core';\nimport * as _moment from 'moment';\n\nimport { Observable } from 'rxjs';\nimport { AppService } from '../../../service/app.service';\nimport { ApiService } from '../../../service/api.service';\nimport { FormService } from '../../../service/form.service';\nimport { IdbCrudService } from '../../../service-idb/idb-crud.service';\n\nimport { AutoCompleteService } from '../../../service/auto-complete.service';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { environment } from '../../../../environments/environment';\n\nimport { Store, Select } from '@ngxs/store';\nimport { AuthState } from '../../../state/auth/auth.state';\nimport { DeviceState } from '../../../state/device/device.state';\n\nimport { VehicleInspectionState } from './state/vehicle-inspection.state';\nimport { SetIsHeaderValid } from './state/vehicle-inspection-state.actions';\nimport {\n  VEHICLE_INSPECTION,\n  LABEL,\n} from './state/vehicle-inspection-state.model';\n\nimport { SetPics } from '../../../state/device/device-state.actions';\nimport {\n  SetPage,\n  SetChildPageLabel,\n} from '../../../state/auth/auth-state.actions';\n\nimport { CommentState } from '../../comment/state/comment.state';\nimport { SetLabel, SetComments } from '../../comment/state/comment.actions';\n\nimport { CorrectiveActionState } from '../../corrective-action/state/corrective-action.state';\nimport { SetCorrectiveActions } from '../../corrective-action/state/corrective-action.actions';\n@Component({\n  selector: 'app-vehicle-inspection',\n  templateUrl: './vehicle-inspection.component.html',\n  styleUrls: ['./vehicle-inspection.component.scss'],\n})\nexport class VehicleInspectionComponent implements OnInit {\n  @Select(VehicleInspectionState.isHeaderValid)\n  isHeaderValid$: Observable<boolean>;\n\n  pics;\n  isEdit = false;\n  isOnline;\n  formData;\n  formDataID;\n  step = 0;\n  history = [];\n  lookupLists;\n  kioske;\n  notificationObj\n\n  headerForm: FormGroup;\n  detailForm: FormGroup;\n  correctiveActionForm: FormGroup\n  discrepancyForm: FormGroup\n\n  VEHICLE_INSPECTION = VEHICLE_INSPECTION;\n\n  isPanelOpen = false;\n\n  apiURL = environment.apiUrl;\n  messageUrl = environment.messageUrl;\n\n  constructor(\n    private store: Store,\n    private snackBar: MatSnackBar,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private formService: FormService,\n    private idbCrudService: IdbCrudService,\n    public autoCompleteService: AutoCompleteService\n  ) {\n    this.headerForm = this.formBuilder.group({\n      Date: [],\n      Worker: [],\n      Supervisor: [],\n      Stakeholder: [],\n      Division: [],\n      Mileage: [],\n      LicensePlate: [],\n      UnitNumber: [],\n      Make: [],\n      Model: [],\n      Year: [],\n      RegistrationDate: [],\n      CurrentRegistrationInVehicle: [],\n      CurrentInsuranceInVehicle: [],\n    });\n    this.detailForm = this.formBuilder.group({\n      IgnitionKey: [],\n      IgnitionKeyComments: [],\n      OilLevel: [],\n      OilLevelComments: [],\n      WasherFluidLevel: [],\n      WasherFluidLevelComments: [],\n      CoolantLevel: [],\n      CoolantLevelComments: [],\n      PowerSteeringFluidLevel: [],\n      PowerSteeringFluidLevelComments: [],\n      AirGauge: [],\n      AirGaugeComments: [],\n      Horn: [],\n      HornComments: [],\n      HeaterDefroster: [],\n      HeaterDefrosterComments: [],\n      WindshieldWipersWashers: [],\n      WindshieldWipersWashersComments: [],\n      AllSignalLights: [],\n      AllSignalLightsComments: [],\n      InteriorLights: [],\n      InteriorLightsComments: [],\n      MirrorsDamageAdjustments: [],\n      MirrorsDamageAdjustmentsComments: [],\n      WindshieldVisibility: [],\n      WindshieldVisibilityComments: [],\n      VisualInspectionExterior: [],\n      VisualInspectionExteriorComments: [],\n      InsideEngineCompartment: [],\n      InsideEngineCompartmentComments: [],\n      TransmissionFluidLevel: [],\n      TransmissionFluidLevelComments: [],\n      HighlightSignal4wayTailBackup: [],\n      HighlightSignal4wayTailBackupComments: [],\n      FuelLevel: [],\n      FuelLevelComments: [],\n      FirstAidKit: [],\n      FirstAidKitComments: [],\n      FireExtinguisher: [],\n      FireExtinguisherComments: [],\n      SurvivalKit: [],\n      SurvivalKitComments: [],\n      FuelKey: [],\n      FuelKeyComments: [],\n      TwoWayRadio: [],\n      TwoWayRadioComments: [],\n      Tires: [],\n      TiresComments: [],\n      SpillKit: [],\n      SpillKitComments: [],\n    });\n    this.discrepancyForm = this.formBuilder.group({\n      Discrepancy: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske);\n    this.isOnline = this.store.selectSnapshot(DeviceState.isOnline);\n\n    this.store.select(AuthState.formData).subscribe((formData) => {\n      this.formData = formData;\n\n      if (this.formData && formData['data']) {\n        this.isEdit = true;\n        this.setFormData(formData['data']);\n      }\n      else this.store.dispatch(new SetIsHeaderValid(true))\n    });\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  detailStep() {\n    this.appService.currentDetailForm = this.detailForm.value;\n    this.step++;\n  }\n\n  nextStep() {\n    this.checkValidHeader();\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  setFormData(data) {\n    if (data.header) {\n      this.headerForm.controls['Date'].setValue(data.header.Date);\n      this.headerForm.controls['Worker'].setValue(data.header.Worker);\n      this.headerForm.controls['Supervisor'].setValue(data.header.Supervisor);\n      this.headerForm.controls['Stakeholder'].setValue(data.header.Stakeholder);\n      this.headerForm.controls['Division'].setValue(data.header.Division);\n      this.headerForm.controls['Mileage'].setValue(data.header.Mileage);\n      this.headerForm.controls['LicensePlate'].setValue(\n        data.header.LicensePlate\n      );\n      this.headerForm.controls['UnitNumber'].setValue(data.header.UnitNumber);\n      this.autoCompleteService.makesControl.setValue(data.header.Make);\n      this.autoCompleteService.modelsControl.setValue(data.header.Model);\n      this.headerForm.controls['Year'].setValue(data.header.Year);\n      this.headerForm.controls['CurrentRegistrationInVehicle'].setValue(\n        data.header.CurrentRegistrationInVehicle\n      );\n      this.headerForm.controls['CurrentInsuranceInVehicle'].setValue(\n        data.header.CurrentInsuranceInVehicle\n      );\n      this.headerForm.controls['RegistrationDate'].setValue(\n        data.header.RegistrationDate\n      );\n      this.autoCompleteService.workersControl.setValue(data.header.Worker);\n      this.autoCompleteService.supervisorsControl.setValue(\n        data.header.Supervisor\n      );\n    }\n\n    if (data.detail) {\n      this.detailForm.controls['IgnitionKey'].setValue(data.detail.IgnitionKey);\n      this.detailForm.controls['IgnitionKeyComments'].setValue(\n        data.detail.IgnitionKeyComments\n      );\n      this.detailForm.controls['OilLevel'].setValue(data.detail.OilLevel);\n      this.detailForm.controls['OilLevelComments'].setValue(\n        data.detail.OilLevelComments\n      );\n      this.detailForm.controls['WasherFluidLevel'].setValue(\n        data.detail.WasherFluidLevel\n      );\n      this.detailForm.controls['WasherFluidLevelComments'].setValue(\n        data.detail.WasherFluidLevelComments\n      );\n      this.detailForm.controls['CoolantLevel'].setValue(\n        data.detail.CoolantLevel\n      );\n      this.detailForm.controls['CoolantLevelComments'].setValue(\n        data.detail.CoolantLevelComments\n      );\n      this.detailForm.controls['PowerSteeringFluidLevel'].setValue(\n        data.detail.PowerSteeringFluidLevel\n      );\n      this.detailForm.controls['PowerSteeringFluidLevelComments'].setValue(\n        data.detail.PowerSteeringFluidLevelComments\n      );\n      this.detailForm.controls['AirGauge'].setValue(data.detail.AirGauge);\n      this.detailForm.controls['AirGaugeComments'].setValue(\n        data.detail.AirGaugeComments\n      );\n      this.detailForm.controls['Horn'].setValue(data.detail.Horn);\n      this.detailForm.controls['HornComments'].setValue(\n        data.detail.HornComments\n      );\n      this.detailForm.controls['HeaterDefroster'].setValue(\n        data.detail.HeaterDefroster\n      );\n      this.detailForm.controls['HeaterDefrosterComments'].setValue(\n        data.detail.HeaterDefrosterComments\n      );\n      this.detailForm.controls['WindshieldWipersWashers'].setValue(\n        data.detail.WindshieldWipersWashers\n      );\n      this.detailForm.controls['WindshieldWipersWashersComments'].setValue(\n        data.detail.WindshieldWipersWashersComments\n      );\n      this.detailForm.controls['AllSignalLights'].setValue(\n        data.detail.AllSignalLights\n      );\n      this.detailForm.controls['AllSignalLightsComments'].setValue(\n        data.detail.AllSignalLightsComments\n      );\n      this.detailForm.controls['InteriorLights'].setValue(\n        data.detail.InteriorLights\n      );\n      this.detailForm.controls['InteriorLightsComments'].setValue(\n        data.detail.InteriorLightsComments\n      );\n      this.detailForm.controls['MirrorsDamageAdjustments'].setValue(\n        data.detail.MirrorsDamageAdjustments\n      );\n      this.detailForm.controls['MirrorsDamageAdjustmentsComments'].setValue(\n        data.detail.MirrorsDamageAdjustmentsComments\n      );\n      this.detailForm.controls['WindshieldVisibility'].setValue(\n        data.detail.WindshieldVisibility\n      );\n      this.detailForm.controls['WindshieldVisibilityComments'].setValue(\n        data.detail.WindshieldVisibilityComments\n      );\n      this.detailForm.controls['VisualInspectionExterior'].setValue(\n        data.detail.VisualInspectionExterior\n      );\n      this.detailForm.controls['VisualInspectionExteriorComments'].setValue(\n        data.detail.VisualInspectionExteriorComments\n      );\n      this.detailForm.controls['InsideEngineCompartment'].setValue(\n        data.detail.InsideEngineCompartment\n      );\n      this.detailForm.controls['InsideEngineCompartmentComments'].setValue(\n        data.detail.InsideEngineCompartmentComments\n      );\n      this.detailForm.controls['TransmissionFluidLevel'].setValue(\n        data.detail.TransmissionFluidLevel\n      );\n      this.detailForm.controls['TransmissionFluidLevelComments'].setValue(\n        data.detail.TransmissionFluidLevelComments\n      );\n      this.detailForm.controls['HighlightSignal4wayTailBackup'].setValue(\n        data.detail.HighlightSignal4wayTailBackup\n      );\n      this.detailForm.controls['FuelLevel'].setValue(data.detail.FuelLevel);\n      this.detailForm.controls['FuelLevelComments'].setValue(\n        data.detail.FuelLevelComments\n      );\n      this.detailForm.controls['FirstAidKit'].setValue(data.detail.FirstAidKit);\n      this.detailForm.controls['FirstAidKitComments'].setValue(\n        data.detail.FirstAidKitComments\n      );\n      this.detailForm.controls['FireExtinguisher'].setValue(\n        data.detail.FireExtinguisher\n      );\n      this.detailForm.controls['FireExtinguisherComments'].setValue(\n        data.detail.FireExtinguisherComments\n      );\n      this.detailForm.controls['SurvivalKit'].setValue(data.detail.SurvivalKit);\n      this.detailForm.controls['SurvivalKitComments'].setValue(\n        data.detail.SurvivalKitComments\n      );\n      this.detailForm.controls['FuelKey'].setValue(data.detail.FuelKey);\n      this.detailForm.controls['FuelKeyComments'].setValue(\n        data.detail.FuelKeyComments\n      );\n      this.detailForm.controls['TwoWayRadio'].setValue(data.detail.TwoWayRadio);\n      this.detailForm.controls['TwoWayRadioComments'].setValue(\n        data.detail.TwoWayRadioComments\n      );\n      this.detailForm.controls['Tires'].setValue(data.detail.Tires);\n      this.detailForm.controls['TiresComments'].setValue(\n        data.detail.TiresComments\n      );\n      this.detailForm.controls['SpillKit'].setValue(data.detail.SpillKit);\n      this.detailForm.controls['SpillKitComments'].setValue(\n        data.detail.SpillKitComments\n      );\n    }\n\n    if (data.comments) {\n      this.store.dispatch(new SetComments(data.comments));\n    }\n\n    if (data.correctiveActions) {\n      this.store.dispatch(new SetCorrectiveActions(data.correctiveActions));\n    }\n  }\n\n  updateForm() {\n    const form = this.store.selectSnapshot(AuthState.selectedForm);\n\n    let header = this.headerForm.value;\n    header.Make = this.autoCompleteService.makesControl.value;\n    header.Model = this.autoCompleteService.modelsControl.value;\n    header.Worker = this.autoCompleteService.workersControl.value;\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value;\n\n    let data = {\n      header: header,\n      detail: this.detailForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(CorrectiveActionState.correctiveActions),\n    };\n\n    this.formService.updateForm(form, this.formData, data).subscribe((_) => {\n      this.appService.sendEmail()\n      this.resetForm();\n    });\n  }\n\n  submitForm() {\n    const user = this.store.selectSnapshot(AuthState.user);\n    const form = this.store.selectSnapshot(AuthState.selectedForm);\n    const comments = this.store.selectSnapshot(CommentState.comments);\n\n    let userCreated = {\n      email: user.email,\n      date_created: this.appService.now,\n    };\n\n    let header = this.headerForm.value;\n    header.Make = this.autoCompleteService.makesControl.value;\n    header.Model = this.autoCompleteService.modelsControl.value;\n    header.Worker = this.autoCompleteService.workersControl.value;\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value;\n\n    let data = {\n      header: header,\n      detail: this.detailForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(\n        CorrectiveActionState.correctiveActions)\n    };\n\n    let obj = {\n      data: JSON.stringify(data),\n      user: userCreated,\n      form: form,\n      type: 'custom',\n      name: form['name'],\n      date: this.appService.now,\n      pics: this.store.selectSnapshot(DeviceState.pics),\n      correctiveActions: this.store.selectSnapshot(CorrectiveActionState.correctiveActions)\n    };\n    if (!this.isOnline) {\n      this.setNotificationObj(header, form, data)\n      obj['notification'] = this.notificationObj\n      this.idbCrudService.put('data', obj)\n    }\n    else {\n      this.apiService.save(obj).subscribe((idObj) => {\n        this.formDataID = idObj;\n\n        const workers: any = this.store.selectSnapshot(AuthState.workers);\n        const supervisors: any = this.store.selectSnapshot(AuthState.supervisors);\n\n        if (workers.length == 0 && supervisors.length == 0)\n          this.snackBar.open(\n            'Notifications not setup, please add workers and supervisors.',\n            'Attention',\n            {\n              duration: 3000,\n              verticalPosition: 'bottom',\n            }\n          );\n        else {\n          const worker: any = this.appService.getWorker(header.Worker);\n          const supervisor: any = this.appService.getSupervisor(\n            header.Supervisor\n          );\n\n          let message = 'No discrepancies.';\n          if (comments.length > 0) message = `${comments.length} Discrepancies Exist.`;\n\n          this.setNotificationObj(header, form, data);\n          this.appService.createNotification(this.notificationObj);\n          this.resetForm();\n        }\n      })\n    }\n  }\n\n  setNotificationObj(header, form, data) {\n\n    const worker: any = this.appService.getWorker(header.Worker);\n    const supervisor: any = this.appService.getSupervisor(\n      header.Supervisor\n    );\n\n    let message = 'No discrepancies.';\n    if (data.comments.length > 0) message = `${data.comments.length} Discrepancies Exist!`;\n\n    let notificationObj = {\n      name: form['name'],\n      worker: worker,\n      supervisor: supervisor,\n      description: 'Vehicle Inspection, ' + _moment().format('MMM D, h:mA'),\n      subject:\n        'New Vehicle Inspection from ' +\n        header.Worker +\n        ', ' +\n        this.appService.now,\n      message: 'Vehicle Inspection completed for Unit #: ' + header.UnitNumber + '. ' + message,\n      form_id: form['form_id'],\n      data_id: this.formDataID,\n      pdf: 'vehicle-inspection' + this.formDataID,\n    };\n\n    this.notificationObj = notificationObj \n\n\n  }\n\n  checkValidHeader() {\n    const header = this.headerForm.value;\n    if (\n      header.Date != null &&\n      this.autoCompleteService.workersControl.value != null &&\n      this.autoCompleteService.supervisorsControl.value != null &&\n      this.autoCompleteService.makesControl.value != null &&\n      this.autoCompleteService.modelsControl.value != null &&\n      header.Stakeholder != null &&\n      header.Division != null &&\n      header.Mileage != null &&\n      header.Year != null &&\n      header.RegistrationDate != null\n    ) {\n      this.store.dispatch(new SetLabel(LABEL));\n      this.store.dispatch(new SetIsHeaderValid(true));\n    }\n  }\n\n  resetForm() {\n    this.headerForm.reset();\n    this.detailForm.reset();\n    this.store.dispatch(new SetPics([]));\n    this.autoCompleteService.workersControl.reset();\n    this.autoCompleteService.supervisorsControl.reset();\n    this.autoCompleteService.makesControl.reset();\n    this.autoCompleteService.modelsControl.reset();\n    this.autoCompleteService.workersControl.reset();\n    this.autoCompleteService.supervisorsControl.reset();\n  }\n}\n","<mat-accordion>\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Work Site\n      </mat-panel-title>\n      <mat-panel-description fxLayout=\"end\">*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-header [headerForm]=headerForm (checkValidHeader)=checkValidHeader()>\n    </app-worksite-safety-header>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"isWorksiteSafetyHeaderValid$ | async\"\n        (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 1\" (opened)=\"setStep(1)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Hazard Identification & Communication\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-hazard [hazardForm]=hazardForm></app-worksite-safety-hazard>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!hazardForm.valid\"\n        (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 2\" (opened)=\"setStep(2)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Job Site Management\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-jobsite [jobsiteForm]=jobsiteForm></app-worksite-safety-jobsite>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\" [disabled]=\"!jobsiteForm.valid\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 3\" (opened)=\"setStep(3)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Fire Extinguisher(s)\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-fire-extinguisher [fireExtinguisherForm]=fireExtinguisherForm></app-worksite-fire-extinguisher>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\" [disabled]=\"!fireExtinguisherForm.valid\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 4\" (opened)=\"setStep(4)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Emergency Response Planning\n      </mat-panel-title>\n      <mat-panel-description>*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-erp-planning [erpPlanningForm]=erpPlanningForm></app-worksite-safety-erp-planning>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 5\" (opened)=\"setStep(5)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Ground Disturbance\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-ground [groundForm]=groundForm></app-worksite-safety-ground>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 6\" (opened)=\"setStep(6)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Confined Space Entry\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-confined-space [confinedSpaceForm]=confinedSpaceForm></app-worksite-safety-confined-space>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 7\" (opened)=\"setStep(7)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Hot Work\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-hot-work [hotWorkForm]=hotWorkForm></app-worksite-safety-hot-work>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 8\" (opened)=\"setStep(8)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Summit Vehicles & Equipment\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-worksite-safety-equipment [equipmentForm]=equipmentForm></app-worksite-safety-equipment>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 9\" (opened)=\"setStep(9)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Key Positive Findings\n      </mat-panel-title>\n      <mat-panel-description fxLayout=\"end\">*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-worksite-key-positive-finding [keyPositiveFindingsForm]=keyPositiveFindingsForm></app-worksite-key-positive-finding>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 10\" (opened)=\"setStep(10)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"text-color\">\n        Discrepancies\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-discrepancy [step]='step'></app-discrepancy>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel *ngIf=\"!(isWorksiteSafetyHeaderValid$ | async)\" [expanded]=\"step === 11\" (opened)=\"setStep(11)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"text-color\">\n        Signature\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"!hazardForm.valid || !jobsiteForm.valid || !fireExtinguisherForm.valid\"\n        class=\"icon-169px text-color\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"!isEdit && hazardForm.valid && jobsiteForm.valid && fireExtinguisherForm.valid\"\n        class=\"hand icon-169px-action\" (click)=\"submitForm()\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"isEdit && hazardForm.valid && jobsiteForm.valid && fireExtinguisherForm.valid\"\n        class=\"hand icon-169px-action\" (click)=\"updateForm()\">fingerprint</mat-icon>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>","import { Component, OnInit } from '@angular/core';\nimport * as _moment from 'moment';\n\nimport { Observable } from 'rxjs';\nimport { AppService } from '../../../service/app.service';\nimport { ApiService } from '../../../service/api.service';\nimport { FormService } from '../../../service/form.service';\nimport { IdbCrudService } from '../../../service-idb/idb-crud.service';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { WORKSITE_SAFETY_INSPECTION } from './state/worksite-safety-inspection-state.model';\n\nimport { environment } from '../../../../environments/environment';\n\nimport { AutoCompleteService } from '../../../service/auto-complete.service';\n\nimport { Store, Select } from '@ngxs/store';\nimport { AuthState } from '../../../state/auth/auth.state';\nimport { DeviceState } from '../../../state/device/device.state';\n\nimport { WorksiteSafetyInspectionState } from './state/worksite-safety-inspection.state';\nimport { SetIsWorksiteSafetyHeaderValid } from './state/worksite-safety-inspection-state.actions';\n\nimport { SetPics } from '../../../state/device/device-state.actions';\nimport {\n  SetPage,\n  SetChildPageLabel,\n} from '../../../state/auth/auth-state.actions';\n\nimport { CommentState } from '../../comment/state/comment.state';\nimport { SetComments } from '../../comment/state/comment.actions';\n\nimport { CorrectiveActionState } from '../../corrective-action/state/corrective-action.state';\nimport { SetCorrectiveActions } from '../../corrective-action/state/corrective-action.actions';\n\n@Component({\n  selector: 'app-worksite-safety-inspection',\n  templateUrl: './worksite-safety-inspection.component.html',\n  styleUrls: ['./worksite-safety-inspection.component.scss'],\n})\nexport class WorksiteSafetyInspectionComponent implements OnInit {\n  @Select(WorksiteSafetyInspectionState.isWorksiteSafetyHeaderValid)\n  isWorksiteSafetyHeaderValid$: Observable<boolean>;\n\n  pics;\n  isEdit = false;\n  isOnline;\n  formData;\n  formDataID;\n  step = 0;\n  history = [];\n  lookupLists;\n  notificationObj\n\n  headerForm: FormGroup;\n  hazardForm: FormGroup;\n  jobsiteForm: FormGroup;\n  fireExtinguisherForm: FormGroup;\n  erpPlanningForm: FormGroup;\n  groundForm: FormGroup;\n  equipmentForm: FormGroup;\n  confinedSpaceForm: FormGroup;\n  hotWorkForm: FormGroup;\n  keyPositiveFindingsForm: FormGroup;\n  discrepancyForm: FormGroup;\n\n  WORKSITE_SAFETY_INSPECTION = WORKSITE_SAFETY_INSPECTION;\n\n  isERP = false;\n  isGround;\n  isVehicle;\n  isConfine;\n  isHot;\n  isERPDisabled = true;\n\n  isPanelOpen = false;\n\n  apiURL = environment.apiUrl;\n  messageUrl = environment.messageUrl;\n\n  constructor(\n    private store: Store,\n    private snackBar: MatSnackBar,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private formService: FormService,\n    private idbCrudService: IdbCrudService,\n    private autoCompleteService: AutoCompleteService\n  ) {\n    this.headerForm = this.formBuilder.group({\n      Date: [null, Validators.required],\n      Client: [null, Validators.required],\n      Location: [],\n      LSDUWI: [],\n      Latitude: [],\n      Longitude: [],\n      SupervisorPhone: [null, Validators.required],\n      JobNumber: [null, Validators.required],\n      Division: [null, Validators.required],\n      STARSSiteNumber: [],\n      ScopeOfWork: [null, Validators.required],\n    });\n    this.hazardForm = this.formBuilder.group({\n      SiteHazardAssessmentCompleted: [null, Validators.required],\n      ScopeOfWorkClearlyDefined: [null, Validators.required],\n      PotentialHazardsAndMitigationRequirementsIdentified: [\n        null,\n        Validators.required,\n      ],\n      SummitHealthAndSafetyManualAvailable: [null, Validators.required],\n      OccupationalHealthAndSafetyLegislationAvailable: [\n        null,\n        Validators.required,\n      ],\n      DailySafetyMeetingsConductedDocumented: [null, Validators.required],\n      AllSitePersonalTrainingAndSafetyTickets: [null, Validators.required],\n      AllSitePersonnelSiteSpecificWearingPPE: [null, Validators.required],\n    });\n    this.jobsiteForm = this.formBuilder.group({\n      WorkAreaClearlyIdentified: [null, Validators.required],\n      SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns: [\n        null,\n        Validators.required,\n      ],\n      AllOpenExcavationsAreClearlyMarked: [null, Validators.required],\n      PublicAccessToTheSiteControlled: [null, Validators.required],\n      PrimeContractorClearlyIdentifiedWithSignage: [null, Validators.required],\n      IsThereEmergencyEquipmentOnSite: [null, Validators.required],\n      FirstAidKitAvailable: [null, Validators.required],\n      BlanketsAndStretcherAvailable: [null, Validators.required],\n      EyeWashBottleAvailable: [null, Validators.required],\n      SpillKitAvailable: [null, Validators.required],\n      H2SPersonalGasMonitorsOnsiteHaveBeenBumped: [null, Validators.required],\n    });\n    this.fireExtinguisherForm = this.formBuilder.group({\n      TwentyPoundMinimumFireExtinguisherAvailable: [null, Validators.required],\n      FireExtinguisherInspected: [null],\n      FireExtinguisherVisibleUnobstructed: [null],\n      FireExtinguisherCharged: [null],\n      FireExtinguisherSafetyPinSecured: [null],\n      FireExtinguisherOperatingInstructions: [null],\n      FireExtinguisherNoVisibleDamage: [null],\n      FireExtinguisherCertification: [null],\n    });\n    this.erpPlanningForm = this.formBuilder.group({\n      EmergencyResponsePlanOnSite: [null, Validators.required],\n      MusterPointsIdentified: [null],\n      STARSNumber: [null],\n      ERPIncludesDirectionsToNearestHospital: [null],\n      ERPResponderRolesAndResponsibilitiesIdentified: [null],\n      CellularOrRadioCoverageConfirmed: [null, Validators.required],\n    });\n    this.groundForm = this.formBuilder.group({\n      DoesTheProjectInvolveGroundDisturbance: [null],\n      GroundDisturbanceChecklistIsInPlace: [null],\n      OneCallNotificationHasBeenRegistered: [null],\n      AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed: [null],\n      ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined: [null],\n      ThirdPartyLineLocatesCompletedWithinTheSearchArea: [null],\n      AllRequiredCrossingOrProximityAgreementsInPlace: [null],\n    });\n    this.confinedSpaceForm = this.formBuilder.group({\n      DoesTheProjectInvolveConfinedSpaceEntry: [null],\n      ConfinedSpacePermitIssued: [null],\n      ConfinedSpaceSafetyTraining: [null],\n      SafetyWatchInPlace: [null],\n      RescuePlanAvailable: [null],\n    });\n    this.hotWorkForm = this.formBuilder.group({\n      DoesTheProjectInvolveHotWork: [null],\n      HotWorkPermitIssued: [null],\n      FireHazardsIdentifiedControls: [null],\n      FireSafetyWatchAvailable: [null],\n    });\n    this.equipmentForm = this.formBuilder.group({\n      ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects: [null],\n      InteriorOfVehicleKeptTidyAndClean: [null],\n      VehicleWindshieldFreeOfMajorChipsAndCracks: [null],\n      DailyPreUseVehicleInspectionCompleted: [null],\n      EquipmentPreUseInspectionCompleted: [null],\n      CargoIinternalAndExternalProperlyStowedAndSecured: [null],\n      HornIsInProperWorkingCondition: [null],\n      HeadlightsAreInProperWorkingCondition: [null],\n      SignalLightsAreInProperWorkingCondition: [null],\n      EmergencyWarningStrobeLightEquippedOnVehicle: [null],\n      SafetyBuggyWhipEquippedOnVehicle: [null],\n      FirstAidKitEquippedInVehicle: [null],\n      EmergencySurvivalKitEquippedInVehicle: [null],\n    });\n    this.keyPositiveFindingsForm = this.formBuilder.group({\n      KeyPositiveFindings: [null, Validators.required],\n    });\n    this.discrepancyForm = this.formBuilder.group({\n      Discrepancy: [null, Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.isOnline = this.store.selectSnapshot(DeviceState.isOnline);\n\n    this.store.select(AuthState.formData).subscribe((formData) => {\n      this.formData = formData;\n      if (this.formData && formData['data']) {\n        this.isEdit = true;\n        this.setFormData(formData['data']);\n      } else this.store.dispatch(new SetIsWorksiteSafetyHeaderValid(true));\n    });\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.checkValidHeader();\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  setFormData(data) {\n    if (data.header) {\n      this.headerForm.controls['Date'].setValue(data.header.Date);\n      this.headerForm.controls['Client'].setValue(data.header.Client);\n      this.headerForm.controls['Location'].setValue(data.header.Location);\n      this.headerForm.controls['LSDUWI'].setValue(data.header.LSDUWI);\n      this.headerForm.controls['Latitude'].setValue(data.header.Latitude);\n      this.headerForm.controls['Longitude'].setValue(data.header.Longitude);\n      this.headerForm.controls['SupervisorPhone'].setValue(\n        data.header.SupervisorPhone\n      );\n      this.headerForm.controls['JobNumber'].setValue(data.header.JobNumber);\n      this.headerForm.controls['Division'].setValue(data.header.Division);\n      this.headerForm.controls['STARSSiteNumber'].setValue(\n        data.header.STARSSiteNumber\n      );\n      this.headerForm.controls['ScopeOfWork'].setValue(data.header.ScopeOfWork);\n      this.autoCompleteService.clientsControl.setValue(data.header.Client);\n      this.autoCompleteService.workersControl.setValue(data.header.Worker);\n      this.autoCompleteService.supervisorsControl.setValue(\n        data.header.Supervisor\n      );\n    }\n    if (data.hazard) {\n      this.hazardForm.controls['SiteHazardAssessmentCompleted'].setValue(\n        data.hazard.SiteHazardAssessmentCompleted\n      );\n      this.hazardForm.controls['ScopeOfWorkClearlyDefined'].setValue(\n        data.hazard.ScopeOfWorkClearlyDefined\n      );\n      this.hazardForm.controls[\n        'PotentialHazardsAndMitigationRequirementsIdentified'\n      ].setValue(\n        data.hazard.PotentialHazardsAndMitigationRequirementsIdentified\n      );\n      this.hazardForm.controls['SummitHealthAndSafetyManualAvailable'].setValue(\n        data.hazard.SummitHealthAndSafetyManualAvailable\n      );\n      this.hazardForm.controls[\n        'OccupationalHealthAndSafetyLegislationAvailable'\n      ].setValue(data.hazard.OccupationalHealthAndSafetyLegislationAvailable);\n      this.hazardForm.controls[\n        'DailySafetyMeetingsConductedDocumented'\n      ].setValue(data.hazard.DailySafetyMeetingsConductedDocumented);\n      this.hazardForm.controls[\n        'AllSitePersonalTrainingAndSafetyTickets'\n      ].setValue(data.hazard.AllSitePersonalTrainingAndSafetyTickets);\n      this.hazardForm.controls[\n        'AllSitePersonnelSiteSpecificWearingPPE'\n      ].setValue(data.hazard.AllSitePersonnelSiteSpecificWearingPPE);\n    }\n    if (data.jobsite) {\n      this.jobsiteForm.controls['WorkAreaClearlyIdentified'].setValue(\n        data.jobsite.WorkAreaClearlyIdentified\n      );\n      this.jobsiteForm.controls[\n        'SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns'\n      ].setValue(\n        data.jobsite.SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns\n      );\n      this.jobsiteForm.controls['AllOpenExcavationsAreClearlyMarked'].setValue(\n        data.jobsite.AllOpenExcavationsAreClearlyMarked\n      );\n      this.jobsiteForm.controls['PublicAccessToTheSiteControlled'].setValue(\n        data.jobsite.PublicAccessToTheSiteControlled\n      );\n      this.jobsiteForm.controls[\n        'PrimeContractorClearlyIdentifiedWithSignage'\n      ].setValue(data.jobsite.PrimeContractorClearlyIdentifiedWithSignage);\n      this.jobsiteForm.controls['IsThereEmergencyEquipmentOnSite'].setValue(\n        data.jobsite.IsThereEmergencyEquipmentOnSite\n      );\n      this.jobsiteForm.controls['FirstAidKitAvailable'].setValue(\n        data.jobsite.FirstAidKitAvailable\n      );\n      this.jobsiteForm.controls['BlanketsAndStretcherAvailable'].setValue(\n        data.jobsite.BlanketsAndStretcherAvailable\n      );\n      this.jobsiteForm.controls['EyeWashBottleAvailable'].setValue(\n        data.jobsite.EyeWashBottleAvailable\n      );\n      this.jobsiteForm.controls['SpillKitAvailable'].setValue(\n        data.jobsite.SpillKitAvailable\n      );\n      this.jobsiteForm.controls[\n        'H2SPersonalGasMonitorsOnsiteHaveBeenBumped'\n      ].setValue(data.jobsite.H2SPersonalGasMonitorsOnsiteHaveBeenBumped);\n    }\n    if (data.fireExtinguisher) {\n      this.fireExtinguisherForm.controls[\n        'TwentyPoundMinimumFireExtinguisherAvailable'\n      ].setValue(\n        data.fireExtinguisher.TwentyPoundMinimumFireExtinguisherAvailable\n      );\n      this.fireExtinguisherForm.controls['FireExtinguisherInspected'].setValue(\n        data.fireExtinguisher.FireExtinguisherInspected\n      );\n      this.fireExtinguisherForm.controls[\n        'FireExtinguisherVisibleUnobstructed'\n      ].setValue(data.fireExtinguisher.FireExtinguisherVisibleUnobstructed);\n      this.fireExtinguisherForm.controls['FireExtinguisherCharged'].setValue(\n        data.fireExtinguisher.FireExtinguisherCharged\n      );\n      this.fireExtinguisherForm.controls[\n        'FireExtinguisherSafetyPinSecured'\n      ].setValue(data.fireExtinguisher.FireExtinguisherSafetyPinSecured);\n      this.fireExtinguisherForm.controls[\n        'FireExtinguisherOperatingInstructions'\n      ].setValue(data.fireExtinguisher.FireExtinguisherOperatingInstructions);\n      this.fireExtinguisherForm.controls[\n        'FireExtinguisherNoVisibleDamage'\n      ].setValue(data.fireExtinguisher.FireExtinguisherNoVisibleDamage);\n      this.fireExtinguisherForm.controls[\n        'FireExtinguisherCertification'\n      ].setValue(data.fireExtinguisher.FireExtinguisherCertification);\n    }\n    if (data.erpPlanning) {\n      this.erpPlanningForm.controls['EmergencyResponsePlanOnSite'].setValue(\n        data.erpPlanning.EmergencyResponsePlanOnSite\n      );\n      this.erpPlanningForm.controls['MusterPointsIdentified'].setValue(\n        data.erpPlanning.MusterPointsIdentified\n      );\n      this.erpPlanningForm.controls['STARSNumber'].setValue(\n        data.erpPlanning.STARSNumber\n      );\n      this.erpPlanningForm.controls[\n        'ERPIncludesDirectionsToNearestHospital'\n      ].setValue(data.erpPlanning.ERPIncludesDirectionsToNearestHospital);\n      this.erpPlanningForm.controls[\n        'ERPResponderRolesAndResponsibilitiesIdentified'\n      ].setValue(\n        data.erpPlanning.ERPResponderRolesAndResponsibilitiesIdentified\n      );\n      this.erpPlanningForm.controls[\n        'CellularOrRadioCoverageConfirmed'\n      ].setValue(data.erpPlanning.CellularOrRadioCoverageConfirmed);\n    }\n    if (data.ground) {\n      this.groundForm.controls[\n        'DoesTheProjectInvolveGroundDisturbance'\n      ].setValue(data.ground.DoesTheProjectInvolveGroundDisturbance);\n      this.groundForm.controls['GroundDisturbanceChecklistIsInPlace'].setValue(\n        data.ground.GroundDisturbanceChecklistIsInPlace\n      );\n      this.groundForm.controls['OneCallNotificationHasBeenRegistered'].setValue(\n        data.ground.OneCallNotificationHasBeenRegistered\n      );\n      this.groundForm.controls[\n        'AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed'\n      ].setValue(\n        data.ground\n          .AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed\n      );\n      this.groundForm.controls[\n        'ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined'\n      ].setValue(\n        data.ground.ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined\n      );\n      this.groundForm.controls[\n        'ThirdPartyLineLocatesCompletedWithinTheSearchArea'\n      ].setValue(data.ground.ThirdPartyLineLocatesCompletedWithinTheSearchArea);\n      this.groundForm.controls[\n        'AllRequiredCrossingOrProximityAgreementsInPlace'\n      ].setValue(data.ground.AllRequiredCrossingOrProximityAgreementsInPlace);\n    }\n    if (data.confinedSpace) {\n      this.confinedSpaceForm.controls[\n        'DoesTheProjectInvolveConfinedSpaceEntry'\n      ].setValue(data.confinedSpace.DoesTheProjectInvolveConfinedSpaceEntry);\n      this.confinedSpaceForm.controls['ConfinedSpacePermitIssued'].setValue(\n        data.confinedSpace.ConfinedSpacePermitIssued\n      );\n      this.confinedSpaceForm.controls['ConfinedSpaceSafetyTraining'].setValue(\n        data.confinedSpace.ConfinedSpaceSafetyTraining\n      );\n      this.confinedSpaceForm.controls['SafetyWatchInPlace'].setValue(\n        data.confinedSpace.SafetyWatchInPlace\n      );\n      this.confinedSpaceForm.controls['RescuePlanAvailable'].setValue(\n        data.confinedSpace.RescuePlanAvailable\n      );\n    }\n    if (data.hotWork) {\n      this.hotWorkForm.controls['DoesTheProjectInvolveHotWork'].setValue(\n        data.hotWork.DoesTheProjectInvolveHotWork\n      );\n      this.hotWorkForm.controls['HotWorkPermitIssued'].setValue(\n        data.hotWork.HotWorkPermitIssued\n      );\n      this.hotWorkForm.controls['FireHazardsIdentifiedControls'].setValue(\n        data.hotWork.FireHazardsIdentifiedControls\n      );\n      this.hotWorkForm.controls['FireSafetyWatchAvailable'].setValue(\n        data.hotWork.FireSafetyWatchAvailable\n      );\n    }\n    if (data.equipment) {\n      this.equipmentForm.controls[\n        'ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects'\n      ].setValue(\n        data.equipment.ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects\n      );\n      this.equipmentForm.controls['InteriorOfVehicleKeptTidyAndClean'].setValue(\n        data.equipment.InteriorOfVehicleKeptTidyAndClean\n      );\n      this.equipmentForm.controls[\n        'VehicleWindshieldFreeOfMajorChipsAndCracks'\n      ].setValue(data.equipment.VehicleWindshieldFreeOfMajorChipsAndCracks);\n      this.equipmentForm.controls[\n        'DailyPreUseVehicleInspectionCompleted'\n      ].setValue(data.equipment.DailyPreUseVehicleInspectionCompleted);\n      this.equipmentForm.controls[\n        'EquipmentPreUseInspectionCompleted'\n      ].setValue(data.equipment.EquipmentPreUseInspectionCompleted);\n      this.equipmentForm.controls[\n        'CargoIinternalAndExternalProperlyStowedAndSecured'\n      ].setValue(\n        data.equipment.CargoIinternalAndExternalProperlyStowedAndSecured\n      );\n      this.equipmentForm.controls['HornIsInProperWorkingCondition'].setValue(\n        data.equipment.HornIsInProperWorkingCondition\n      );\n      this.equipmentForm.controls[\n        'HeadlightsAreInProperWorkingCondition'\n      ].setValue(data.equipment.HeadlightsAreInProperWorkingCondition);\n      this.equipmentForm.controls[\n        'SignalLightsAreInProperWorkingCondition'\n      ].setValue(data.equipment.SignalLightsAreInProperWorkingCondition);\n      this.equipmentForm.controls[\n        'EmergencyWarningStrobeLightEquippedOnVehicle'\n      ].setValue(data.equipment.EmergencyWarningStrobeLightEquippedOnVehicle);\n      this.equipmentForm.controls['SafetyBuggyWhipEquippedOnVehicle'].setValue(\n        data.equipment.SafetyBuggyWhipEquippedOnVehicle\n      );\n      this.equipmentForm.controls['FirstAidKitEquippedInVehicle'].setValue(\n        data.equipment.FirstAidKitEquippedInVehicle\n      );\n      this.equipmentForm.controls[\n        'EmergencySurvivalKitEquippedInVehicle'\n      ].setValue(data.equipment.EmergencySurvivalKitEquippedInVehicle);\n    }\n    if (data.keyPositiveFindings) {\n      this.keyPositiveFindingsForm.controls['KeyPositiveFindings'].setValue(\n        data.keyPositiveFindings.KeyPositiveFindings\n      );\n    }\n\n    if (data.comments) {\n      this.store.dispatch(new SetComments(data.comments));\n    }\n\n    if (data.correctiveActions) {\n      this.store.dispatch(new SetCorrectiveActions(data.correctiveActions));\n    }\n\n    this.store.dispatch(new SetIsWorksiteSafetyHeaderValid(false));\n  }\n\n  updateForm() {\n    const form = this.store.selectSnapshot(AuthState.selectedForm);\n\n    let header = this.headerForm.value;\n    header.Worker = this.autoCompleteService.workersControl.value;\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value;\n\n    let data = {\n      header: header,\n      erpPlanning: this.erpPlanningForm.value,\n      jobsite: this.jobsiteForm.value,\n      fireExtinguisher: this.fireExtinguisherForm.value,\n      ground: this.groundForm.value,\n      confinedSpace: this.confinedSpaceForm.value,\n      hotWork: this.hotWorkForm.value,\n      equipment: this.equipmentForm.value,\n      keyPositiveFindings: this.keyPositiveFindingsForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(\n        CorrectiveActionState.correctiveActions\n      ),\n      hazard: this.hazardForm.value,\n    };\n\n    this.formService.updateForm(form, this.formData, data).subscribe((_) => {\n      this.appService.sendEmail();\n      this.resetForm();\n    });\n  }\n\n  submitForm() {\n    const user = this.store.selectSnapshot(AuthState.user);\n    const form = this.store.selectSnapshot(AuthState.selectedForm);\n\n    const now = new Date().toLocaleString('en-US', {\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n    });\n\n    let userCreated = {\n      email: user.email,\n      date_created: now,\n    };\n\n    let header = this.headerForm.value;\n    header.Client = this.autoCompleteService.clientsControl.value;\n    header.Worker = this.autoCompleteService.workersControl.value;\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value;\n\n    let data = {\n      header: header,\n      erpPlanning: this.erpPlanningForm.value,\n      jobsite: this.jobsiteForm.value,\n      fireExtinguisher: this.fireExtinguisherForm.value,\n      ground: this.groundForm.value,\n      confinedSpace: this.confinedSpaceForm.value,\n      hotWork: this.hotWorkForm.value,\n      equipment: this.equipmentForm.value,\n      keyPositiveFindings: this.keyPositiveFindingsForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(\n        CorrectiveActionState.correctiveActions\n      ),\n      hazard: this.hazardForm.value,\n    };\n\n    let obj = {\n      data: JSON.stringify(data),\n      user: userCreated,\n      form: form,\n      type: 'custom',\n      date: now,\n      name: form['name'],\n      pics: this.store.selectSnapshot(DeviceState.pics),\n      correctiveActions: this.store.selectSnapshot(\n        CorrectiveActionState.correctiveActions\n      ),\n    };\n\n    let message = 'No discrepancies.';\n    if (data.comments.length > 0)\n      message = `Number of Discrepancies: ${data.comments.length}`;\n    if (!this.isOnline) {\n      this.setNotificationObj(header, form, data, now)\n      obj['notification'] = this.notificationObj;\n      this.idbCrudService.put('data', obj);\n    } else {\n      this.apiService.save(obj).subscribe((idObj) => {\n        this.formDataID = idObj;\n        const workers: any = this.store.selectSnapshot(AuthState.workers);\n        const supervisors: any = this.store.selectSnapshot(\n          AuthState.supervisors\n        );\n\n        if (workers.length == 0 && supervisors.length == 0)\n          this.snackBar.open(\n            'Notifications not setup, please add workers and supervisors.',\n            'Attention',\n            {\n              duration: 3000,\n              verticalPosition: 'bottom',\n            }\n          );\n        else {\n          this.setNotificationObj(header, form, data, now)\n          this.appService.createNotification(this.notificationObj);\n          this.resetForm();\n        }\n      });\n    }\n  }\n\n  checkValidHeader() {\n    const header = this.headerForm.value;\n    if (\n      header.Date != null &&\n      this.autoCompleteService.workersControl.value != null &&\n      this.autoCompleteService.supervisorsControl.value != null &&\n      this.autoCompleteService.clientsControl.value != null &&\n      header.SupervisorPhone != null &&\n      header.Division != null &&\n      header.JobNumber != null &&\n      header.ScopeOfWork != null\n    )\n      this.store.dispatch(new SetIsWorksiteSafetyHeaderValid(false));\n  }\n\n  setNotificationObj(header, form, data, now) {\n\n    let message = 'No discrepancies.';\n    if (data.comments.length > 0) message = `${data.comments.length} Discrepancies Exist!`;\n\n    this.notificationObj = {\n      name: form['name'],\n      worker: this.appService.getWorker(header.Worker),\n      supervisor: this.appService.getSupervisor(header.Supervisor),\n      description: 'Worksite Safety Inspection, '+_moment().format('MMM D, h:mA'),\n      message: 'Worksite Safety Inspection completed for '+header.Client+', '+header.Location+' '+message,\n      subject: 'New Worksite Safety Inspection for '+this.headerForm.controls['Client'].value+', '+now,\n      form_id: form['form_id'],\n      data_id: null,\n      pdf: 'worksite-safety-inspection' + this.formDataID,\n    };\n  }\n\n  resetForm() {\n    this.headerForm.reset();\n    this.erpPlanningForm.reset();\n    this.hazardForm.reset();\n    this.jobsiteForm.reset();\n    this.fireExtinguisherForm.reset();\n    this.groundForm.reset();\n    this.confinedSpaceForm.reset();\n    this.hotWorkForm.reset();\n    this.equipmentForm.reset();\n    this.discrepancyForm.reset();\n    this.keyPositiveFindingsForm.reset();\n    this.store.dispatch(new SetPics([]));\n    this.autoCompleteService.workersControl.reset();\n    this.autoCompleteService.supervisorsControl.reset();\n  }\n}\n","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div class=\"content-full\">\n    <div [fxFlex]=\"screenWidth$ | async\">\n      <app-pin *ngIf=\"(page$ | async) === 'pin'\"></app-pin>\n      <!-- <app-signin *ngIf=\"(page$ | async) === 'signin'\"></app-signin> -->\n      <app-signup *ngIf=\"(page$ | async) === 'signup'\"></app-signup>\n      <app-whyus *ngIf=\"(page$ | async) === 'whyus'\"></app-whyus>\n      <app-pricing *ngIf=\"(page$ | async) === 'pricing'\"></app-pricing>\n      <app-identification *ngIf=\"(page$ | async) === 'identify'\"></app-identification>\n      <app-form *ngIf=\"(page$ | async) === 'form'\"></app-form>\n      <app-kioske *ngIf=\"(page$ | async) === 'kioske'\"></app-kioske>\n      <app-home *ngIf=\"(page$ | async) === 'home'\"></app-home>\n      <app-notification *ngIf=\"(page$ | async) === 'notification'\"></app-notification>\n      <app-admin (changeTheme)=changeTheme($event) *ngIf=\"(page$ | async) === 'admin'\"></app-admin>\n      <app-send-password *ngIf=\"(page$ | async) === 'send-password'\"></app-send-password>\n      <app-profile (changeTheme)=changeTheme($event) *ngIf=\"(page$ | async) === 'profile'\"></app-profile>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport * as _ from 'lodash'\n\nimport { ActivatedRoute, Params } from '@angular/router'\n\nimport { Store, Select } from '@ngxs/store'\n\nimport { AppService } from \"../../service/app.service\"\nimport { AuthService } from \"../../service/auth.service\"\nimport { NotificationService } from \"../../service/notification.service\"\nimport { IdbCrudService } from \"../../service-idb/idb-crud.service\"\n\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\n\nimport { SetPage, SetChildPageLabel, SetTenant, SetUser, SetKioske } from '../../state/auth/auth-state.actions'\nimport { SetNotificationOpen, SetNotificationTab, SetNotificationIdx } from '../../state/notification/notification-state.actions'\n\nimport { environment } from '../../../environments/environment'\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n\n  prefs\n  kioske\n  tenant = environment.tenant\n\n  @Select(AuthState.page) page$: Observable<string>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(DeviceState.screenWidth) screenWidth$: Observable<string>\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private idbCrudService: IdbCrudService,\n    private notificationService: NotificationService) { }\n\n  ngOnInit(): void {\n\n    this.kioske = this.store.selectSnapshot(AuthState.kioske)\n\n    if (this.kioske) {\n      const msg = this.route.snapshot.paramMap.get('msg')\n      const email = this.route.snapshot.paramMap.get('email')\n      const tenant_id = this.route.snapshot.paramMap.get('tenant_id')\n\n      if (email && !msg && tenant_id) {\n        this.authService.user({ email: email }).subscribe((user: any) => {\n          this.idbCrudService.clear('form')\n          this.store.dispatch(new SetUser(user.row))\n          this.store.dispatch(new SetKioske(false))\n          this.store.dispatch(new SetTenant({ tenant_id: tenant_id, email: email }))\n          this.appService.initializeUser()\n          this.store.dispatch(new SetPage('home'))\n        })\n      }\n      else if (msg && !email && !tenant_id) this.store.dispatch(new SetPage('signup'))\n      else {\n        this.idbCrudService.clear('prefs')\n        this.idbCrudService.clear('form')\n        this.idbCrudService.clear('pics')\n        this.idbCrudService.clear('voice')\n        this.authService.user({ email: this.tenant.email }).subscribe((user: any) => {\n          this.store.dispatch(new SetUser(user.row))\n          this.store.dispatch(new SetPage('kioske'))\n        })\n      }\n    }\n    else {\n      // these params are used to get the notifications from email link\n      this.route.queryParams.subscribe((params: Params) => {\n        if (params && params.email && Object.keys(params.email).length) {\n          this.authService.user({ email: params.email }).subscribe((user: any) => {\n            this.appService.initializeUser()\n            this.store.dispatch(new SetUser(user.row))\n            this.notificationService.getMyNotifications().subscribe((notifications: any) => {\n              let openNotifications: any = []\n              openNotifications = notifications.filter(not => not.date_signed === null)\n              const notificationIdx = notifications.findIndex(not => not.id == params.id)\n              this.store.dispatch(new SetNotificationIdx(notificationIdx))\n              this.store.dispatch(new SetNotificationOpen(openNotifications))\n              this.store.dispatch(new SetPage('notification'))\n              this.store.dispatch(new SetChildPageLabel('forms'))\n              this.store.dispatch(new SetNotificationTab(0))\n            })\n          })\n        }\n        else {\n          const isOnline = this.store.selectSnapshot(DeviceState.isOnline)\n          this.idbCrudService.readAll('prefs').subscribe(prefs => {\n            this.prefs = prefs\n            if (this.prefs.length > 0) {\n              if (isOnline) {\n                this.authService.user({ email: this.prefs[0]['user']['email'] }).subscribe((user: any) => {\n                  this.appService.initializeUser()\n                  this.store.dispatch(new SetUser(user.row))\n                  this.store.dispatch(new SetPage('home'))\n                  this.store.dispatch(new SetChildPageLabel('Forms'))\n                })\n              }\n              else this.appService.initializeOfflineUser()\n            }\n            else this.store.dispatch(new SetPage('identify'))\n          })\n        }\n      })\n    }\n  }\n\n  changeTheme() {\n    let darkClassName\n    let isDarkMode = this.store.selectSnapshot(DeviceState.isDarkMode)\n\n    if (isDarkMode) {\n      darkClassName = ''\n      this.setUser(darkClassName, false)\n    }\n    else {\n      darkClassName = 'darkMode'\n      this.setUser(darkClassName, true)\n    }\n    location.reload()\n  }\n\n  setUser(darkClassName, darkModeToggle) {\n    let user = _.cloneDeep(this.store.selectSnapshot(AuthState.userIdb))\n    user.isDarkMode = darkModeToggle\n    this.idbCrudService.put('prefs', { id: 1, user: user })\n    this.appService.setMode(darkClassName)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"confinedSpaceForm\">\n    <div class=\"text-color radio-center\">{{label.DoesTheProjectInvolveConfinedSpaceEntry}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DoesTheProjectInvolveConfinedSpaceEntry\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false); clearFields()\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isConfinedSpace$ | async)\">\n      <div class=\"text-color radio-center\">{{label.ConfinedSpacePermitIssued}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ConfinedSpacePermitIssued\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ConfinedSpacePermitIssued,'ConfinedSpacePermitIssued')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.ConfinedSpaceSafetyTraining}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ConfinedSpaceSafetyTraining\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ConfinedSpaceSafetyTraining,'ConfinedSpaceSafetyTraining')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.SafetyWatchInPlace}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"SafetyWatchInPlace\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.SafetyWatchInPlace,'SafetyWatchInPlace')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.RescuePlanAvailable}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"RescuePlanAvailable\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.RescuePlanAvailable,'RescuePlanAvailable')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n  </form>\n</div>","import { Component, Input, OnInit } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsConfinedSpace } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { ConfinedSpaceLabels } from '../state/worksite-safety-inspection-state.model'\n\n@Component({\n  selector: 'app-worksite-safety-confined-space',\n  templateUrl: './worksite-safety-confined-space.component.html',\n  styleUrls: ['./worksite-safety-confined-space.component.scss']\n})\nexport class WorksiteSafetyConfinedSpaceComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isConfinedSpace) isConfinedSpace$: Observable<string>\n\n  @Input() confinedSpaceForm\n\n  label = ConfinedSpaceLabels\n  \n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit() {\n    this.store.dispatch(new SetTypeFilter('isConfinedSpace'))\n    // this.confinedSpaceForm.controls['DoesTheProjectInvolveConfinedSpaceEntry'].patchValue('yes')\n  }\n\n  toggle(toggle) {\n    this.store.dispatch(new SetIsConfinedSpace(toggle))\n  }\n\n  clearFields() {\n    this.confinedSpaceForm.controls['ConfinedSpacePermitIssued'].patchValue('')\n    this.confinedSpaceForm.controls['ConfinedSpaceSafetyTraining'].patchValue('')\n    this.confinedSpaceForm.controls['SafetyWatchInPlace'].patchValue('')\n    this.confinedSpaceForm.controls['RescuePlanAvailable'].patchValue('')\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'Confined Space Entry', label: label, field: field, type: 'isFireExtinguisher' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n\n","export interface WorksiteSafetyInspectionStateModel {\n  isWorksiteSafetyHeaderValid: boolean\n  labels?: any[]\n  transcribed?: any[]\n  // isSiteHazardAssessmentCompleted?: boolean // used to display message in discrepancies\n  isFireExtinguisher: boolean\n  isErpPlanning: boolean\n  isGroundwork: boolean\n  isConfinedSpace: boolean\n  isHotwork: boolean\n}\n\nexport const WORKSITE_SAFETY_INSPECTION = {\n  id: \"worksite-safety-inspection\",\n  name: \"Worksite Safety Inspection\",\n  icon: \"checklist\",\n  type: \"custom\",\n  is_published: false,\n  is_data: false,\n  is_manager: false,\n  is_list: false,\n  lists: ['clients'],\n  description: \"Monthly vehicle inspection\"\n}\n\nexport enum HazardFormLabels {\n  SiteHazardAssessmentCompleted = 'Site Hazard Assessment completed',\n  ScopeOfWorkClearlyDefined = 'Scope of work for the project clearly defined',\n  PotentialHazardsAndMitigationRequirementsIdentified = 'Potential hazards and mitigation requirements identified in hazard assessment',\n  SummitHealthAndSafetyManualAvailable = 'Summit Health and Safety manual available',\n  OccupationalHealthAndSafetyLegislationAvailable = 'Occupational Health And Safety legislation available',\n  DailySafetyMeetingsConductedDocumented = 'Daily safety meetings conducted and documented',\n  AllSitePersonalTrainingAndSafetyTickets = 'All site personal have the appropriate training and safety tickets',\n  AllSitePersonnelSiteSpecificWearingPPE = 'All site personnel are wearing site-specific PPE'\n}\n\nexport enum JobsiteFormLabels {\n  WorkAreaClearlyIdentified = 'Work area is clearly identified',\n  SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns = 'Site is free of trip hazards and other housekeeping concerns',\n  AllOpenExcavationsAreClearlyMarked = 'All open excavations are clearly marked',\n  PublicAccessToTheSiteControlled = 'Public access to the site controlled',\n  PrimeContractorClearlyIdentifiedWithSignage = 'Prime contractor clearly identified with signage',\n  IsThereEmergencyEquipmentOnSite = 'Is there emergency equipment on site?',\n  FirstAidKitAvailable = 'First aid kit available and stocked',\n  BlanketsAndStretcherAvailable = 'Blankets and stretcher available',\n  EyeWashBottleAvailable = 'Eye wash bottle available',\n  SpillKitAvailable = 'Spill kit available',\n  H2SPersonalGasMonitorsOnsiteHaveBeenBumped = 'The H2S personal gas monitors onsite have been bumped'\n}\n\nexport enum FireExtinguisherFormLabels {\n  TwentyPoundMinimumFireExtinguisherAvailable = '20 lb minimum fire extinguisher available',\n  FireExtinguisherInspected = 'Fire extinguisher(s) tag attached Inspected monthly and recorded',\n  FireExtinguisherVisibleUnobstructed = 'Fire extinguisher(s) visible and unobstructed',\n  FireExtinguisherCharged = 'Fire extinguishers showing charge (gauge indicator must be in the green zone indicating it is fully charged)',\n  FireExtinguisherSafetyPinSecured = 'Fire extinguisher safety pins are in place and secured to prevent an accidental discharge',\n  FireExtinguisherOperatingInstructions = 'Fire extinguishers operating instructions on the name plate are legible and face outwards',\n  FireExtinguisherNoVisibleDamage = 'No signs of visible damage to fire extinguisher (rust, dents or other signs of damage)',\n  FireExtinguisherCertification = 'External fire extinguisher certification within 12 months (must be certified by 3rd party annually)'\n}\n\nexport enum ErpPlanningFormLabels {\n  EmergencyResponsePlanOnSite = 'Emergency Response Plan (ERP) onsite',\n  MusterPointsIdentified = 'Muster point(s) identified',\n  STARSNumber = 'STARS # (if applicable)',\n  ERPIncludesDirectionsToNearestHospital = 'ERP includes directions to nearest hospital',\n  ERPResponderRolesAndResponsibilitiesIdentified = 'ERP responder roles and responsibilities identified',\n  CellularOrRadioCoverageConfirmed = 'Cellular or radio coverage confirmed. If no, what communication is in place?'\n}\n\nexport enum GroundFormLabels {\n  DoesTheProjectInvolveGroundDisturbance = 'Does the project involve ground disturbance',\n  GroundDisturbanceChecklistIsInPlace = 'Ground disturbance checklist is in place',\n  OneCallNotificationHasBeenRegistered = '1-Call notification has been registered',\n  AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed = 'All underground lines within 5 metres of the work area manually exposed',\n  ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined = '30 metre search area around the work area clearly defined',\n  ThirdPartyLineLocatesCompletedWithinTheSearchArea = 'Third-party line locates completed within the search area',\n  AllRequiredCrossingOrProximityAgreementsInPlace = 'All required crossing or proximity agreements in place'\n}\n\nexport enum ConfinedSpaceLabels {\n  DoesTheProjectInvolveConfinedSpaceEntry = 'Does the project involve Confined Space Entry?',\n  ConfinedSpacePermitIssued = 'Confined Space Permit Issued',\n  ConfinedSpaceSafetyTraining = 'Workers have applicable safety training and competent to perform the work',\n  SafetyWatchInPlace = 'Safety Watch in place',\n  RescuePlanAvailable = 'Rescue Plan Available'\n}\n\nexport enum HotWorkLabels {\n  DoesTheProjectInvolveHotWork = 'Does the project involve Hot Work (work that could produce a source of ignition, such as a spark or open flame)',\n  HotWorkPermitIssued = 'Hot Work Permit Issued',\n  FireHazardsIdentifiedControls = 'Fire Hazards identified and controls in place',\n  FireSafetyWatchAvailable = 'Fire / Safety Watch Available'\n}\n\nexport enum EquipmentLabels {\n  ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects = 'Exterior of vehicle generally clean and free of visual defects',\n  InteriorOfVehicleKeptTidyAndClean = 'Interior of vehicle kept tidy and clean',\n  VehicleWindshieldFreeOfMajorChipsAndCracks = 'Vehicle windshield free of major chips and cracks',\n  DailyPreUseVehicleInspectionCompleted = 'Daily pre-use vehicle inspection completed',\n  EquipmentPreUseInspectionCompleted = 'Equipment pre-use inspection completed',\n  CargoIinternalAndExternalProperlyStowedAndSecured = 'Cargo (internal and external) properly stowed and secured',\n  HornIsInProperWorkingCondition = 'Horn is in proper working condition',\n  HeadlightsAreInProperWorkingCondition = 'Headlights are in proper working condition',\n  SignalLightsAreInProperWorkingCondition = 'Signal lights are in proper working condition',\n  EmergencyWarningStrobeLightEquippedOnVehicle = 'Emergency warning / strobe light equipped on vehicle',\n  SafetyBuggyWhipEquippedOnVehicle = 'Safety / buggy whip equipped on vehicle',\n  FirstAidKitEquippedInVehicle = 'First aid kit equipped in vehicle',\n  EmergencySurvivalKitEquippedInVehicle = 'Emergency survival kit equipped in vehicle',\n  OtherCommentsKeyPositiveFindings = 'Other Comments - Key Positive Findings'\n}\n","<div class=\"files-padding\">\n  <ngx-dropzone class=\"custom-dropzone\"\n                [multiple] = \"true\"\n                [maxFileSize] = \"30000000\"\n                (change)=\"onSelect($event)\"\n                [expandable]=\"true\">\n    <ngx-dropzone-label>Drop file(s) or click to select for upload</ngx-dropzone-label>\n    <ngx-dropzone-preview *ngFor=\"let f of appService.fileArray; let i=index\" \n                          [removable]=\"true\" \n                          (removed)=\"onRemove(i)\">\n      <ngx-dropzone-label>\n        <p>{{ f.name | truncate:[20, '...']}}</p> \n        <p *ngIf=\"f.type\">({{ f.type | truncate:[20, '...']}})</p>\n      </ngx-dropzone-label>\n    </ngx-dropzone-preview>\n  </ngx-dropzone>\n</div>\n<mat-progress-bar *ngIf=\"appService.isFileUploadRunning\" mode=\"buffer\"></mat-progress-bar>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-fileupload-run',\n  templateUrl: './fileupload-run.component.html',\n  styleUrls: ['./fileupload-run.component.scss']\n})\nexport class FileuploadRunComponent implements OnInit {\n\n  @Input() index;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    public appService: AppService) { }\n\n  ngOnInit() {\n    // this.appService.isFileUploadRunning = true;\n  }\n\n  onSelect(event) {\n    this.appService.fileArray.push(...event.addedFiles);\n    this.appService.fileArray.forEach(element => {\n      this.readFile(element).then(fileContents => {\n        element.content = fileContents;\n        element.tenantID = localStorage.getItem('formTenantId');\n      });\n    });\n  }\n\n  private async readFile(file: File): Promise<string | ArrayBuffer> {\n    return new Promise<string | ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader();\n  \n      reader.onload = e => {\n        return resolve((e.target as FileReader).result);\n      };\n  \n      reader.onerror = e => {\n        console.error(`FileReader failed on file ${file.name}.`);\n        return reject(null);\n      };\n  \n      if (!file) {\n        console.error('No file to read.');\n        return reject(null);\n      }\n  \n      reader.readAsDataURL(file);\n    });\n  }\n\n  onFilesRejected(files: File[]) {\n    this.snackBar.open('Your file is too big, must be 5 Megabytes or less.', \"Error:\", \n        {duration: 5000})\n  }\n\n  onRemove(idx) {\n    this.appService.fileArray.splice(idx, 1);\n  }\n\n}\n","<div fxLayout=\"column\">\n  {{(label$ | async)}}\n</div>\n<mat-list role=\"list\" *ngFor=\"let comment of (comments$ | async)\">\n  <mat-list-item color=\"primary\" class=\"mat-list-item-font\" *ngIf=\"isCommentTab(step) ? !isDiscrepancy(comment) : isDiscrepancy(comment)\" >\n    <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n      <span \n      class=\"mat-list-item-linked hand\" \n      (click)=\"openComment(comment.label, comment.field)\">{{ comment.label | truncate:[12, '...']}} {{ comment.text | truncate:[15, '...']}}</span>\n      <button mat-icon-button color=\"primary\">\n        <mat-icon class=\"material-icons-outlined\" (click)=\"openCorrectiveActionDialog(comment)\">fact_check</mat-icon>\n      </button>\n    </div>\n  </mat-list-item>\n  <mat-list-item class=\"mat-list-item-font\" *ngIf=\"(comments$ | async)?.length == 0\">\n    <div mat-line>-- None Added --</div>\n  </mat-list-item>\n</mat-list>\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { CommentComponent } from 'src/app/component/comment/comment.component';\nimport { CorrectiveActionComponent } from 'src/app/component/corrective-action/corrective-action.component';\n\nimport { CommentState } from '../comment/state/comment.state';\nimport { AuthState } from '../../state/auth/auth.state';\n\n@Component({\n  selector: 'app-discrepancy',\n  templateUrl: './discrepancy.component.html',\n  styleUrls: ['./discrepancy.component.scss'],\n})\nexport class DiscrepancyComponent implements OnInit {\n  @Select(AuthState.selectedForm) selectedForm$: Observable<any>;\n  @Select(CommentState.comments) comments$: Observable<any[]>;\n  @Select(CommentState.comments) discrepancies$: Observable<any[]>;\n  @Select(CommentState.commentLabel) label$: Observable<string>;\n  @Select(AuthState) state$: Observable<any[]>;\n\n  constructor(private dialog: MatDialog, private store: Store) {}\n\n  @Input() step: number;\n  ngOnInit(): void {}\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {\n      title: label,\n      label: label,\n      field: field,\n      type: 'isSpotCheckSafety',\n    };\n    this.dialog.open(CommentComponent, dialogConfig);\n  }\n\n  openCorrectiveActionDialog(comment) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.maxWidth = '100vw';\n    dialogConfig.maxHeight = '100vh';\n    dialogConfig.width = '100vw';\n    dialogConfig.height = '100vh';\n    dialogConfig.data = {\n      label: comment.label,\n      field: comment.field,\n      type: comment.type,\n      actionItem: comment.text,\n    };\n    this.dialog.open(CorrectiveActionComponent, dialogConfig);\n  }\n\n  isCommentTab = (step: number) => {\n    if (step === 8 || step === 2 || step === 10) return true;\n  };\n\n  isDiscrepancy(comment) {\n    return comment.discrepancy\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core'\n\n@Pipe({\n  name: 'replaceUnderscore'\n})\nexport class ReplaceUnderscorePipe implements PipeTransform {\n\n  transform(value: string): string {\n    if (value !== null)\n      return value.replace(/_/g, ' ')\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { NgModule, APP_INITIALIZER } from '@angular/core'\n\nimport { IonicModule } from '@ionic/angular'\nimport { NgxEchartsModule } from 'ngx-echarts'\n\nimport { environment } from '../environments/environment'\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { HttpConfig } from './interceptor/httpconfig.interceptor'\n\nimport { MaterialModule } from \"./material/material.module\"\n\nimport { AppRoutingModule } from './app-routing.module'\n\nimport { AppComponent } from './app.component'\n\nimport { PipeModule } from './pipe/pipe.module'\n\nimport { Device } from '@ionic-native/device/ngx'\n\n// pwa\nimport { ServiceWorkerModule } from '@angular/service-worker'\n\n// state management\nimport { NgxsModule } from '@ngxs/store'\nimport { States } from './state/app.state'\n\n// third party libraries\nimport { QuillModule } from \"ngx-quill\"\nimport { NgxBarcode6Module } from 'ngx-barcode6'\nimport { NgxDropzoneModule } from 'ngx-dropzone'\nimport { DragDropModule } from '@angular/cdk/drag-drop'\nimport { ZXingScannerModule } from '@zxing/ngx-scanner'\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode'\nimport { WebcamModule } from 'ngx-webcam'\n\n// pics\nimport { PicsComponent } from './component/pics/pics.component'\nimport { CameraComponent } from './component/camera/camera.component'\nimport { PicDeleteComponent } from './component/pic-delete/pic-delete.component'\n\n// voice\nimport { VoiceComponent } from './component/voice/voice.component'\nimport { CommentComponent } from './component/comment/comment.component'\n\n// admin\nimport { PinComponent } from './component/admin/pin/pin.component'\nimport { AdminComponent } from './component/admin/admin.component'\nimport { SdkComponent } from './component/admin/sdk/sdk.component'\nimport { DataComponent } from './component/admin/data/data.component'\nimport { MenuComponent } from './component/admin/menu/menu.component'\nimport { FormsComponent } from './component/admin/forms/forms.component'\nimport { KioskeComponent } from './component/admin/kioske/kioske.component'\nimport { SignupComponent } from './component/admin/signup/signup.component'\nimport { ProfileComponent } from './component/admin/profile/profile.component'\nimport { ListRunComponent } from './component/admin/list-run/list-run.component'\nimport { SettingsComponent } from './component/admin/settings/settings.component'\nimport { ListEditComponent } from './component/admin/list-edit/list-edit.component'\nimport { EmailEditComponent } from './component/admin/email-edit/email-edit.component'\nimport { EmailListComponent } from './component/admin/email-list/email-list.component'\nimport { FormListsComponent } from './component/admin/form-lists/form-lists.component'\nimport { DataFormsComponent } from './component/admin/data-forms/data-forms.component'\nimport { IdentificationComponent } from './component/admin/identification/identification.component'\n\n// form, home, shared\nimport { FormComponent } from './component/form/form.component'\nimport { HomeComponent } from './component/home/home.component'\nimport { SignOffComponent } from './component/sign-off/sign-off.component'\nimport { DiscrepancyComponent } from './component/discrepancy/discrepancy.component'\nimport { BottomSheetCommentComponent } from './component/comment/bottom-sheet-comment/bottom-sheet-comment.component'\nimport { CorrectiveActionComponent } from './component/corrective-action/corrective-action.component'\n\n// vehicle-inspection\nimport { DetailComponent } from './component/forms/vehicle-inspection/detail/detail.component'\nimport { HeaderComponent } from './component/forms/vehicle-inspection/header/header.component'\nimport { VehicleInspectionComponent } from './component/forms/vehicle-inspection/vehicle-inspection.component'\nimport { DetailCommentsComponent } from './component/forms/vehicle-inspection/detail-comments/detail-comments.component'\n\n// worksite-safety-inspection\nimport { WorksiteSafetyInspectionComponent } from './component/forms/worksite-safety-inspection/worksite-safety-inspection.component'\nimport { WorksiteSafetyHeaderComponent } from './component/forms/worksite-safety-inspection/worksite-safety-header/worksite-safety-header.component'\nimport { WorksiteSafetyHazardComponent } from './component/forms/worksite-safety-inspection/worksite-safety-hazard/worksite-safety-hazard.component'\nimport { WorksiteSafetyGroundComponent } from './component/forms/worksite-safety-inspection/worksite-safety-ground/worksite-safety-ground.component'\nimport { WorksiteSafetyJobsiteComponent } from './component/forms/worksite-safety-inspection/worksite-safety-jobsite/worksite-safety-jobsite.component'\nimport { WorksiteSafetyEquipmentComponent } from './component/forms/worksite-safety-inspection/worksite-safety-equipment/worksite-safety-equipment.component'\nimport { WorksiteSafetyErpPlanningComponent } from './component/forms/worksite-safety-inspection/worksite-safety-erp-planning/worksite-safety-erp-planning.component'\nimport { WorksiteFireExtinguisherComponent } from './component/forms/worksite-safety-inspection/worksite-fire-extinguisher/worksite-fire-extinguisher.component'\nimport { WorksiteSafetyConfinedSpaceComponent } from './component/forms/worksite-safety-inspection/worksite-safety-confined-space/worksite-safety-confined-space.component'\nimport { WorksiteSafetyHotWorkComponent } from './component/forms/worksite-safety-inspection/worksite-safety-hot-work/worksite-safety-hot-work.component'\nimport { BottomSheetWorksiteSafetyInspectionComponent } from './component/forms/worksite-safety-inspection/bottom-sheet-worksite-safety-inspection/bottom-sheet-worksite-safety-inspection.component'\nimport { WorksiteKeyPositiveFindingComponent } from './component/forms/worksite-safety-inspection/worksite-key-positive-finding/worksite-key-positive-finding.component'\n\n//spot check safety\nimport { SpotCheckSafetyComponent } from './component/forms/spot-check-safety/spot-check-safety.component'\nimport { HazardIdentificationControlComponent } from './component/forms/spot-check-safety/hazard-identification-control/hazard-identification-control.component'\nimport { RulesWorkProceduresComponent } from './component/forms/spot-check-safety/rules-work-procedures/rules-work-procedures.component'\nimport { IncidentReportingComponent } from './component/forms/spot-check-safety/incident-reporting/incident-reporting.component'\nimport { CommunicationTrainingComponent } from './component/forms/spot-check-safety/communication-training/communication-training.component'\nimport { PersonalProtectiveEquipmentComponent } from './component/forms/spot-check-safety/personal-protective-equipment/personal-protective-equipment.component'\nimport { SafetyEquipmentComponent } from './component/forms/spot-check-safety/safety-equipment/safety-equipment.component'\nimport { CorrectiveActionsComponent } from './component/forms/spot-check-safety/corrective-actions/corrective-actions.component'\nimport { SpotCheckSafetyHeaderComponent } from './component/forms/spot-check-safety/spot-check-safety-header/spot-check-safety-header.component'\n\n// json rendering components\nimport { RunComponent } from './component/run/run.component'\nimport { GpsRunComponent } from './component/run-controls/gps-run/gps-run.component'\nimport { LabelRunComponent } from './component/run-controls/label-run/label-run.component'\nimport { RadioRunComponent } from './component/run-controls/radio-run/radio-run.component'\nimport { SliderRunComponent } from './component/run-controls/slider-run/slider-run.component'\nimport { ToggleRunComponent } from './component/run-controls/toggle-run/toggle-run.component'\nimport { TextboxRunComponent } from './component/run-controls/textbox-run/textbox-run.component'\nimport { QuillRunComponent } from './component/run-controls/quill-run/quill-run.component'\nimport { CheckboxRunComponent } from './component/run-controls/checkbox-run/checkbox-run.component'\nimport { SelectRunComponent } from './component/run-controls/select-run/select-run.component'\nimport { TextareaRunComponent } from './component/run-controls/textarea-run/textarea-run.component'\nimport { FileuploadRunComponent } from './component/run-controls/fileupload-run/fileupload-run.component'\nimport { QrcodeRunComponent } from './component/run-controls/qrcode-run/qrcode-run.component'\nimport { BarcodeRunComponent } from './component/run-controls/barcode-run/barcode-run.component'\nimport { ScannerBarcodeRunComponent } from './component/run-controls/scanner-barcode-run/scanner-barcode-run.component'\nimport { ScannerQrcodeRunComponent } from './component/run-controls/scanner-qrcode-run/scanner-qrcode-run.component'\n\n//indexedDB\nimport { IdbPersistenceService } from './service-idb/idb-persistence.service'\n\n// notifications\nimport { NotificationComponent } from './component/notification/notification.component'\nimport { NotificationOpenComponent } from './component/notification/notification-open/notification-open.component'\nimport { NotificationSignedComponent } from './component/notification/notification-signed/notification-signed.component'\nimport { NotificationActionComponent } from './component/notification/notification-action/notification-action.component'\nimport { ResetPasswordComponent } from './component/admin/reset-password/reset-password.component'\nimport { LayoutComponent } from './component/layout/layout.component'\nimport { SendPasswordComponent } from './component/admin/send-password/send-password.component'\nimport { LayoutAdminComponent } from './component/layout-admin/layout-admin.component'\nimport { ListFormsComponent } from './component/admin/list-forms/list-forms.component'\nimport { LabelsComponent } from './component/admin/labels/labels.component'\nimport { LabelComponent } from './component/admin/label/label.component'\n\n// meaningful site tour\nimport { MeaningfulSiteTourComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour.component'\nimport { MeaningfulSiteTourHeaderComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour-header/meaningful-site-tour-header.component'\nimport { MeaningfulSiteTourNotesComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour-notes/meaningful-site-tour-notes.component'\nimport { MeaningfulSiteTourSuggestionsComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour-suggestions/meaningful-site-tour-suggestions.component'\nimport { MeaningfulSiteTourTodoComponent } from './component/forms/meaningful-site-tour/meaningful-site-tour-todo/meaningful-site-tour-todo.component'\n\n// kioske pages\nimport { PricingComponent } from './component/pricing/pricing.component'\nimport { WhyusComponent } from './component/whyus/whyus.component'\nimport { ContactComponent } from './component/contact/contact.component'\nimport { TermsComponent } from './component/terms/terms.component'\nimport { SigninComponent } from './component/admin/signin/signin.component'\nimport { SignupBottomComponent } from './component/admin/signup-bottom/signup-bottom.component';\nimport { DashboardComponent } from './component/admin/dashboard/dashboard.component';\nimport { DashboardFilterComponent } from './component/admin/dashboard-filter/dashboard-filter.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    PinComponent,\n    FormComponent,\n    HomeComponent,\n    DataComponent,\n    MenuComponent,\n    AdminComponent,\n    SignOffComponent,\n    SettingsComponent,\n    FormListsComponent,\n    DataFormsComponent,\n    IdentificationComponent,\n    RunComponent,\n    GpsRunComponent,\n    ListRunComponent,\n    LabelRunComponent,\n    RadioRunComponent,\n    SliderRunComponent,\n    ToggleRunComponent,\n    TextboxRunComponent,\n    QuillRunComponent,\n    CheckboxRunComponent,\n    SelectRunComponent,\n    TextareaRunComponent,\n    FileuploadRunComponent,\n    QrcodeRunComponent,\n    BarcodeRunComponent,\n    ScannerBarcodeRunComponent,\n    ScannerQrcodeRunComponent,\n    DetailComponent,\n    HeaderComponent,\n    DiscrepancyComponent ,\n    VehicleInspectionComponent,\n    PicsComponent,\n    DetailCommentsComponent,\n    CameraComponent,\n    PicDeleteComponent,\n    FormsComponent,\n    EmailListComponent,\n    ListEditComponent,\n    EmailEditComponent,\n    NotificationComponent,\n    NotificationOpenComponent,\n    NotificationSignedComponent,\n    NotificationActionComponent,\n    ResetPasswordComponent,\n    LayoutComponent,\n    SendPasswordComponent,\n    LayoutAdminComponent,\n    ProfileComponent,\n    WorksiteSafetyInspectionComponent,\n    WorksiteSafetyHeaderComponent,\n    WorksiteSafetyHazardComponent,\n    WorksiteSafetyGroundComponent,\n    WorksiteSafetyJobsiteComponent,\n    WorksiteSafetyEquipmentComponent,\n    WorksiteSafetyErpPlanningComponent,\n    WorksiteFireExtinguisherComponent,\n    WorksiteSafetyConfinedSpaceComponent,\n    WorksiteSafetyHotWorkComponent,\n    ListFormsComponent,\n    VoiceComponent,\n    LabelsComponent,\n    LabelComponent,\n    CommentComponent,\n    MeaningfulSiteTourComponent,\n    MeaningfulSiteTourNotesComponent,\n    MeaningfulSiteTourHeaderComponent,\n    SpotCheckSafetyComponent,\n    HazardIdentificationControlComponent,\n    RulesWorkProceduresComponent,\n    IncidentReportingComponent,\n    CommunicationTrainingComponent,\n    PersonalProtectiveEquipmentComponent,\n    SafetyEquipmentComponent,\n    CorrectiveActionsComponent,\n    SpotCheckSafetyHeaderComponent,\n    BottomSheetWorksiteSafetyInspectionComponent,\n    BottomSheetCommentComponent,\n    CorrectiveActionComponent,\n    WorksiteKeyPositiveFindingComponent,\n    KioskeComponent,\n    SignupComponent,\n    PricingComponent,\n    WhyusComponent,\n    ContactComponent,\n    TermsComponent,\n    SigninComponent,\n    SignupBottomComponent,\n    SdkComponent,\n    MeaningfulSiteTourSuggestionsComponent,\n    MeaningfulSiteTourTodoComponent,\n    DashboardComponent,\n    DashboardFilterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    QuillModule,\n    NgxBarcode6Module,\n    NgxDropzoneModule,\n    DragDropModule,\n    ZXingScannerModule,\n    NgxQRCodeModule,\n    PipeModule,\n    WebcamModule,\n    IonicModule.forRoot(),\n    NgxsModule.forRoot(States, { developmentMode: !environment.production }),\n    NgxEchartsModule.forRoot({ echarts: () => import('echarts') }),\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  entryComponents: [\n    VoiceComponent,\n    ListEditComponent,\n    EmailEditComponent,\n    DetailCommentsComponent\n  ],\n  providers: [\n    \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpConfig,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (idbPersistenceService: IdbPersistenceService) => () => idbPersistenceService.connect(),\n      deps: [IdbPersistenceService],\n      multi: true\n    },\n    Device\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { User, UserIdb, Tenant, Form } from './auth-state.model'\n\nexport class SetIsIdentified {\n  static type = '[Auth] SetIsIdentified'\n  constructor(public isIdentified: boolean) {}\n}\n\nexport class SetIsSignIn {\n  static type = '[Auth] SetIsSignIn'\n  constructor(public isSignIn: boolean) {}\n}\n\nexport class SetIsAdmin {\n  static type = '[Auth] SetIsAdmin'\n  constructor(public isAdmin: boolean) {}\n}\n\nexport class SetIsListMenu {\n  static type = '[Auth] SetIsMenuList'\n  constructor(public isListMenu: boolean) {}\n}\nexport class SetPage {\n  static type = '[Auth] SetPage'\n  constructor(public page: string) {}\n}\nexport class SetEmailList {\n  static type = '[Auth] SetEmailList'\n  constructor(public emailList: []) {}\n}\nexport class SetWorkers {\n  static type = '[Auth] SetWorkers'\n  constructor(public workers: any[]) {}\n}\n\nexport class SetSupervisors {\n  static type = '[Auth] SetSupervisors'\n  constructor(public supervisors: any[]) {}\n}\n\nexport class SetLookupListData {\n  static type = '[Auth] SetLookupListData'\n  constructor(public lookupListData: []) {}\n}\n\nexport class SetLookupListName {\n  static type = '[Auth] SetLookupListName'\n  constructor(public lookupListName: string) {}\n}\n\nexport class SetLookupListNames {\n  static type = '[Auth] SetLookupListNames'\n  constructor(public lookupListNames: []) {}\n}\n\nexport class SetChildPage {\n  static type = '[Auth] SetChildPage'\n  constructor(public childPage: string) {}\n}\n\nexport class SetChildPageLabel {\n  static type = '[Auth] SetChildPageLabel'\n  constructor(public childPageLabel: string) {}\n}\n\nexport class SetTenant {\n  static type = '[Auth] SetTenant'\n  constructor(public tenant: Tenant) {}\n}\n\nexport class SetUser {\n  static type = '[Auth] SetUser'\n  constructor(public user: User) {}\n}\n\nexport class SetUserIdb {\n  static type = '[Auth] SetUserIdb'\n  constructor(public userIdb: UserIdb) {}\n}\n\nexport class SetSelectedForm {\n  static type = '[Auth] SetSelectedForm'\n  constructor(public selectedForm: Form) {}\n}\n\nexport class ResetAuth {\n  static type = '[Auth] ResetAuth'\n  constructor() {}\n}\n\nexport class SetForms {\n  static type = '[Auth] SetForms'\n  constructor(public forms: any[]) {}\n}\n\nexport class SetSelectedVoiceFieldLabel {\n  static type = '[Auth] SetSelectedVoiceFieldLabel'\n  constructor(public selectedVoiceFieldLabel: string) {}\n}\n\nexport class SetFormLabels {\n  static type = '[Auth] SetFormLabels'\n  constructor(public formLabels: any[]) {}\n}\n\nexport class SetCurrentFormId {\n  static type = '[Auth] SetCurrentFormId'\n  constructor(public currentFormId: string) {}\n}\nexport class SetFormData {\n  static type = '[Auth] SetFormData'\n  constructor(public formData: {}) {}\n}\nexport class SetNotificationId {\n  static type = '[Auth] SetNotificationId'\n  constructor(public notificationId: number) {}\n}\nexport class SetChildPageIcon {\n  static type = '[Auth] SetChildPageIcon'\n  constructor(public childPageIcon: string) {}\n}\nexport class SetKioske {\n  static type = '[Auth] SetKioske'\n  constructor(public kioske: boolean) {}\n}\nexport class SetFormsPublished {\n  static type = '[Auth] SetFormsPublished'\n  constructor(public formsPublished: Form[]) {}\n}\n\n\n\n","export const MEANINGFUL_SITE_TOUR = {\n  id: 'meaningful-site-tour',\n  icon: 'tour',\n  description: 'Safety Environment Compliance',\n  name: 'Meaningful Site Tour',\n  type: 'custom',\n  is_published: false,\n  is_data: false,\n  is_manager: false,\n  is_list: false,\n  lists: []\n}","<form fxLayout=\"column\" [formGroup]=\"headerForm\">\n  <ion-label position=\"stacked\">Choose a date</ion-label>\n  <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"Date\">\n  </ion-datetime>\n  <mat-divider></mat-divider>\n  <mat-form-field>\n    <mat-label>Company Name</mat-label>\n    <input matInput placeholder=\"Company Name\" formControlName=\"CompanyName\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Employee/Consultant Name</mat-label>\n    <input matInput placeholder=\"Employee/Consultant Name\" formControlName=\"EmployeeName\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Job Description</mat-label>\n    <input matInput placeholder=\"Job Description\" formControlName=\"JobDescription\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Location</mat-label>\n    <input matInput placeholder=\"\" formControlName=\"Location\" type=\"text\" required>\n  </mat-form-field>\n  <mat-form-field class=\"bot-pad full-width-field\">\n    <mat-label>Evaluator</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter First Name & Last Name\" matInput\n      [formControl]=\"autoCompleteService.workersControl\" [matAutocomplete]=\"autoWorkers\" required>\n    <mat-hint>Worker Completing the Tour</mat-hint>\n    <mat-autocomplete #autoWorkers=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let worker of autoCompleteService.filteredWorkers$ | async\" [value]=\"worker.name\">\n        {{worker.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field class=\"full-width-field\">\n    <mat-label>Supervisor Name</mat-label>\n    <input type=\"text\" placeholder=\"Select or Enter Supervisor Name\" matInput\n      [formControl]=\"autoCompleteService.supervisorsControl\" [matAutocomplete]=\"autoSupervisors\" required>\n    <mat-autocomplete #autoSupervisors=\"matAutocomplete\" required>\n      <mat-option *ngFor=\"let supervisor of autoCompleteService.filteredSupervisors$ | async\" [value]=\"supervisor.name\"\n        required>\n        {{supervisor.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</form>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { AutoCompleteService } from \"../../../../service/auto-complete.service\"\n\n@Component({\n  selector: 'app-spot-check-safety-header',\n  templateUrl: './spot-check-safety-header.component.html',\n  styleUrls: ['./spot-check-safety-header.component.scss']\n})\nexport class SpotCheckSafetyHeaderComponent implements OnInit {\n\n  @Input() headerForm\n\n  constructor(public autoCompleteService: AutoCompleteService) { }\n\n  ngOnInit(): void {\n    this.headerForm.controls['Date'].setValue(new Date().toISOString())\n  }\n  \n}\n","<mat-toolbar>\n  <span>{{ childPageLabel$ | async }}</span>\n  <span class=\"toolbar-spacer\"></span>\n  <button mat-icon-button (click)=\"close()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-toolbar>\n<div class=\"content\">\n  <mat-tab-group [(selectedIndex)]=\"tabIndex\" mat-stretch-tabs>\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <mat-icon class=\"material-icons-outlined\">radio_button_unchecked</mat-icon>\n        &nbsp;&nbsp;&nbsp;Open\n      </ng-template>\n      <app-notification-open (pdf)=\"pdf()\"></app-notification-open>\n    </mat-tab>\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <mat-icon class=\"material-icons-outlined\">border_color</mat-icon>\n        &nbsp;&nbsp;&nbsp;Signed\n      </ng-template>\n      <app-notification-signed (pdf)=\"pdf()\"></app-notification-signed>\n    </mat-tab>\n  </mat-tab-group>\n</div>","import { Component, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { Router } from '@angular/router'\n\nimport { FormControl } from \"@angular/forms\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { NotificationState } from '../../state/notification/notification.state'\nimport { SetPage, SetChildPageLabel, SetChildPage } from '../../state/auth/auth-state.actions'\n\nimport { ApiService } from \"../../service/api.service\"\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.scss']\n})\nexport class NotificationComponent implements OnInit {\n\n  tabIndex\n  notificationOpen\n  notificationSigned\n  public msg = new FormControl([''])\n\n  @Select(AuthState.childPageLabel) childPageLabel$: Observable<string>\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.tabIndex = this.store.selectSnapshot(NotificationState.notificationTab)\n  }\n\n  close() {\n    this.store.select(AuthState.isSignIn).subscribe((isSignIn) => {\n      if (isSignIn) {\n        this.store.dispatch(new SetPage('admin'))\n        this.store.dispatch(new SetChildPage('data-forms'))\n        this.store.dispatch(new SetChildPageLabel('Data Forms'))\n      }\n      else {\n        this.store.dispatch(new SetPage('home'))\n        this.store.dispatch(new SetChildPageLabel('Forms'))\n        this.router.navigate([''])\n      }\n    })\n    \n  }\n\n  pdf() {\n    const notification = this.store.selectSnapshot(NotificationState.notification)\n    console.log(notification)\n    this.apiService.getPDF(notification.pdf)\n  }\n}","import { Component, OnInit, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\n\nimport { EquipmentLabels } from '../state/worksite-safety-inspection-state.model'\n\n@Component({\n  selector: 'app-worksite-safety-equipment',\n  templateUrl: './worksite-safety-equipment.component.html',\n  styleUrls: ['./worksite-safety-equipment.component.scss']\n})\nexport class WorksiteSafetyEquipmentComponent implements OnInit {\n\n  @Input() equipmentForm\n\n  label = EquipmentLabels\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {}\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = {title: 'Summit Vehicles & Equipment', label: label, field: field, type: 'isSummitVehicleEquipment'}\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"equipmentForm\">\n    <div class=\"text-color radio-center\">{{label.ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects,'ExteriorOfVehicleGenerallyCleanAndFreeOfVisualDefects')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.InteriorOfVehicleKeptTidyAndClean}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"InteriorOfVehicleKeptTidyAndClean\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.InteriorOfVehicleKeptTidyAndClean,'InteriorOfVehicleKeptTidyAndClean')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div class=\"text-color radio-center\">{{label.VehicleWindshieldFreeOfMajorChipsAndCracks}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"VehicleWindshieldFreeOfMajorChipsAndCracks\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.VehicleWindshieldFreeOfMajorChipsAndCracks,'VehicleWindshieldFreeOfMajorChipsAndCracks')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.DailyPreUseVehicleInspectionCompleted}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DailyPreUseVehicleInspectionCompleted\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.DailyPreUseVehicleInspectionCompleted,'DailyPreUseVehicleInspectionCompleted')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.EquipmentPreUseInspectionCompleted}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EquipmentPreUseInspectionCompleted\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.EquipmentPreUseInspectionCompleted,'EquipmentPreUseInspectionCompleted')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.CargoIinternalAndExternalProperlyStowedAndSecured}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"CargoIinternalAndExternalProperlyStowedAndSecured\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.CargoIinternalAndExternalProperlyStowedAndSecured,'CargoIinternalAndExternalProperlyStowedAndSecured')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.HornIsInProperWorkingCondition}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HornIsInProperWorkingCondition\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.HornIsInProperWorkingCondition,'HornIsInProperWorkingCondition')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.HeadlightsAreInProperWorkingCondition}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HeadlightsAreInProperWorkingCondition\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.HeadlightsAreInProperWorkingCondition,'HeadlightsAreInProperWorkingCondition')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.SignalLightsAreInProperWorkingCondition}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SignalLightsAreInProperWorkingCondition\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SignalLightsAreInProperWorkingCondition,'SignalLightsAreInProperWorkingCondition')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.EmergencyWarningStrobeLightEquippedOnVehicle}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencyWarningStrobeLightEquippedOnVehicle\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.EmergencyWarningStrobeLightEquippedOnVehicle,'EmergencyWarningStrobeLightEquippedOnVehicle')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.SafetyBuggyWhipEquippedOnVehicle}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyBuggyWhipEquippedOnVehicle\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SafetyBuggyWhipEquippedOnVehicle,'SafetyBuggyWhipEquippedOnVehicle')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.FirstAidKitEquippedInVehicle}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FirstAidKitEquippedInVehicle\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.FirstAidKitEquippedInVehicle,'FirstAidKitEquippedInVehicle')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.EmergencySurvivalKitEquippedInVehicle}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencySurvivalKitEquippedInVehicle\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.EmergencySurvivalKitEquippedInVehicle,'EmergencySurvivalKitEquippedInVehicle')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </form>\n</div>\n","<form class=\"run-container\" *ngIf=\"selectedForm$ | async\" [formGroup]=\"runForm\">\n  <div *ngFor=\"let control of (selectedForm$ | async).details; let i=index\">\n    <div [ngSwitch]=\"control.type\">\n      <app-label-run *ngSwitchCase=\"'Label'\" [index]=i></app-label-run>\n      <app-gps-run *ngSwitchCase=\"'GPS'\" [runForm]=\"runForm\" ></app-gps-run>\n      <app-textbox-run *ngSwitchCase=\"'Textbox'\" [runForm]=\"runForm\" [index]=i>\n      </app-textbox-run>\n      <app-textarea-run *ngSwitchCase=\"'Textarea'\" [runForm]=\"runForm\" [index]=i>\n      </app-textarea-run>\n      <app-checkbox-run *ngSwitchCase=\"'Checkbox'\" [runForm]=\"runForm\" [index]=i>\n      </app-checkbox-run>\n      <app-radio-run *ngSwitchCase=\"'Radio'\" [runForm]=\"runForm\" [index]=i>\n      </app-radio-run>\n      <app-select-run *ngSwitchCase=\"'Select'\" [runForm]=\"runForm\" [index]=i>\n      </app-select-run>\n      <app-slider-run *ngSwitchCase=\"'Slider'\" [runForm]=\"runForm\" [index]=i>\n      </app-slider-run>\n      <app-toggle-run *ngSwitchCase=\"'Toggle'\" [runForm]=\"runForm\" [index]=i>\n      </app-toggle-run>\n    </div>\n  </div>\n</form>\n<div fxLayoutAlign=\"center center\">\n  <mat-icon class=\"icon-120px-action\" (click)=\"saveCloud()\">fingerprint</mat-icon>\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { FormBuilder, FormGroup } from '@angular/forms'\n\nimport { Store, Select } from '@ngxs/store'\nimport { ApiService } from \"../../service/api.service\"\nimport { SuccessService } from \"../../service/success.service\"\nimport { IdbCrudService } from \"../../service-idb/idb-crud.service\"\nimport { TransformRunService } from \"../../service/transform-run.service\"\n\nimport { AuthState } from '../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-run',\n  templateUrl: './run.component.html',\n  styleUrls: ['./run.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RunComponent implements OnInit {\n\n  @Input() runForm: FormGroup\n\n  @Select(AuthState.selectedForm) selectedForm$: Observable<any>\n  \n  id\n  newform\n  user\n  data\n  forms\n  lists\n  formObj\n  fileArray\n  user_created\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    public idbCrudService: IdbCrudService,\n    private successService: SuccessService,\n    private transformRunService: TransformRunService) {\n\n    this.runForm = this.fb.group({})\n  }\n\n  ngOnInit() {}\n\n  saveCloud() {\n    let obj = {\n      data: this.transformRunService.parseDataCloud(this.runForm.value, this.store.selectSnapshot(AuthState.selectedForm[\"formObject\"])),\n      columns: this.transformRunService.parseColumns(this.store.selectSnapshot(AuthState.selectedForm[\"formObject\"][\"form\"][\"details\"])),\n      user: this.store.selectSnapshot(AuthState.user),\n      formObj: this.store.selectSnapshot(AuthState.selectedForm[\"formObject\"])\n    }\n\n    this.apiService.save(obj).subscribe(() => {\n      this.successService.popSnackbar('Successfully Saved.')\n    })\n  }\n\n}\n\n\n","import { NotificationModel } from './notification-state.model'\n\nexport class SetNotification {\n  static type = '[Notification] SetNotification'\n  constructor(public notification: NotificationModel) {}\n}\n\nexport class SetNotificationMyCount {\n  static type = '[Notification] SetNotificationMyCount'\n  constructor(public notificationMyCount: number) {}\n}\n\nexport class SetNotificationAdminCount {\n  static type = '[Notification] SetNotificationAdminCount'\n  constructor(public notificationAdminCount: number) {}\n}\n\nexport class SetNotificationTab {\n  static type = '[Notification] SetNotificationTab'\n  constructor(public notificationTab: number) {}\n}\n\nexport class SetNotificationOpen {\n  static type = '[Notification] SetNotificationOpen'\n  constructor(public notificationOpen: NotificationModel) {}\n}\n\nexport class SetNotificationSigned {\n  static type = '[Notification] SetNotificationSigned'\n  constructor(public notificationSigned: NotificationModel) {}\n}\n\nexport class SetNotificationAllOpen {\n  static type = '[Notification] SetNotificationAllOpen'\n  constructor(public notificationAllOpen: NotificationModel) {}\n}\n\nexport class SetNotificationAllSigned {\n  static type = '[Notification] SetNotificationAllSigned'\n  constructor(public notificationAllSigned: NotificationModel) {}\n}\n\nexport class SetNotificationIdx {\n  static type = '[Notification] SetNotificationIdx'\n  constructor(public notificationIdx: number) {}\n}\n\nexport class SetNotificationComments {\n  static type = '[Notification] SetNotificationComments'\n  constructor(public notificationComments: any[]) {}\n}\n\n\n\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\n\nimport { CommentComponent } from '../../../comment/comment.component'\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentService } from \"../../../comment/service/comment.service\"\n\n@Component({\n  selector: 'app-incident-reporting',\n  templateUrl: './incident-reporting.component.html',\n  styleUrls: ['./incident-reporting.component.scss']\n})\nexport class IncidentReportingComponent {\n\n  @Input() incidentForm\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService) { }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.incidentForm, formField, title)\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'Incident Reporting', label: label, field: field, type: 'isSpotCheckSafety' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n  openDiscrepancy(label, field, discrepancy) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {\n      title: 'Incident Reporting',\n      label,\n      field,\n      type: 'isSpotCheckSafety',\n      discrepancy,\n    };\n    this.dialog.open(CommentComponent, dialogConfig);\n  }\n\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.incidentForm)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"incidentForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Is there an Incident reporting process in place?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"IncidentReporting\">\n        <mat-radio-button (click)=\"toggle('IncidentReporting')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Is there an Incident reporting process in place?','IncidentReporting', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Is there a near miss/incident reporting form which includes follow-up?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"NearMissReporting\">\n        <mat-radio-button (click)=\"toggle('NearMissReporting')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Is there a near miss/incident reporting form which includes follow-up?','NearMissReporting', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Are incidents reported and was the problem fixed the last time there was a near miss or incident?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"ProblemFixed\">\n        <mat-radio-button (click)=\"toggle('ProblemFixed')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Are incidents reported and was the problem fixed the last time there was a near miss or incident?','ProblemFixed', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Are management and workers involved in solving the issues?\n    </div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SolvingIssues\">\n        <mat-radio-button (click)=\"toggle('SolvingIssues')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Are management and workers involved in solving the issues?','SolvingIssues', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Incident Reporting Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('IncidentComments','Incident Reporting Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"IncidentComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n\n\n","export class SetIsWorksiteSafetyHeaderValid {\n  static type = '[WorksiteSafetyStateModel] SetHeader'\n  constructor(public isWorksiteSafetyHeaderValid: boolean) {}\n}\n\nexport class SetIsSafetyEquipment {\n  static type = '[WorksiteSafetyStateModel] SetIsSafetyEquipment'\n  constructor(public IsSafetyEquipment: boolean) {}\n}\n\nexport class SetIsAppropriateTraining {\n  static type = '[WorksiteSafetyStateModel] SetAppropriateTraining'\n  constructor(public isAppropriateTraining: boolean) {}\n}","import { Component, Input } from '@angular/core';\n\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\n\nimport { CommentComponent } from '../../../comment/comment.component';\n\nimport { AppService } from '../../../../service/app.service';\nimport { CommentService } from '../../../comment/service/comment.service';\n\n@Component({\n  selector: 'app-rules-work-procedures',\n  templateUrl: './rules-work-procedures.component.html',\n  styleUrls: ['./rules-work-procedures.component.scss'],\n})\nexport class RulesWorkProceduresComponent {\n  @Input() rulesForm;\n\n  constructor(\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService\n  ) {}\n\n  ngOnInit(): void {}\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.rulesForm, formField, title);\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {\n      title: 'Rules & Work Procedures',\n      label: label,\n      field: field,\n      type: 'isSpotCheckSafety',\n    };\n    this.dialog.open(CommentComponent, dialogConfig);\n  }\n  openDiscrepancy(label, field, discrepancy) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {\n      title: 'Rules & Work Procedures',\n      label,\n      field,\n      type: 'isSpotCheckSafety',\n      discrepancy,\n    };\n    this.dialog.open(CommentComponent, dialogConfig);\n  }\n\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.rulesForm);\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"rulesForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Are there procedures for high risk or critical work? Are they available and used?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"Procedures\">\n        <mat-radio-button (click)=\"toggle('Procedures')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Are there procedures for high risk or critical work? Are they available and used?','Procedures', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Are there written emergency plans available and communicated to personnel on the work site?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencyPlan\">\n        <mat-radio-button (click)=\"toggle('EmergencyPlan')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Are there written emergency plans available and communicated to personnel on the work site?','EmergencyPlan', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Rules & Work Procedures Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('RulesComments','Rules & Work Procedures Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"RulesComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n\n","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">{{ (selectedForm$ | async).name }}</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer mat-headline hand\" (click)=\"close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<ul class=\"list-unstyled hand\">\n  <li *ngFor=\"let src of (pics$ | async); let idx = index\">\n    <img [src]=\"src\" height=\"100\" width=\"100\" (click)=\"selectPhoto(idx)\">\n  </li>\n</ul>","import { Component, ViewContainerRef, Inject } from \"@angular/core\"\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { WebcamImage } from 'ngx-webcam'\n\nimport { PicDeleteComponent } from '../pic-delete/pic-delete.component'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\n\n@Component({\n  selector: 'app-pics',\n  templateUrl: './pics.component.html',\n  styleUrls: ['./pics.component.scss']\n})\nexport class PicsComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n  @Select(AuthState.selectedForm) selectedForm$: Observable<string>\n\n  public webcamImage: WebcamImage = null\n  \n  WIDTH = window.innerWidth\n  HEIGHT = window.innerHeight\n\n  idx\n  hidden = false\n  public isChangedBlock = {}\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public viewContainerRef: ViewContainerRef,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any,\n    public matBottomSheetRef: MatBottomSheetRef<PicsComponent>) { }\n\n  selectPhoto(idx: number) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = idx\n    this.dialog.open(PicDeleteComponent, dialogConfig).afterClosed().subscribe(_ => {\n      const pics = this.store.selectSnapshot(DeviceState.pics)\n      if (pics.length == 0) this.close()\n    })\n  }\n\n  close() {\n    this.matBottomSheetRef.dismiss()\n  }\n\n}\n","import { Component, OnInit } from '@angular/core'\n\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\nimport { Store } from '@ngxs/store'\nimport { SetPage } from '../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../environments/environment'\n\nimport { SignupComponent } from \"../admin/signup/signup.component\"\nimport { ContactComponent } from \"../contact/contact.component\"\n\n@Component({\n  selector: 'app-whyus',\n  templateUrl: './whyus.component.html',\n  styleUrls: ['./whyus.component.scss']\n})\nexport class WhyusComponent implements OnInit {\n\n  githubUrl = environment.githubUrl\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet,\n    public matBottomSheetRef: MatBottomSheetRef<WhyusComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  signup() {\n    this.bottomSheet.open(SignupComponent)\n  }\n\n  close() {\n    this.matBottomSheetRef.dismiss()\n  }\n\n  contact() {\n    this.bottomSheet.open(ContactComponent)\n  }\n\n}","<div class=\"text-color mat-h1\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div>Features</div>\n  <div>\n    <button mat-icon-button (click)=\"close()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n</div>\n<div fxLayout=\"column\" class=\"text-color\">\n  <h2>Design Studio</h2>\n  <div>\n    Convert paper-driven data to digital forms with design studio. Publish forms to your mobile app.\n  </div>\n  <h2>Memorialize Your Work</h2>\n  <div>\n    Auto-generate signed PDF documents with form data, pictures and history.\n  </div>\n  <h2>Real-time Notifications</h2>\n  <div>\n    Stay intouch with your team and sign-off on your work quickly.\n  </div>\n  <h2>Smart Forms</h2>\n  <div>\n    Update smart form content with notes and pictures over time until sign-off.\n  </div>\n  <h2>Flexible Deployment</h2>\n  <div>\n    Runs everywhere, deploy on our cloud or your provider or internally.\n  </div>\n  <br>\n  <div>\n    <a class=\"green\" href=\"https://github.com/formloco/formloco/wiki\" target=\"blank\" mat-stroked-button>\n      Developers\n    </a>\n  </div>\n</div>","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\nimport { environment } from '../../../../environments/environment'\n\nimport { AppService } from \"../../../service/app.service\"\n\nimport { SetChildPage, SetChildPageLabel, SetChildPageIcon } from '../../../state/auth/auth-state.actions'\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent {\n\n  designUrl = environment.designUrl\n\n  constructor(\n    private store: Store,\n    public appService: AppService) { }\n\n  selectMenu(child) {\n    if (child === 'dashboard') {\n      this.store.dispatch(new SetChildPageIcon('space_dashboard'))\n      this.store.dispatch(new SetChildPageLabel('Dashboard'))\n    }\n\n    if (child === 'data-forms') {\n      this.store.dispatch(new SetChildPageIcon('table_chart'))\n      this.store.dispatch(new SetChildPageLabel('Data'))\n    }\n      \n    if (child === 'list-forms') {\n      this.store.dispatch(new SetChildPageIcon('list_alt'))\n      this.store.dispatch(new SetChildPageLabel('Lists'))\n    }\n      \n    if (child === 'email') {\n      this.store.dispatch(new SetChildPageIcon('manage_accounts'))\n      this.store.dispatch(new SetChildPageLabel('Users'))\n    }\n      \n    if (child === 'forms') {\n      this.store.dispatch(new SetChildPageIcon('dynamic_form'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n    }\n\n    if (child === 'sdk') {\n      this.store.dispatch(new SetChildPageIcon('settings_applications'))\n      this.store.dispatch(new SetChildPageLabel('SDK'))\n    }\n      \n    this.store.dispatch(new SetChildPage(child))\n  }\n\n}\n","<!-- <div class=\"menu-padding\" fxLayout=\"row\" fxLayoutAlign=\"center center\"> -->\n<div class=\"footer\">\n  <mat-toolbar>\n    <button color=\"primary\" (click)=\"selectMenu('dashboard')\" mat-button>\n      <mat-icon class=\"material-icons-outlined\">space_dashboard</mat-icon>\n    </button>\n    <!-- <button color=\"primary\" (click)=\"selectMenu('data-forms')\" mat-button>\n      <mat-icon class=\"material-icons-outlined\">table_chart</mat-icon>\n    </button> -->\n    <button color=\"primary\" (click)=\"selectMenu('list-forms')\" mat-button>\n      <mat-icon class=\"material-icons-outlined\">list_alt</mat-icon>\n    </button>\n    <button color=\"primary\" (click)=\"selectMenu('email')\" mat-button>\n      <mat-icon class=\"material-icons-outlined\">manage_accounts</mat-icon>\n    </button>\n    <button color=\"primary\" (click)=\"selectMenu('forms')\" mat-button>\n      <mat-icon class=\"material-icons-outlined\">dynamic_form</mat-icon>\n    </button>\n    <button color=\"primary\" (click)=\"selectMenu('sdk')\" mat-button>\n      SDK\n    </button>\n    <span class=\"toolbar-spacer\"></span>\n    <a mat-stroked-button color=\"accent\" href=\"{{designUrl}}\" target=\"_blank\">\n      <mat-icon>design_services</mat-icon>\n    </a>\n  </mat-toolbar>\n</div>","export class SetIsHeaderValid {\n  static type = '[VehicleInspection] SetHeader'\n  constructor(public isHeaderValid: boolean) {}\n}\n\nexport class SetSelectedComments {\n  static type = '[VehicleInspection] SetSelectedComments'\n  constructor(public selectedComments: []) {}\n}\n\n","import { Component } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\n\nimport { CommentState } from '../../../comment/state/comment.state'\nimport { ResetTypeComments } from '../../../comment/state/comment.actions'\n\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet'\n\n@Component({\n  selector: 'app-bottom-sheet-worksite-safety-inspection',\n  templateUrl: './bottom-sheet-worksite-safety-inspection.component.html',\n  styleUrls: ['./bottom-sheet-worksite-safety-inspection.component.scss']\n})\nexport class BottomSheetWorksiteSafetyInspectionComponent {\n\n  constructor(private store: Store, private bottomSheetRef: MatBottomSheetRef<BottomSheetWorksiteSafetyInspectionComponent>) { }\n\n  openLink(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss()\n    event.preventDefault()\n  }\n\n  close() {\n    this.bottomSheetRef.dismiss()\n  }\n\n  deleteComments() {\n    this.store.dispatch(new ResetTypeComments(this.store.selectSnapshot(CommentState.commentType)))\n    this.close()\n  }\n\n}\n","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">Unsaved Comments!</div>\n  <div fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"close()\">\n    <mat-icon class=\"hand\">close</mat-icon>\n  </div>\n</div>\n<br>\n<p style=\"text-align:center\"><b>Should you decide to continue your comments will be deleted.</b></p>\n<br>\n<div mat-dialog-actions fxLayoutAlign=\"center\" fxLayout=\"row\" fxLayoutGap=\"2rem\">\n  <button (click)=\"deleteComments()\" mat-raised-button color=\"warn\">\n    Delete\n  </button>\n  <button mat-stroked-button (click)=\"close()\">\n    Cancel\n  </button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-textarea-run',\n  templateUrl: './textarea-run.component.html',\n  styleUrls: ['./textarea-run.component.scss']\n})\nexport class TextareaRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    if (this.appService.detailArray[this.index].required)\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(null, Validators.required));\n    else\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(''));\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding\">\n  <mat-form-field appearance=\"{{appService.detailArray[index].appearance}}\" fxFlex> \n    <mat-label>{{appService.detailArray[index].label}}</mat-label>\n    <textarea matInput [type]=\"appService.detailArray[index].types\"\n              formControlName=\"{{appService.detailArray[index].formControlName}}\"\n              [placeholder]=\"appService.detailArray[index].placeholder\"\n              [required]=\"appService.detailArray[index].required\">\n    </textarea>\n    <mat-error>\n      {{appService.detailArray[index].error}}\n    </mat-error>\n  </mat-form-field>\n</div>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { FlexLayoutModule } from '@angular/flex-layout'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatAutocompleteModule } from '@angular/material/autocomplete'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatNativeDateModule } from '@angular/material/core' \nimport { MatButtonModule } from '@angular/material/button'\nimport { MatChipsModule } from '@angular/material/chips'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatMenuModule } from '@angular/material/menu'\nimport { MatPaginatorModule } from '@angular/material/paginator'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatSortModule } from '@angular/material/sort'\nimport { MatTableModule } from '@angular/material/table'\nimport { MatStepperModule } from '@angular/material/stepper' \nimport { MatRadioModule } from '@angular/material/radio'\nimport { OverlayModule } from '@angular/cdk/overlay'\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\nimport { MatExpansionModule } from '@angular/material/expansion'\nimport { MatListModule } from '@angular/material/list'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { ScrollingModule } from '@angular/cdk/scrolling'\nimport { PortalModule } from '@angular/cdk/portal'\nimport { MatSliderModule } from '@angular/material/slider'\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet'\nimport { MatBadgeModule } from '@angular/material/badge'\nimport { MatTabsModule } from '@angular/material/tabs'\n \n@NgModule({\n  exports:[\n    FormsModule,\n    MatSortModule,\n    MatIconModule,\n    MatMenuModule, \n    MatTableModule, \n    MatInputModule,\n    MatChipsModule,\n    MatButtonModule, \n    MatSelectModule,\n    FlexLayoutModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n    ReactiveFormsModule, \n    MatAutocompleteModule,\n    BrowserAnimationsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatStepperModule,\n    MatRadioModule,\n    OverlayModule,\n    MatSlideToggleModule,\n    MatExpansionModule,\n    MatListModule,\n    MatCardModule,\n    MatToolbarModule,\n    ScrollingModule,\n    PortalModule,\n    MatSliderModule,\n    MatGridListModule,\n    MatBottomSheetModule,\n    MatBadgeModule,\n    MatTabsModule\n  ],\n  providers: []\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { EmailService } from \"../../../service/email.service\"\nimport { ErrorService } from \"../../../service/error.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { environment } from '../../../../environments/environment'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage, SetChildPageLabel, SetTenant, SetIsSignIn, SetChildPage, SetChildPageIcon } from '../../../state/auth/auth-state.actions'\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  @Select(DeviceState.background) background$: Observable<string>\n\n  tenant\n  logo = environment.logo\n  signinForm: FormGroup\n\n  redirectForgotPasswordUrl = environment.redirectForgotPasswordUrl\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    public appService: AppService,\n    private authService: AuthService,\n    private errorService: ErrorService,\n    private emailService: EmailService,\n    private idbCrudService: IdbCrudService,\n    private successService: SuccessService) {\n    this.signinForm = this.fb.group({\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.tenant = this.store.selectSnapshot(AuthState.tenant)\n  }\n\n  signin() {\n    let obj = {\n      email: this.signinForm.controls['email'].value,\n      password: this.signinForm.controls['password'].value\n    }\n    this.authService.signinEmail(obj).subscribe((user: any) => {\n      this.store.dispatch(new SetTenant({ tenant_id: user.tenant_id, email: user.email }))\n\n      const obj = {\n        user: {\n          isDarkMode: true,\n          email: user.email,\n          tenant_id: user.tenant_id\n        }\n      }\n      this.idbCrudService.clear('prefs')\n      this.idbCrudService.put('prefs', obj)\n\n      this.authService.register(this.signinForm.value).subscribe(_ => {\n        this.store.dispatch(new SetPage('admin'))\n        this.store.dispatch(new SetChildPage('forms'))\n        this.store.dispatch(new SetChildPageLabel('Forms'))\n        this.store.dispatch(new SetChildPageIcon('dynamic_form'))\n        this.store.dispatch(new SetIsSignIn(true))\n        this.appService.initializeAdminNotifications()\n\n      })\n    })\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('home'))\n  }\n\n  getEmail() {\n    this.store.dispatch(new SetPage('send-password'))\n  }\n\n  forgotPasswordEmail() {\n    let obj = {\n      email: this.tenant.email,\n      url: this.redirectForgotPasswordUrl\n    }\n    if (obj.email !== null)\n      this.emailService.forgotPassword(obj).subscribe(() => {\n        this.successService.popSnackbar('Email Sent.')\n      })\n    else this.errorService.popSnackbar('Please Enter a Valid Email.')\n  }\n\n}\n","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <mat-toolbar>\n    <mat-icon class=\"material-icons-outlined text-color\">admin_panel_settings</mat-icon>&nbsp;<span class=\"text-color\">Admin</span> \n    <span class=\"toolbar-spacer\"></span>\n    <button (click)=close() mat-icon-button>\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n  <br>\n  <form [formGroup]=\"signinForm\">\n    <div fxLayout=\"column\" class=\"padding20 text-color\">\n      <div class=\"text-color text-center\">\n        <div><img src=\"{{logo}}\"></div>\n      </div>\n      <br>\n      <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n        <mat-label>Company Email</mat-label>\n        <input matInput placeholder=\"Company Email\" formControlName=\"email\" type=\"text\" required>\n        <mat-error>\n          Proper email is required!\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" fxFlex>\n        <mat-label>Password</mat-label>\n        <input matInput placeholder=\"Enter Password\" formControlName=\"password\" type=\"password\" required>\n        <mat-error>\n          Password is required!\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div fxLayoutAlign=\"center\" fxLayoutGap=\"20px\">\n      <button (click)=close() mat-stroked-button color=\"primary\">\n        CANCEL\n      </button>\n      <button (click)=signin() mat-raised-button color=\"primary\" [disabled]=\"!signinForm.valid\">\n        OK\n      </button>\n    </div>\n  </form>\n  <br>\n  <div fxLayoutAlign=\"center\" class=\"text-color\">\n    <h3>Forgot Password?</h3>\n  </div>\n  <div class=\"padding20\">\n    <button (click)=\"forgotPasswordEmail\" mat-stroked-button color=\"primary\" fxFlex>Email Password Reset</button>\n  </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-barcode-run',\n  templateUrl: './barcode-run.component.html',\n  styleUrls: ['./barcode-run.component.scss']\n})\nexport class BarcodeRunComponent implements OnInit {\n\n  @Input() index;\n\n  value;\n\n  constructor(public appService: AppService) { }\n\n  ngOnInit(): void {}\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <ngx-barcode6 [bc-format]=\"'MSI'\" [bc-value]=\"appService.detailArray[index].value\" [bc-display-value]=\"true\">\n  </ngx-barcode6>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor, HttpRequest, HttpResponse, HttpHandler,\n  HttpEvent, HttpErrorResponse\n}\n  from '@angular/common/http';\n\nimport { AppService } from '../service/app.service';  \nimport { ErrorService } from '../service/error.service';\nimport { SuccessService } from '../service/success.service';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class HttpConfig implements HttpInterceptor {\n\n  constructor(\n    public appService: AppService,\n    public errorService: ErrorService,\n    public successService: SuccessService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const token = localStorage.getItem('formToken')\n\n    if (token)\n      request = request.clone(\n        { headers: request.headers.set('x-access-token', token) }\n      );\n\n    if (!request.headers.has('Content-Type'))\n      request = request.clone(\n        { headers: request.headers.set('Content-Type', 'application/json') }\n      );\n\n    return next.handle(request).pipe(\n      map((event: HttpEvent<any>) => {\n        return event;\n      }),\n      catchError((errorResponse: HttpErrorResponse) => {\n        console.log(errorResponse)\n        if (errorResponse.status == 401) this.appService.refreshToken()\n        else if (errorResponse.status == 403) this.appService.refreshToken()\n        else {\n          console.log(errorResponse.error)\n          this.errorService.popInterceeptorSnackbar();\n          if (errorResponse.error.type == 'timeout') window.location.reload()\n          return throwError(errorResponse);\n        }\n        \n      })\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as DeviceActions from './device-state.actions'\nimport { DeviceStateModel } from './device-state.model'\n\n@Injectable()\n@State<DeviceStateModel>({\n  name: 'device',\n  defaults: {\n    background: '#3b3b3b',\n    pics: [],\n    voice: [],\n    transcription: ''\n  }\n})\n\nexport class DeviceState {\n\n  @Selector()\n  static lat(state: DeviceStateModel): number {\n    return state.lat\n  }\n\n  @Selector()\n  static long(state: DeviceStateModel): number {\n    return state.long\n  }\n\n  @Selector()\n  static background(state: DeviceStateModel): string {\n    return state.background\n  }\n\n  @Selector()\n  static screenSize(state: DeviceStateModel): string {\n    return state.screenSize\n  }\n\n  @Selector()\n  static screenWidth(state: DeviceStateModel): string {\n    return state.screenWidth\n  }\n\n  @Selector()\n  static isIOS(state: DeviceStateModel): boolean {\n    return state.isIOS\n  }\n\n  @Selector()\n  static isSafari(state: DeviceStateModel): boolean {\n    return state.isSafari\n  }\n\n  @Selector()\n  static isDarkMode(state: DeviceStateModel): boolean {\n    return state.isDarkMode\n  }\n\n  @Selector()\n  static pics(state: DeviceStateModel): [] {\n    return state.pics\n  }\n\n  @Selector()\n  static voice?(state: DeviceStateModel): any[] {\n    return state.voice\n  }\n\n  @Selector()\n  static transcription?(state: DeviceStateModel): string {\n    return state.transcription\n  }\n\n  @Selector()\n  static isOnline?(state: DeviceStateModel): boolean {\n    return state.isOnline\n  }\n\n  @Action(DeviceActions.SetLat)\n  onSetLat(ctx: StateContext<DeviceStateModel>, { lat }: DeviceActions.SetLat) {\n    ctx.patchState({\n      lat: lat\n    })\n  }\n\n  @Action(DeviceActions.SetLong)\n  onSetLong(ctx: StateContext<DeviceStateModel>, { long }: DeviceActions.SetLong) {\n    ctx.patchState({\n      long: long\n    });\n  }\n\n  @Action(DeviceActions.SetBackground)\n  onSetBackGround(ctx: StateContext<DeviceStateModel>, { background }: DeviceActions.SetBackground) {\n    ctx.patchState({\n      background: background\n    });\n  }\n\n  @Action(DeviceActions.SetScreenSize)\n  onSetScreenSize(ctx: StateContext<DeviceStateModel>, { screenSize }: DeviceActions.SetScreenSize) {\n    ctx.patchState({\n      screenSize: screenSize\n    });\n  }\n\n  @Action(DeviceActions.SetScreenWidth)\n  onSetScreenWidth(ctx: StateContext<DeviceStateModel>, { screenWidth }: DeviceActions.SetScreenWidth) {\n    ctx.patchState({\n      screenWidth: screenWidth\n    });\n  }\n\n  @Action(DeviceActions.SetIsIOS)\n  onSetIsIOS(ctx: StateContext<DeviceStateModel>, { isIOS }: DeviceActions.SetIsIOS) {\n    ctx.patchState({\n      isIOS: isIOS\n    });\n  }\n\n  @Action(DeviceActions.SetIsSafari)\n  onSetIsSafari(ctx: StateContext<DeviceStateModel>, { isSafari }: DeviceActions.SetIsSafari) {\n    ctx.patchState({\n      isSafari: isSafari\n    });\n  }\n\n  @Action(DeviceActions.SetPics)\n  onSetPics(ctx: StateContext<DeviceStateModel>, { pics }: DeviceActions.SetPics) {\n    ctx.patchState({\n      pics: pics\n    });\n  }\n\n  @Action(DeviceActions.SetIsDarkMode)\n  onSetIsDarkMode(ctx: StateContext<DeviceStateModel>, { isDarkMode }: DeviceActions.SetIsDarkMode) {\n    ctx.patchState({\n      isDarkMode: isDarkMode\n    });\n  }\n\n  @Action(DeviceActions.SetVoice)\n  onSetVoice(ctx: StateContext<DeviceStateModel>, { voice }: DeviceActions.SetVoice) {\n    ctx.patchState({\n      voice: voice\n    });\n  }\n\n  @Action(DeviceActions.SetTranscription)\n  onSetTanscription(ctx: StateContext<DeviceStateModel>, { transcription }: DeviceActions.SetTranscription) {\n    ctx.patchState({\n      transcription: transcription\n    });\n  }\n\n  @Action(DeviceActions.SetIsOnline)\n  onSetIsOnline(ctx: StateContext<DeviceStateModel>, { isOnline }: DeviceActions.SetIsOnline) {\n    ctx.patchState({\n      isOnline: isOnline\n    });\n  }\n\n\n  \n  \n}\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"hotWorkForm\">\n    <div class=\"text-color radio-center\">{{label.DoesTheProjectInvolveHotWork}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DoesTheProjectInvolveHotWork\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false); clearFields()\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isHotwork$ | async)\">\n      <div class=\"text-color radio-center\">{{label.HotWorkPermitIssued}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"HotWorkPermitIssued\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.HotWorkPermitIssued,'HotWorkPermitIssued')\" value=\"no\">No\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireHazardsIdentifiedControls}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireHazardsIdentifiedControls\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireHazardsIdentifiedControls,'FireHazardsIdentifiedControls')\"\n            value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.FireSafetyWatchAvailable}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FireSafetyWatchAvailable\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.FireSafetyWatchAvailable,'FireSafetyWatchAvailable')\" value=\"no\">\n            No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n  </form>\n</div>","import { Component, Input, OnInit } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsHotwork } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { HotWorkLabels } from '../state/worksite-safety-inspection-state.model'\n\n@Component({\n  selector: 'app-worksite-safety-hot-work',\n  templateUrl: './worksite-safety-hot-work.component.html',\n  styleUrls: ['./worksite-safety-hot-work.component.scss']\n})\nexport class WorksiteSafetyHotWorkComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isHotwork) isHotwork$: Observable<string>\n\n  @Input() hotWorkForm\n\n  label = HotWorkLabels\n  \n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit() {\n    this.store.dispatch(new SetTypeFilter('isFireExtinguisher'))\n    // this.hotWorkForm.controls['DoesTheProjectInvolveHotWork'].patchValue('yes')\n  }\n\n  toggle(toggle) {\n    this.store.dispatch(new SetIsHotwork(toggle))\n  }\n\n  clearFields() {\n    this.hotWorkForm.controls['HotWorkPermitIssued'].patchValue('')\n    this.hotWorkForm.controls['FireHazardsIdentifiedControls'].patchValue('')\n    this.hotWorkForm.controls['FireSafetyWatchAvailable'].patchValue('')\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'Fire Extinguisher', label: label, field: field, type: 'isFireExtinguisher' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n\n","import { Component, Input } from '@angular/core'\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog'\n\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentComponent } from '../../../comment/comment.component'\n\n// import { DetailCommentsComponent } from '../detail-comments/detail-comments.component'\n\nimport { Store } from '@ngxs/store'\nimport { VehicleInspectionState } from '../state/vehicle-inspection.state'\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent {\n\n  @Input() detailForm\n\n  yAxis = 0\n  xAxis = 0\n\n  isHistory = false\n  fieldName\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService) { }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'Vehicle Inspection Details', label: label, field: field, type: 'isVehicleInspection' }\n    this.dialog.open(CommentComponent, dialogConfig).afterClosed().subscribe((isSave) => {\n      this.detailForm.controls[field].patchValue(isSave)\n    })\n  }\n\n  closeOverlay() {\n    this.isHistory = false\n  }\n\n}\n","<form class=\"header-form\" [formGroup]=\"detailForm\">\n  <div fxLayout=\"column\" color=\"primary\" fxLayoutAlign=\"center start\">\n    <label>The items on this inspection sheet should be checked monthly. A form should be filled out for each vehicle driven.\n      <br>\n      <br> If item requires attention check it off and provide comments, they will be added to the discrepancies list below.</label>\n    <br>\n    <mat-checkbox (click)=\"openComment('Ignition Key', 'IgnitionKey')\" color=\"primary\" class=\"text-color\"\n      formControlName=\"IgnitionKey\">Ignition Key</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Oil Level', 'OilLevel')\" color=\"primary\" class=\"text-color middle-padding\"\n      formControlName=\"OilLevel\">Oil Level</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Coolant Level', 'CoolantLevel')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"CoolantLevel\">Coolant Level</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Washer Fluid Level', 'WasherFluidLevel')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"WasherFluidLevel\">Washer Fluid Level</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Power Steering Fluid Level', 'PowerSteeringFluidLevel')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"PowerSteeringFluidLevel\">Power Steering Fluid Level</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check for Air Gauge', 'AirGauge')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"AirGauge\">Check for Air Gauge</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Horn', 'Horn')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"Horn\">Check Horn</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Heater/Defroster', 'HeaterDefroster')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"HeaterDefroster\">Check Heater/Defroster</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Windshield Wipers/Washers', 'WindshieldWipersWashers')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"WindshieldWipersWashers\">Check Windshield Wipers/Washers</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check all signal lights', 'AllSignalLights')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"AllSignalLights\">Check all signal lights</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Interior lights', 'InteriorLights')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"InteriorLights\">Check Interior lights</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Mirrors for Damage and Adjustments', 'MirrorsDamageAdjustments')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"MirrorsDamageAdjustments\">Check Mirrors for Damage and Adjustments</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Windshield Clear Visibility, No Cracks', 'WindshieldVisibility')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"WindshieldVisibility\">Windshield Clear Visibility, No Cracks</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Visual Inspection for Exterior Damage/Leaks', 'VisualInspectionExterior')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"VisualInspectionExterior\">Visual Inspection for Exterior Damage/Leaks\n      <br> Under Vehicle</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check inside Engine compartment for Leaks/Loose','InsideEngineCompartment')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"InsideEngineCompartment\">Check inside Engine compartment for Leaks/Loose\n      <br> Items</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Start Engine & check Transmission Fluid Level', 'TransmissionFluidLevel')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"TransmissionFluidLevel\">Start Engine & check Transmission Fluid Level\n      <br> (Fluid should be hot)</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Highlight/Signal lights/4way flashes', 'HighlightSignal4wayTailBackup')\"\n      color=\"primary\" class=\"text-color bottom-padding\" formControlName=\"HighlightSignal4wayTailBackup\">Check Highlight/Signal lights/4way flashes\n      <br>/Tail lights/Backup lights</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check fuel level (Should Not be Less Than ½ Tank)', 'FuelLevel')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"FuelLevel\">Check fuel level (Should Not be Less Than ½ Tank)</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check First Aid Kit Available and full', 'FirstAidKit')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"FirstAidKit\">Check First Aid Kit Available and full\n      <br> (Check expiry dates on contents)</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Fire Extinguisher is available', 'FireExtinguisher')\" color=\"primary\"\n      class=\"text-color bottom-padding\" formControlName=\"FireExtinguisher\">Check Fire Extinguisher is available:\n      <br> Gauge showing charged, proper seal,\n      <br> pin and inspection</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Survival kit available: candles, emergency blanket', 'SurvivalKit')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"SurvivalKit\">Survival kit available: candles, emergency blanket,\n      <br> tow rope, booster cables, light sticks, water</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Fuel Key, check used', 'FuelKey')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"FuelKey\">Fuel Key, check used</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Radio (Two-way check), if required', 'TwoWayRadio')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"TwoWayRadio\">Check Radio (Two-way check), if required</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Tires for wear and pressure', 'Tires')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"Tires\">Check Tires for wear and pressure\n      <br> (as per manufacturer)</mat-checkbox>\n    <mat-checkbox (click)=\"openComment('Check Spill Kit, if required', 'SpillKit')\" color=\"primary\" class=\"text-color bottom-padding\"\n      formControlName=\"SpillKit\">Check Spill Kit, if required</mat-checkbox>\n  </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-textbox-run',\n  templateUrl: './textbox-run.component.html',\n  styleUrls: ['./textbox-run.component.scss']\n})\nexport class TextboxRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    if (this.appService.detailArray[this.index].required)\n      this.runForm.addControl(this.appService.detailArray[this.index]\n          .formControlName, new FormControl(null, Validators.required));\n    else\n      this.runForm.addControl(this.appService.detailArray[this.index].formControlName, new FormControl(''));\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding text-color\">\n  <mat-form-field appearance=\"{{appService.detailArray[index].appearance}}\" fxFlex> \n    <mat-label>{{appService.detailArray[index].label}}</mat-label>\n    <input matInput [type]=\"appService.detailArray[index].types\"\n           formControlName=\"{{appService.detailArray[index].formControlName}}\"\n           [placeholder]=\"appService.detailArray[index].placeholder\" \n           [required]=\"appService.detailArray[index].required\">\n    <mat-error>\n      {{appService.detailArray[index].error}}\n    </mat-error>\n  </mat-form-field>\n</div>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\n\nimport { JobsiteFormLabels } from '../state/worksite-safety-inspection-state.model'\n\n\n@Component({\n  selector: 'app-worksite-safety-jobsite',\n  templateUrl: './worksite-safety-jobsite.component.html',\n  styleUrls: ['./worksite-safety-jobsite.component.scss'],\n})\nexport class WorksiteSafetyJobsiteComponent implements OnInit {\n\n  @Input() jobsiteForm\n\n  label = JobsiteFormLabels\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = {title: 'Worksite Safety Hazard', label: label, field: field, type: 'isWorksiteSafetyJobsite'}\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"jobsiteForm\">\n    <div class=\"text-color radio-center\">{{label.WorkAreaClearlyIdentified}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"WorkAreaClearlyIdentified\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.WorkAreaClearlyIdentified,'WorkAreaClearlyIdentified')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns,'SiteIsFreeOfTripHazardsAndOtherHousekeepingConcerns')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.AllOpenExcavationsAreClearlyMarked}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"AllOpenExcavationsAreClearlyMarked\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.AllOpenExcavationsAreClearlyMarked,'AllOpenExcavationsAreClearlyMarked')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.PublicAccessToTheSiteControlled}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PublicAccessToTheSiteControlled\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.PublicAccessToTheSiteControlled,'PublicAccessToTheSiteControlled')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    \n    <div class=\"text-color radio-center\">{{label.PrimeContractorClearlyIdentifiedWithSignage}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PrimeContractorClearlyIdentifiedWithSignage\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.PrimeContractorClearlyIdentifiedWithSignage,'PrimeContractorClearlyIdentifiedWithSignage')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.IsThereEmergencyEquipmentOnSite}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"IsThereEmergencyEquipmentOnSite\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.IsThereEmergencyEquipmentOnSite,'IsThereEmergencyEquipmentOnSite')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.FirstAidKitAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FirstAidKitAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.FirstAidKitAvailable,'FirstAidKitAvailable')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.BlanketsAndStretcherAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"BlanketsAndStretcherAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.BlanketsAndStretcherAvailable,'BlanketsAndStretcherAvailable')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.EyeWashBottleAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EyeWashBottleAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.EyeWashBottleAvailable,'EyeWashBottleAvailable')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.SpillKitAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SpillKitAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SpillKitAvailable,'SpillKitAvailable')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.H2SPersonalGasMonitorsOnsiteHaveBeenBumped}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"H2SPersonalGasMonitorsOnsiteHaveBeenBumped\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.H2SPersonalGasMonitorsOnsiteHaveBeenBumped,'H2SPersonalGasMonitorsOnsiteHaveBeenBumped')\" value=\"no\">No</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </form>\n</div>","<div *ngIf=\"appService.detailArray[index]\" \n     class=\"{{appService.detailArray[index].fontValue}} text-color\">\n  {{ appService.detailArray[index].label }}\n</div>\n","import { Component, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-label-run',\n  templateUrl: './label-run.component.html',\n  styleUrls: ['./label-run.component.scss']\n})\nexport class LabelRunComponent {\n\n  @Input() index;\n\n  constructor(public appService: AppService) { }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from \"../../../service/app.service\";\n\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-slider-run',\n  templateUrl: './slider-run.component.html',\n  styleUrls: ['./slider-run.component.scss']\n})\nexport class SliderRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n  \n  constructor(\n    public appService: AppService) { }\n\n  ngOnInit() {\n    this.runForm.addControl(this.appService.detailArray[this.index]\n        .formControlName, new FormControl(''));\n  }\n\n}\n","<div [formGroup]=\"runForm\" class=\"control-padding\" fxLayout=\"column\" fxLayoutGap=\"10px\">\n  <div fxLayout=\"row\">\n    <label>{{appService.detailArray[index].label}}</label>\n  </div>\n  <div class=\"slider-margin\">\n    <mat-slider formControlName=\"{{appService.detailArray[index].formControlName}}\" \n      fxFlex\n      [max]=\"appService.detailArray[index].max\"\n      [min]=\"appService.detailArray[index].min\"\n      [step]= \"appService.detailArray[index].step\"\n      [thumbLabel]=\"appService.detailArray[index].label\"\n      [tickInterval]=\"appService.detailArray[index].interval\"\n      [value]=\"appService.detailArray[index].value\"\n      [vertical]=\"appService.detailArray[index].vertical\">\n    </mat-slider>\n  </div>\n</div>\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"dUtr\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"Q8AI\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"hgI1\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"CfoV\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"Nt02\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"Q2Bp\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"0Pbj\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"ydQj\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"4fMi\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"czK9\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"/CAe\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"WgF3\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"uQcF\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"wHD8\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"2lz6\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"ercB\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"MGMP\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"9bur\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"cABk\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"kyFE\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"TvZU\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"vnES\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"qCuA\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"0tOe\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"h11V\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"XGij\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"nYbb\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"smMY\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"STjf\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"k5eQ\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"OR5t\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"fSgp\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"lfGF\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"5xYT\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"nI0H\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"NAQR\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"knkW\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"TpdJ\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"ISmu\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"U7LX\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"L3sA\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"IUOf\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"8Mb5\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"kLfG\";\nmodule.exports = webpackAsyncContext;","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div fxLayoutAlign=\"center\">\n    <div [fxFlex]=\"screenWidth$ | async\">\n      <app-pin (changeTheme)=changeTheme($event) *ngIf=\"!(page$ | async)\"></app-pin>\n      <app-notification *ngIf=\"(page$ | async) === 'notification'\"></app-notification>\n      <app-admin *ngIf=\"(page$ | async) === 'admin'\"></app-admin>\n      <app-form *ngIf=\"(page$ | async) === 'form-admin'\"></app-form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs'\n\nimport { AppService } from \"../../service/app.service\"\nimport { IdbCrudService } from \"../../service-idb/idb-crud.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\n\nimport { SetPage, SetIsSignIn, SetChildPageLabel, SetChildPage } from '../../state/auth/auth-state.actions'\n\n\nimport { environment } from '../../../environments/environment'\n\n@Component({\n  selector: 'app-layout-admin',\n  templateUrl: './layout-admin.component.html',\n  styleUrls: ['./layout-admin.component.scss']\n})\nexport class LayoutAdminComponent implements OnInit {\n\n  @Select(AuthState.page) page$: Observable<string>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(DeviceState.screenWidth) screenWidth$: Observable<string>\n\n  kioske = environment.kioske\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private idbCrudService: IdbCrudService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.kioske) {\n      this.store.dispatch(new SetPage('admin'))\n      this.store.dispatch(new SetChildPage('forms'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n      this.store.dispatch(new SetIsSignIn(true))\n      this.appService.initializeAdminNotifications()\n    }\n  }\n\n  changeTheme() {\n    let darkClassName\n    let isDarkMode = this.store.selectSnapshot(DeviceState.isDarkMode)\n\n    if (isDarkMode) {\n      darkClassName = ''\n      this.setUser(darkClassName, false)\n    }\n    else {\n      darkClassName = 'darkMode'\n      this.setUser(darkClassName, true)\n    }\n    location.reload()\n  }\n\n  setUser(darkClassName, darkModeToggle) {\n    let user = this.store.selectSnapshot(AuthState.userIdb)\n    user.isDarkMode = darkModeToggle\n    this.idbCrudService.put('prefs', { id: 1, user: user })\n    this.appService.setMode(darkClassName)\n  }\n\n}\n","import { CorrectiveAction } from './corrective-action.model'\n\nexport class SetCorrectiveActions {\n  static type = '[CorrectiveActionStateModel] SetCorrectiveActions'\n  constructor(public correctiveActions: CorrectiveAction[]) {}\n}\n\nexport class SetCorrectiveAction {\n  static type = '[CorrectiveActionStateModel] SetCorrectiveAction'\n  constructor(public correctiveAction: CorrectiveAction) {}\n}\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\nimport { DeviceState } from '../../../../state/device/device.state'\n\nimport { SetSelectedVoiceFieldLabel } from '../../../../state/auth/auth-state.actions'\nimport { SetTranscription } from '../../../../state/device/device-state.actions'\n\nimport { VoiceComponent } from '../../../voice/voice.component'\nimport { AppService } from \"../../../../service/app.service\"\n\n@Component({\n  selector: 'app-corrective-actions',\n  templateUrl: './corrective-actions.component.html',\n  styleUrls: ['./corrective-actions.component.scss']\n})\nexport class CorrectiveActionsComponent {\n\n  @Input() correctiveActionForm\n  \n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService) { }\n\n  ngOnInit(): void {\n  }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.correctiveActionForm, formField, title)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"correctiveActionForm\">\n    <ion-label position=\"stacked\">Date for corrective actions to be completed</ion-label>\n    <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"DateCorrectiveActionToBeCompleted\">\n    </ion-datetime>\n    <mat-divider></mat-divider>\n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Corrective Action Required</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('CorrectiveActionRequired','Hazard Identification & Control Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"CorrectiveActionRequired\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Person(s) responsible for corrective actions</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('PersonResponsibleCorrectiveAction','Person(s) Responsible Corrective Actions')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"PersonResponsibleCorrectiveAction\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n      <ion-label position=\"stacked\">Date corrective actions were complete</ion-label>\n    <ion-datetime class=\"picker-color\" displayFormat=\"MMM DD, YYYY HH:mm\" formControlName=\"DateCorrectiveActionCompleted\">\n    </ion-datetime>\n    <mat-divider></mat-divider>\n    </div>\n    <mat-form-field>\n      <mat-label>Signature of person responsible</mat-label>\n      <input matInput placeholder=\"Person Responsible\" formControlName=\"PersonResponsible\" type=\"text\" required>\n    </mat-form-field>\n  </form>\n</div>\n\n\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as VehicleInspectionActions from './vehicle-inspection-state.actions'\nimport { VehicleInspectionStateModel } from './vehicle-inspection-state.model'\n\n@Injectable()\n@State<VehicleInspectionStateModel>({\n  name: 'vehicleinspection',\n  defaults: {\n    isHeaderValid: false,\n    selectedComments: []\n  }\n})\n\nexport class VehicleInspectionState {\n\n  @Selector()\n  static isHeaderValid(state: VehicleInspectionStateModel): boolean {\n    return state.isHeaderValid\n  }\n\n  @Selector()\n  static selectedComments(state: VehicleInspectionStateModel): [] {\n    return state.selectedComments\n  }\n\n  @Action(VehicleInspectionActions.SetIsHeaderValid)\n  onSetIsHeader(ctx: StateContext<VehicleInspectionStateModel>, { isHeaderValid }: VehicleInspectionActions.SetIsHeaderValid) {\n    ctx.patchState({\n      isHeaderValid: isHeaderValid\n    });\n  }\n\n  @Action(VehicleInspectionActions.SetSelectedComments)\n  onSetSelectedComments(ctx: StateContext<VehicleInspectionStateModel>, { selectedComments }: VehicleInspectionActions.SetSelectedComments) {\n    ctx.patchState({\n      selectedComments: selectedComments\n    });\n  }\n\n}\n\n","import { Component, OnInit, Inject } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\"\nimport { FormControl } from '@angular/forms'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { ApiService } from \"../../../service/api.service\"\nimport { SuccessService } from \"../../../service/success.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-list-edit',\n  templateUrl: './list-edit.component.html',\n  styleUrls: ['./list-edit.component.scss']\n})\nexport class ListEditComponent implements OnInit {\n\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  id\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private apiService: ApiService,\n    private successService: SuccessService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<ListEditComponent>\n  ) { }\n\n  ngOnInit(): void {\n    const kioske = this.store.selectSnapshot(AuthState.kioske)\n    this.id = new FormControl({value: null, disabled: kioske})  \n    this.id.setValue(this.data.element.data)\n  }\n\n  update() {\n    let obj = {\n      id: this.data['element']['id'],\n      name: this.store.selectSnapshot(AuthState.lookupListName),\n      value: this.id.value\n    }\n    this.apiService.update(obj).subscribe((data:any) => {\n      this.appService.dataSource = data.rows\n      this.dialogRef.close()\n      this.successService.popSnackbar('Item updated')\n    })\n  }\n\n  delete() {\n    let obj = {\n      id: this.data['element']['id'],\n      name: this.store.selectSnapshot(AuthState.lookupListName)\n    }\n    this.apiService.delete(obj).subscribe((data:any) => {\n      this.appService.dataSource = data.rows\n      this.dialogRef.close()\n      this.successService.popSnackbar('Item deleted')\n    })\n  }\n\n}\n","<div fxLayoutAlign=\"end center\" class=\"icon-pointer\" (click)=\"dialogRef.close()\">\n  <mat-icon>close</mat-icon>\n</div>\n<div fxLayoutAlign=\"center center\">\n  <mat-form-field fxFlex>\n    <input matInput type=\"text\" [formControl]=\"id\">\n  </mat-form-field>\n</div>\n<div class=\"control-padding\" fxLayout=\"row\" fxLayoutGap=\"30px\" fxLayoutAlign=\"center\">\n  <div>\n    <button (click)=\"update()\" mat-stroked-button color=\"primary\" [disabled]=\"kioske$ | async\">Save</button>\n  </div>\n  <div>\n    <button (click)=\"delete()\" mat-stroked-button color=\"warn\" [disabled]=\"kioske$ | async\">Delete</button>\n  </div>\n</div>","<div class=\"mat-headline\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div fxLayoutAlign=\"start center\">Document Sign-off</div>\n  <div fxLayoutAlign=\"start center\" class=\"hand\" (click)=\"dialogRef.close()\">\n    <mat-icon>close</mat-icon>\n  </div>\n</div>\n<div mat-subheader>{{data.notification.form_name}}</div>\n<br>\n<div fxLayout=\"column\">\n  <div><b>Date:</b>&nbsp;&nbsp;{{data.form.data.header.Date | date: 'shortDate'}}</div>\n  <div><b>Worker:</b>&nbsp;&nbsp;{{data.form.data.header.Worker}}</div>\n  <div><b>Supervisor:</b>&nbsp;&nbsp;{{data.form.data.header.Supervisor}}</div>\n</div>\n<br>\n<mat-divider></mat-divider>\n<br><br>\n<div *ngIf=\"!kioske\" fxLayout=\"column\" class=\"hand\" fxLayoutAlign=\"space-around center\">\n  <mat-icon class=\"icon-169px-action\" (click)=\"signForm()\">fingerprint</mat-icon>\n  <div class=\"text-color bottom-padding\">\n    <mat-label>Press to Sign</mat-label>\n  </div>\n</div>\n\n<div *ngIf=\"kioske\" fxLayout=\"column\" class=\"hand\" fxLayoutAlign=\"space-around center\">\n  <mat-icon class=\"icon-169px text-color\" (click)=\"signForm()\">fingerprint</mat-icon>\n  <div class=\"text-color bottom-padding\">\n    <mat-label>Press to Sign</mat-label>\n  </div>\n</div>\n<div class=\"padding\" fxLayoutGap=\"20px\" class=\"footer\">\n  <button color=\"primary\" mat-mini-fab>\n    <mat-icon class=\"material-icons-outlined hand\" (click)=\"openPdf()\">picture_as_pdf</mat-icon>\n  </button>\n</div>","import { Component, Inject } from '@angular/core'\n\nimport { Observable } from 'rxjs'\n\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { AppService } from \"../../../service/app.service\"\nimport { ApiService } from '../../../service/api.service'\nimport { EmailService } from '../../../service/email.service'\n\nimport { Store, Select } from '@ngxs/store'\nimport { SetPage, SetChildPageLabel } from '../../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../../environments/environment'\n\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { DeviceState } from \"../../../state/device/device.state\"\n\nimport { NotificationState } from '../../../state/notification/notification.state'\n@Component({\n  selector: 'app-notification-action',\n  templateUrl: './notification-action.component.html',\n  styleUrls: ['./notification-action.component.scss']\n})\n\nexport class NotificationActionComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n\n  sendTo\n  picArray = []\n  kioske = environment.kioske\n  messageUrl = environment.messageUrl\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private snackBar: MatSnackBar,\n    private apiService: ApiService,\n    private emailService: EmailService,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<NotificationActionComponent>\n  ) { }\n\n  openPdf() {\n    this.apiService.getPDF(this.data.notification.pdf)\n  }\n\n  signForm() {\n    const user = this.store.selectSnapshot(AuthState.user)\n    const selectedForm: any = this.store.selectSnapshot(AuthState.selectedForm)\n    const notification = this.store.selectSnapshot(NotificationState.notification)\n\n    let obj = {\n      docID: selectedForm.id,\n      form_id: selectedForm.form_id,\n      notification: notification,\n      data_id: notification.data_id,\n      date: this.appService.now,\n      email: user.email,\n      name: user.name\n    }\n    this.apiService.signForm(obj).subscribe((res: any) => {\n      this.appService.initializeMyNotifications()\n      this.store.dispatch(new SetPage('home'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n      this.dialogRef.close()\n      this.snackBar.open(res.message, 'Success', {\n        duration: 3000,\n        verticalPosition: 'bottom'\n      })\n\n      const workers: any = this.store.selectSnapshot(AuthState.workers)\n      let worker = workers.find(worker => worker.name === this.data.form.data.header.Worker)\n\n      const subject = notification.form_name + ' signed by ' + user.name + ' ' + new Date()\n\n      const obj = {\n        tenant: this.store.selectSnapshot(AuthState.tenant),\n        toName: this.data.notification.supervisor_name,\n        messageID: this.data.notification.notificationID,\n        url: this.messageUrl,\n        subject: subject,\n        emailTo: worker.email,\n        emailFrom: user.email,\n      }\n      this.emailService.sendNotificationEmail(obj).subscribe((_) => { });\n    })\n\n  }\n\n}\n","import { Component, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { AppService } from \"../../../../service/app.service\"\nimport { CommentService } from \"../../../comment/service/comment.service\"\n\n@Component({\n  selector: 'app-safety-equipment',\n  templateUrl: './safety-equipment.component.html',\n  styleUrls: ['./safety-equipment.component.scss']\n})\nexport class SafetyEquipmentComponent {\n\n  @Input() safetyEquipmentForm\n\n  constructor(\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService) { }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.safetyEquipmentForm, formField, title)\n  }\n\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.safetyEquipmentForm)\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: 'Safety Equipment', label: label, field: field, type: 'isSpotCheckSafety' }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n  \n\n  openDiscrepancy(label, field, discrepancy) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = { title: \n      'Safety Equipment', \n      label, \n      field, \n      type: 'isSpotCheckSafety', \n      discrepancy }\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"safetyEquipmentForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Is the appropriate safety equipment available and being used</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyEquipmentAvailable\">\n        <mat-radio-button (click)=\"toggle('SafetyEquipmentAvailable')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Is the appropriate safety equipment available and being used','SafetyEquipmentAvailable', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Fire Fighting equipment (inspected, tagged, accessible, good condition)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FireFightingEquipment\">\n        <mat-radio-button (click)=\"toggle('FireFightingEquipment')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Fire Fighting equipment (inspected, tagged, accessible, good condition)','FireFightingEquipment', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Rotating Equiment Guards</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"RotatingEquimentGuards\">\n        <mat-radio-button (click)=\"toggle('RotatingEquimentGuards')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Rotating Equiment Guards','RotatingEquimentGuards', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">First Aid Kit</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FirstAidKit\">\n        <mat-radio-button (click)=\"toggle('FirstAidKit')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('First Aid Kit','FirstAidKit', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Fall Arrest equipment (Ladders, steps, harness, lanyards, etc.)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"FallArrestEquipment\">\n        <mat-radio-button (click)=\"toggle('FallArrestEquipment')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Fall Arrest equipment (Ladders, steps, harness, lanyards, etc.)','FallArrestEquipment', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Emergency Shut down and Alarm Systems (positive air shutoffs, backup alarms, etc.)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"EmergencySystems\">\n        <mat-radio-button (click)=\"toggle('EmergencySystems')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Emergency Shut down and Alarm Systems (positive air shutoffs, backup alarms, etc.)','EmergencySystems', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div class=\"text-color radio-center\">Other (Specify)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"Other\">\n        <mat-radio-button (click)=\"openComment('Other (Specify)','Other')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Other (Specify)','Other', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Safety Equipment Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('SafetyEquipmentComments','Safety Equipment Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"SafetyEquipmentComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n\n","import { Component, Input } from '@angular/core';\n\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\n\nimport { CommentComponent } from '../../../comment/comment.component';\nimport { AppService } from '../../../../service/app.service';\nimport { CommentService } from '../../../comment/service/comment.service';\n\n@Component({\n  selector: 'app-personal-protective-equipment',\n  templateUrl: './personal-protective-equipment.component.html',\n  styleUrls: ['./personal-protective-equipment.component.scss'],\n})\nexport class PersonalProtectiveEquipmentComponent {\n  @Input() personalEquipmentForm;\n\n  constructor(\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService\n  ) {}\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(\n      this.personalEquipmentForm,\n      formField,\n      title\n    );\n  }\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {\n      title: 'Personal Protective Equipment',\n      label: label,\n      field: field,\n      type: 'isSpotCheckSafety',\n    };\n    this.dialog.open(CommentComponent, dialogConfig);\n  }\n\n  openDiscrepancy(label, field, discrepancy) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {\n      title: 'Personal Protective Equipment',\n      label,\n      field,\n      type: 'isSpotCheckSafety',\n      discrepancy,\n    };\n    this.dialog.open(CommentComponent, dialogConfig);\n  }\n  toggle(field) {\n    this.commentService.bottomSheetComment(field, this.personalEquipmentForm);\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"personalEquipmentForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Is the appropriate PPE available and being used</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PPEAvailable\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Is the appropriate PPE available and being used','PPEAvailable', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Hard Hat</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HardHat\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Hard Hat','HardHat', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Safety Glasses</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyGlasses\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Safety Glasses','SafetyGlasses', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Footwear</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"Footwear\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Footwear','Footwear', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Protective clothing (FR coveralls, gloves, etc)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"ProtectiveClothing\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Protective clothing (FR coveralls, gloves, etc)','ProtectiveClothing', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Hearing protection</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"HearingProtection\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Hearing protection','HearingProtection', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div class=\"text-color radio-center\">Respiratory protection (Appropriate for the hazard)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"RespiratoryProtection\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Respiratory protection (Appropriate for the hazard)','RespiratoryProtection', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Personal gas monitor</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PersonalGasMonitor\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Personal gas monitor','PersonalGasMonitor', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Communication equipment</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"CommunicationEquipment\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Communication equipment','CommunicationEquipment', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Other equipment (please specify)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"OtherEquipment\">\n        <mat-radio-button (click)=\"openComment('Other equipment (please specify)','OtherEquipment')\" value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Other equipment (please specify)','OtherEquipment', true)\" value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Personal Equipment Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('PersonalEquipmentComments','Personal Protective Equipment Comments')\" mat-mini-fab color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"PersonalEquipmentComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core'\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { environment } from '../../../../environments/environment'\n\nimport { AppService } from \"../../../service/app.service\"\n\nimport { Store } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { SetPage, SetUserIdb, SetChildPageLabel } from '../../../state/auth/auth-state.actions'\nimport { SetIsDarkMode } from '../../../state/device/device-state.actions'\n\nimport { SignupBottomComponent } from \"../signup-bottom/signup-bottom.component\"\nimport { ContactComponent } from \"../../contact/contact.component\"\nimport { WhyusComponent } from \"../../whyus/whyus.component\"\n@Component({\n  selector: 'app-kioske',\n  templateUrl: './kioske.component.html',\n  styleUrls: ['./kioske.component.scss']\n})\nexport class KioskeComponent implements OnInit {\n\n  tenant\n  logo = environment.logo\n  version = environment.version\n  linkedinUrl = environment.linkedinUrl\n  githubUrl = environment.githubUrl\n  designUrl = environment.designUrl\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private bottomSheet: MatBottomSheet) { }\n\n  ngOnInit() {\n    this.tenant = this.store.selectSnapshot(AuthState.tenant)\n  }\n\n  testdrive() {\n    let obj = {\n      isDarkMode: true,\n      email: this.tenant.email\n    }\n   \n    this.store.dispatch(new SetPage('home'))\n    this.store.dispatch(new SetUserIdb(obj))\n    this.store.dispatch(new SetIsDarkMode(true))\n    this.store.dispatch(new SetChildPageLabel('Forms'))\n    this.appService.initializeUser()\n  }\n\n  contact() {\n    this.bottomSheet.open(ContactComponent)\n  }\n\n  signin() {\n    this.store.dispatch(new SetPage('identify'))\n  }\n\n  signup() {\n    this.bottomSheet.open(SignupBottomComponent)\n  }\n\n  pricing() {\n    this.store.dispatch(new SetPage('pricing'))\n  }\n\n  whyus() {\n    this.bottomSheet.open(WhyusComponent)\n    // this.store.dispatch(new SetPage('whyus'))\n  }\n\n}\n","<div class=\"header\">\n  <mat-toolbar>\n    <button (click)=\"whyus()\" mat-button color=\"primary\">\n      Features\n    </button>\n    <button (click)=\"pricing()\" mat-button color=\"primary\">\n      Pricing\n    </button>\n    <button (click)=\"contact()\" mat-button color=\"primary\">\n      Contact\n    </button>\n    <span class=\"toolbar-spacer\"></span>\n    <button (click)=\"signin()\" mat-stroked-button color=\"primary\">\n      Sign In\n    </button>\n  </mat-toolbar>\n</div>\n<div class=\"content\">\n  <form class=\"container-padding\">\n    <br>\n    <div fxLayout=\"column\">\n      <div class=\"text-color text-center\">\n        <div><img style=\"width:400px;\" src=\"{{logo}}\"></div>\n      </div>\n      <br>\n      <div class=\"hand\" fxLayoutAlign=\"center\">\n        <mat-icon class=\"icon-169px-action\" (click)=\"testdrive()\">fingerprint</mat-icon>\n      </div>\n      <div class=\"mat-headline text-color\" fxLayoutAlign=\"center\">Take a Test Drive</div>\n      <br>\n      <div class=\"hand\" fxLayoutAlign=\"center\">\n        <a href='{{designUrl}}'>\n          <mat-icon color=\"accent\" class=\"icon-169px\">fingerprint</mat-icon>\n        </a>\n      </div>\n      <div class=\"mat-headline text-color\" fxLayoutAlign=\"center\">Got a Doc to Digitialize?</div>\n    </div>\n  </form>\n</div>\n<div class=\"footer\">\n  <mat-toolbar>\n    <div class=\"hand\" fxLayoutGap=\"15px\">\n      <!-- <a mat-button href=\"{{githubUrl}}\" target=\"blank\" color=\"primary\">\n        <img src=\"assets/GitHub-Mark-Light-32px.png\">\n      </a> -->\n      <a class=\"green\" href=\"https://github.com/formloco/formloco/wiki\" target=\"blank\" mat-stroked-button>\n        Developers\n      </a>\n      <!-- <a class=\"green\" (click)=\"signup()\" mat-stroked-button>\n        <mat-icon>rocket_launch</mat-icon>&nbsp;Sign Up!\n      </a> -->\n    </div>\n    <span class=\"toolbar-spacer\"></span>\n    <!-- <div fxLayoutGap=\"15px\">\n      <a mat-button href='{{githubUrl}}' target=\"blank\" color=\"primary\">\n        <img src=\"assets/GitHub-Mark-Light-32px.png\">\n      </a>\n    </div> -->\n    <img src=\"assets/parrot.svg\" height=\"28px\">&nbsp;<span class=\"mat-small text-color\">Updated: {{version}}</span>\n  </mat-toolbar>\n</div>","import { Component, Inject, OnInit } from \"@angular/core\"\n\nimport * as _ from 'lodash'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatDialogConfig } from \"@angular/material/dialog\"\n\nimport { Store } from '@ngxs/store'\n\nimport { SetComments } from './state/comment.actions'\nimport { CommentState } from './state/comment.state'\n\nimport { AppService } from \"../../service/app.service\"\nimport { CorrectiveActionComponent } from \"../corrective-action/corrective-action.component\"\nimport { CorrectiveActionState } from \"../corrective-action/state/corrective-action.state\"\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent implements OnInit {\n\n  commentForm: FormGroup\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<CommentComponent>,\n    public appService: AppService) {\n    this.commentForm = this.formBuilder.group({\n      comment: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    const comments = this.store.selectSnapshot(CommentState.comments)\n    const comment = comments.filter(c => c.field == this.data.field)\n    if (comment.length > 0) this.commentForm.controls['comment'].setValue(comment[0].text)\n  }\n\n  save() {\n    const comments = _.cloneDeep(this.store.selectSnapshot(CommentState.comments))\n    const commentIdx = comments.findIndex(c => c.field == this.data.field)\n    \n    if (commentIdx == -1) \n      comments.push({\n        label: this.data.label,\n        text: this.commentForm.controls['comment'].value,\n        field: this.data.field,\n        type: this.data.type,\n        discrepancy: this.data.discrepancy\n      })\n    else comments[commentIdx].text = this.commentForm.controls['comment'].value\n\n    this.store.dispatch(new SetComments(comments))\n    this.dialogRef.close(true)\n  }\n\n  delete() {\n    const comments = _.cloneDeep(this.store.selectSnapshot(CommentState.comments))\n    const commentIdx = comments.findIndex(c => c.field == this.data.field)\n    const correctiveActions = _.cloneDeep(this.store.selectSnapshot(CorrectiveActionState.correctiveActions))\n    const correctiveActionsIdx = correctiveActions.findIndex(c => c.field == this.data.field)\n  \n    if (commentIdx != -1) comments.splice(commentIdx, 1)\n    if (correctiveActionsIdx != -1) comments.splice(correctiveActionsIdx, 1)\n    this.store.dispatch(new SetComments(comments))\n    this.dialogRef.close(false)\n  }\n\n  openVoice() {\n    this.appService.popVoiceDialog(this.commentForm, 'comment', this.data.label)\n  }\n\n  openCorrectiveActionDialog() {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.maxWidth = '100vw'\n    dialogConfig.maxHeight = '100vh'\n    dialogConfig.width = '100vw'\n    dialogConfig.height = '100vh'\n    dialogConfig.data = { \n      title: this.data.label, \n      label: this.data.label, \n      field: this.data.field, \n      type: this.data.type, \n      actionItem: this.commentForm.controls['comment'].value }\n    this.dialog.open(CorrectiveActionComponent, dialogConfig)\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <div>\n    <div class=\"header-font\" fxLayoutAlign=\"start center\">{{ data.title }}</div>\n    <div>{{ data.label }}</div>\n  </div>\n  <div class=\"header-font\" fxLayoutAlign=\"start center\" class=\"icon-pointer\" (click)=\"dialogRef.close()\">\n    <mat-icon class=\"hand\">close</mat-icon>\n  </div>\n</div>\n<div mat-dialog-content fxLayoutGap=\"20px\">\n  <form class=\"header-form\" [formGroup]=\"commentForm\">\n    <div fxLayout=\"row\" class=\"text-color\">\n      <mat-form-field fxFlex>\n        <mat-label>{{data.placeholder}}</mat-label>\n        <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"4\" cdkAutosizeMaxRows=\"10\" matInput formControlName=\"comment\"\n          fxFlex required></textarea>\n      </mat-form-field>\n    </div>\n    <div fxLayoutAlign=\"space-between center\">\n      <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n        <button mat-stroked-button (click)=\"openCorrectiveActionDialog()\" [disabled]=\"commentForm.invalid\">Corrective action</button>\n      </div>\n      <button (click)=openVoice() mat-mini-fab color=\"primary\">\n        <mat-icon matSuffix>mic_none</mat-icon>\n      </button>\n    </div>\n  </form>\n  <br>\n  <br>\n  <div mat-dialog-actions class=\"action-btn\" fxLayoutAlign=\"end center\" fxLayoutGap=\"20px\">\n    <button mat-stroked-button color=\"warn\" (click)=\"delete()\">Delete</button>\n    <button mat-stroked-button color=\"accent\" (click)=\"dialogRef.close(true)\">Close</button>\n    <button mat-stroked-button color=\"primary\" (click)=\"save()\">Save</button>\n  </div>\n</div>","import { Injectable } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { map, startWith } from 'rxjs/operators'\nimport { FormControl } from \"@angular/forms\"\n\nimport { Store } from '@ngxs/store'\n\nimport { AuthState } from '../state/auth/auth.state'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoCompleteService {\n\n  lookupLists\n  workers: string[] = []\n  supervisors: string[] = []\n  makes: string[] = []\n  models: string[] = []\n  clients: string[] = []\n\n  public filteredSupervisors$: Observable<any[]>\n  private _filterSupervisors(value: any): any[] {\n    const filterValue = value?.toLowerCase()\n    return this.supervisors.filter(supervisor => supervisor[\"name\"]?.toLowerCase().includes(filterValue))\n  }\n\n  public filteredWorkers$: Observable<any[]>\n  private _filterWorkers(value: any): any[] {\n    const filterValue = value?.toLowerCase()\n    return this.workers.filter(worker => worker[\"name\"]?.toLowerCase().includes(filterValue))\n  }\n\n  public filteredMakes$: Observable<any[]>\n  private _filterMakes(value: any): any[] {\n    const filterValue = value?.toLowerCase()\n    return this.makes.filter(m => m.toLowerCase().includes(filterValue))\n  }\n\n  public filteredModels$: Observable<any[]>\n  private _filterModels(value: any): any[] {\n    const filterValue = value?.toLowerCase()\n    return this.models.filter(m => m.toLowerCase().includes(filterValue))\n  }\n\n  public filteredClients$: Observable<any[]>\n  private _filterClients(value: any): any[] {\n    const filterValue = value?.toLowerCase()\n    return this.clients.filter(c => c.toLowerCase().includes(filterValue))\n  }\n\n  // form controls for lists\n  public workersControl = new FormControl(null)\n  public supervisorsControl = new FormControl(null)\n  public makesControl = new FormControl(null)\n  public modelsControl = new FormControl(null)\n  public clientsControl = new FormControl(null)\n  // public personResponsibleCorrectiveActionControl = new FormControl(null)\n\n  constructor(private store: Store) { \n    this.workers = this.store.selectSnapshot(AuthState.workers)\n    this.filteredWorkers$ = this.workersControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterWorkers(value))\n    )\n    this.supervisors = this.store.selectSnapshot(AuthState.supervisors)\n    this.filteredSupervisors$ = this.supervisorsControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterSupervisors(value))\n    )\n    this.lookupLists = this.store.selectSnapshot(AuthState.lookupListData)\n    this.makes = this.lookupLists.filter(d => { return d.name == \"makes\" })[0][\"rows\"].map(d => { return d.data })\n    this.filteredMakes$ = this.makesControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterMakes(value))\n    )\n    this.models = this.lookupLists.filter(d => { return d.name == \"models\" })[0][\"rows\"].map(d => { return d.data })\n    this.filteredModels$ = this.modelsControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterModels(value))\n    )\n    this.clients = this.lookupLists.filter(d => { return d.name == \"clients\" })[0][\"rows\"].map(d => { return d.data })\n    this.filteredClients$ = this.modelsControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterClients(value))\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core'\n\nimport { Store } from '@ngxs/store'\n\nimport { CommentState } from '../state/comment.state'\nimport { SetComments } from '../state/comment.actions'\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { BottomSheetCommentComponent } from '../bottom-sheet-comment/bottom-sheet-comment.component'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentService {\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet) { }\n\n  bottomSheetComment(field, form) {\n    const comments: any = this.store.selectSnapshot(CommentState.comments)\n    const comment = comments.filter(c => c.field == field)\n    if (comment.length > 0) {\n      this.bottomSheet.open(BottomSheetCommentComponent, {\n        data: { comment: comment }\n      }).afterDismissed().subscribe(isSatisfactory => {\n        if (isSatisfactory) form.controls[field].setValue('satisfactory')\n        else form.controls[field].setValue('unsatisfactory')\n      })\n    }\n  }\n\n}\n","<!-- <mat-toolbar>\n  <span>Discrepancies by Division</span>\n  <span class=\"spacer\"></span>\n  <button mat-icon-button color=\"primary\" (click)=\"exportData()\">\n    <mat-icon>file_download</mat-icon>\n  </button>\n</mat-toolbar>\n<div echarts [options]=\"options\" class=\"demo-chart\"></div>\n<mat-toolbar>\n  <span>Inspections by Division</span>\n  <span class=\"spacer\"></span>\n  <button mat-icon-button color=\"primary\" (click)=\"exportData()\">\n    <mat-icon>file_download</mat-icon>\n  </button>\n</mat-toolbar>\n<div echarts [options]=\"options\" class=\"demo-chart\"></div>\n<mat-toolbar>\n  <span>Inspections by Supervisor</span>\n  <span class=\"spacer\"></span>\n  <button mat-icon-button color=\"primary\" (click)=\"exportData()\">\n    <mat-icon>file_download</mat-icon>\n  </button>\n</mat-toolbar>\n<div echarts [options]=\"options\" class=\"demo-chart\"></div>\n<mat-accordion multi [togglePosition]=\"'before'\" *ngFor=\"let formObj of (forms$ | async);  index as i\">\n  <mat-expansion-panel (click)=\"setStep(i)\" class=\"accordion-padding\" [expanded]=\"step === i\">\n    <mat-expansion-panel-header>\n      <mat-panel-title fxLayoutAlign=\"start center\" fxLayoutGap=\"10px\">\n        <mat-icon class=\"material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n        &nbsp;{{ formObj.name }}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <div fxLayoutGap=\"15px\">\n      Inspections by Division\n      <div echarts [options]=\"options\" class=\"demo-chart\"></div>\n      Inspections by Supervisor\n      <div echarts [options]=\"options\" class=\"demo-chart\"></div>\n      Discrepancies\n      <div echarts [options]=\"options\" class=\"demo-chart\"></div>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion> -->\n<!-- <div fxLayout=\"row wrap\">\n  <div *ngFor=\"let chart of charts;  index as i\" fxFlex=\"33\">\n    <mat-card class=\"custom hand\" (click)=selectForm($event)>\n      <mat-card-header>\n        <mat-card-title>{{chart}}</mat-card-title>\n      </mat-card-header>\n      <div echarts [options]=\"options\"></div>\n    </mat-card>\n  </div>\n</div> -->\n\n\n<!-- <mat-card-header>\n  <div mat-card-avatar>\n    <mat-icon class=\"form-icon material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n  </div>\n  <mat-card-title>{{ formObj.name }}</mat-card-title>\n  <mat-card-subtitle>\n        <div>{{(forms$ | async)?.length}} Submitted</div>\n        <div>{{(forms$ | async)?.length}} Completed</div>\n      </mat-card-subtitle>\n      <div fxFlex></div>\n      <div>\n        <mat-card-subtitle>\n          <div class=\"biglabel\">Discrepancies</div>\n          <div>15 Total</div>\n          <div>10 Open</div>\n          <div>5 Resolved</div>\n        </mat-card-subtitle>\n      </div>\n    </mat-card-header> -->\n<div fxLayout=\"column\" class='chart-box'>\n  <dashboard-filter [supervisors]='supervisors' [filters]='filters' (filterUpdate)='getUpdatedFilter($event)'>\n  </dashboard-filter>\n  <div fxLayout='column'>\n    <div class='title-number'>Open / Unsigned Forms <span class='title-number__open'>({{openForms.length}})</span></div>\n    <div class='full' fxLayout='column'>\n      <div class='full' class='form__titles'>\n        <div class='full form__columns-left form__title-left' fxLayout='row'>\n          <div>\n            Form\n          </div>\n          <div class='full form__column-center' fxLayout='row'>\n            <div>\n              Date\n            </div>\n            <div>\n              Supervisor\n            </div>\n          </div>\n        </div>\n        <div fxLayout='row' class='form__column-right form__title-right'>\n          <div>\n            Edit\n          </div>\n          <div>\n            PDF\n          </div>\n        </div>\n      </div>\n      <div class='list'>\n        <div *ngFor=\"let form of openForms; index as i\">\n          <mat-card class='full form__card'>\n            <!-- <a href='#' (click)=\"getPdf(form)\"> -->\n            <div class='full form__columns-left'>\n              <div>\n                {{form.form_name}}\n              </div>\n              <div class='full form__column-center' fxLayout='row'>\n                <div>\n                  {{getDate(form.date)}}\n                </div>\n                <div>\n                  {{getSupervisor(form.email_to)}}\n                </div>\n              </div>\n            </div>\n            <div fxLayoutGap=\"30px\" fxLayout='row' class='form__buttons'>\n              <button color=\"primary\" mat-mini-fab>\n                <mat-icon class=\"material-icons-outlined\" (click)=\"openForm(form, i)\">dynamic_form</mat-icon>\n              </button>\n              <button color=\"primary\" mat-mini-fab>\n                <mat-icon class=\"material-icons-outlined\" (click)=\"getPdf(form)\">picture_as_pdf</mat-icon>\n              </button>\n            </div>\n          </mat-card>\n        </div>\n      </div>\n    </div>\n\n    <div class='title-number'>Signed Forms <span class='title-number__signed'>({{signedForms.length}})</span></div>\n    <div class='full' fxLayout='column'>\n      <div class='full' class='form__titles'>\n        <div class='full form__columns-left form__title-left' fxLayout='row'>\n          <div>\n            Form\n          </div>\n          <div class='full form__column-center' fxLayout='row'>\n            <div>\n              Date\n            </div>\n            <div>\n              Supervisor\n            </div>\n          </div>\n        </div>\n        <div fxLayout='row' class='form__column-pdf form__title-right'>\n          <div>\n            PDF\n          </div>\n        </div>\n      </div>\n      <div class='list'>\n        <div *ngFor=\"let form of signedForms; index as i\">\n          <mat-card class='full form__card'>\n            <!-- <a href='#' (click)=\"getPdf(form)\"> -->\n            <div class='full form__columns-left'>\n              <div>\n                {{form.form_name}}\n              </div>\n              <div class='full form__column-center' fxLayout='row'>\n                <div>\n                  {{getDate(form.date)}}\n                </div>\n                <div>\n                  {{getSupervisor(form.email_to)}}\n                </div>\n              </div>\n            </div>\n            <div fxLayoutGap=\"30px\" fxLayout='row' class='form__buttons'>\n              <button color=\"primary\" mat-mini-fab>\n                <mat-icon class=\"material-icons-outlined\" (click)=\"getPdf(form)\">picture_as_pdf</mat-icon>\n              </button>\n            </div>\n          </mat-card>\n        </div>\n      </div>\n    </div>\n  </div>","import {\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  ViewChild,\n  // Output,\n  // EventEmitter,\n} from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { Store, Select } from '@ngxs/store';\n\nimport { AuthState } from '../../../state/auth/auth.state';\nimport { SetChildPage, SetFormData, SetPage, SetSelectedForm } from '../../../state/auth/auth-state.actions';\nimport { NotificationState } from 'src/app/state/notification/notification.state';\nimport { ApiService } from \"../../../service/api.service\"\n\nimport { SetNotification, SetNotificationIdx } from 'src/app/state/notification/notification-state.actions';\nimport { SetComments } from '../../comment/state/comment.actions';\nimport { SetCorrectiveActions } from '../../corrective-action/state/corrective-action.actions';\nimport { SetIsWorksiteSafetyHeaderValid } from '../../forms/spot-check-safety/state/spot-check-safety.actions';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  // @Select(AuthState.forms) forms$: Observable<any[]>\n  @Select(NotificationState.notificationAllOpen)\n  notificationOpen$: Observable<string>;\n  @Select(NotificationState.notificationAllSigned)\n  notificationSigned$: Observable<string>;\n  @Select(AuthState.supervisors)\n  supervisors$: Observable<string>;\n  // @Output() filterUpdate = new EventEmitter()\n\n  public charts: any[] = [];\n  options: any;\n  openForms: any[] = [];\n  signedForms: any[] = [];\n  supervisors: any[] = [];\n  filters = {\n    form: 'all',\n    month: 'all',\n    year: 'all',\n    supervisor: 'all',\n  };\n  getAllOpen;\n  getAllSigned;\n\n  // updateFilters(key, value) {\n  //   this.filterUpdate.emit(this.filters[key] = value)\n  // }\n\n  constructor(private store: Store,\n    private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    this.store.select(AuthState.supervisors).subscribe((supers: any) => {\n      if (supers) {\n        supers.forEach((person: any) => {\n          this.supervisors.push(person);\n        });\n      }\n    });\n\n    this.getAllOpen = () =>\n      this.store\n        .select(NotificationState.notificationAllOpen)\n        .subscribe((forms: any) => {\n          if (forms) {\n            forms.forEach((form: any) => {\n              this.openForms.push(form);\n            });\n          }\n        });\n    this.getAllOpen();\n    this.getAllSigned = () =>\n      this.store\n        .select(NotificationState.notificationAllSigned)\n        .subscribe((forms: any) => {\n          if (forms) {\n            forms.forEach((form: any) => {\n              this.signedForms.push(form);\n            });\n          }\n        });\n    this.getAllSigned();\n\n    // this.store.select(AuthState.forms).subscribe((forms: any) => {\n    //   forms.forEach(element => {\n    //     this.charts.push(element.name+' Inspections by Division')\n    //     this.charts.push(element.name+' Inspections by Supervisor')\n    //     this.charts.push(element.name+' Discrepancies')\n    //   })\n    //   console.log(this.charts)\n    // })\n    // const xAxisData = [];\n    // const data1 = [];\n    // const data2 = [];\n\n    // for (let i = 0; i < 100; i++) {\n    //   xAxisData.push('category' + i);\n    //   data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n    //   data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\n    // }\n\n    // this.options = {\n    //   legend: {\n    //     data: ['bar', 'bar2'],\n    //     align: 'left',\n    //   },\n    //   tooltip: {},\n    //   xAxis: {\n    //     data: xAxisData,\n    //     silent: false,\n    //     splitLine: {\n    //       show: false,\n    //     },\n    //   },\n    //   yAxis: {},\n    //   series: [\n    //     {\n    //       name: 'bar',\n    //       type: 'bar',\n    //       data: data1,\n    //       animationDelay: (idx) => idx * 10,\n    //     },\n    //     {\n    //       name: 'bar2',\n    //       type: 'bar',\n    //       data: data2,\n    //       animationDelay: (idx) => idx * 10 + 100,\n    //     },\n    //   ],\n    //   animationEasing: 'elasticOut',\n    //   animationDelayUpdate: (idx) => idx * 5,\n    // };\n  }\n\n  exportData() {}\n    // corrective_action: false;\n  // data_id: null;\n  // date: '2022-12-03T15:00:41.000Z';\n  // date_signed: null;\n  // description: 'Worksite Safety Inspection, Dec 3, 3:0PM';\n  // email_from: 'brock@formloco.com';\n  // email_from_id: 352;\n  // email_signed: null;\n  // email_to: 'alvin.tol@hotmail.com';\n  // email_to_id: 2;\n  // form_id: 'f17f0bf7-bacd-4bee-97d8-e4e35a44b1f1';\n  // form_name: 'Worksite Safety Inspection';\n  // id: 406;\n  // pdf: 'worksite-safety-inspection479';\n  // read: true;\n  // signed: null;\n  // signed_name: null;\n  \n    getSupervisor(email) {\n      const index = this.supervisors.findIndex(\n        (target: any) =>\n          target.email === email\n      );\n      return this.supervisors[index].name;\n    }\n  \n  getUpdatedFilter($event) {\n    const { form, month, year, supervisor } = this.filters;\n    this.filters = $event;\n    this.openForms = [];\n    this.signedForms = [];\n    \n    if (\n      form !== 'all' ||\n      month !== 'all' ||\n      year !== 'all' ||\n      supervisor !== 'all'\n    ) {\n      this.store\n        .select(NotificationState.notificationAllOpen)\n        .subscribe((forms: any) => {\n          if (forms) {\n            forms.forEach((form: any) => {\n              if (\n                (form.form_name === this.filters.form || this.filters.form === 'all') &&\n                (form.date.includes(`-${this.filters.month}-`) || this.filters.month === 'all')&&\n                (form.date.includes(`${this.filters.year}-`)|| this.filters.year === 'all') &&\n                (form.email_to === this.filters.supervisor || this.filters.supervisor === 'all')\n                ) {\n                  this.openForms.push(form);\n                }\n              });\n          }\n        });\n      this.store\n        .select(NotificationState.notificationAllSigned)\n        .subscribe((forms: any) => {\n          if (forms) {\n            forms.forEach((form: any) => {\n              if (\n                (form.form_name === this.filters.form || this.filters.form === 'all') &&\n                (form.date.includes(`-${this.filters.month}-`) || this.filters.month === 'all') &&\n                (form.date.includes(`${this.filters.year}-`)|| this.filters.year === 'all') &&\n                (form.email_to === this.filters.supervisor || this.filters.supervisor === 'all')\n                  )\n                {\n                this.signedForms.push(form);\n              }\n            });\n          }\n        });\n    } else {\n      this.getAllOpen();\n      this.getAllSigned();\n    }\n  }\n\n  getDate(date) {\n    return date.split('').slice(0, 10).join('');\n  }\n\n  getPdf(form) {\n    console.log('get pdf', form)\n    // this.store.dispatch(new SetNotification(form));\n    // const notification = this.store.selectSnapshot(NotificationState.notification)\n    // console.log({notification})\n    this.apiService.getPDF(form.pdf)\n  }\n\n  openForm(notification, idx) {\n    this.store.dispatch(new SetComments([]));\n    this.store.dispatch(new SetCorrectiveActions([]));\n    this.store.dispatch(new SetNotification(notification));\n    this.store.dispatch(new SetNotificationIdx(idx));\n    const page = this.store.selectSnapshot(AuthState.page);\n    const childPage = this.store.selectSnapshot(AuthState.childPage);\n    this.apiService\n      .getFormData(notification.form_id, notification.data_id)\n      .subscribe((data: any) => {\n        const selectedForm: any = this.store.selectSnapshot(\n          AuthState.selectedForm\n        );\n        this.store.dispatch(new SetIsWorksiteSafetyHeaderValid(false));\n        this.store.dispatch(new SetSelectedForm(selectedForm));\n        this.store.dispatch(new SetFormData(data));\n        this.store.dispatch(new SetCorrectiveActions(data.correctiveAction));\n        this.store.dispatch(new SetChildPage('notification'));\n        this.store.dispatch(new SetPage('form'));\n      });\n  }\n\n\n}\n","import { Component, OnInit, Input, ViewChild, OnChanges, SimpleChanges } from '@angular/core'\n\nimport { FormControl, Validators } from '@angular/forms'\n\nimport { BehaviorSubject } from 'rxjs'\n\nimport { BarcodeFormat, MultiFormatReader } from '@zxing/library'\n\nimport { AppService } from \"../../../service/app.service\"\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n// import { ZXingScannerComponent } from '@zxing/ngx-scanner'\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\n@Component({\n  selector: 'app-scanner-qrcode-run',\n  templateUrl: './scanner-qrcode-run.component.html',\n  styleUrls: ['./scanner-qrcode-run.component.scss']\n})\nexport class ScannerQrcodeRunComponent implements OnInit {\n\n  @Input() index\n  @Input() runForm\n\n  loggedIn\n  availableDevices: MediaDeviceInfo[]\n  deviceCurrent: MediaDeviceInfo\n  deviceSelected: string\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.EAN_8,\n    BarcodeFormat.UPC_A,\n    BarcodeFormat.UPC_E,\n    BarcodeFormat.UPC_EAN_EXTENSION,\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.CODE_39\n  ]\n\n  hasDevices: boolean\n  hasPermission: boolean\n\n  qrResultString: string\n  idbData\n  tableData\n  torchEnabled = false\n  torchAvailable$ = new BehaviorSubject<boolean>(false)\n  tryHarder = false\n\n  isEnabled = false\n\n  // @ViewChild(ZXingScannerComponent) scanner: ZXingScannerComponent\n  constructor(public appService: AppService, public idb: IdbCrudService) { }\n\n  ngOnInit(): void {\n    // this.isEnabled = tsrue\n    // this.runForm.addControl(this.builderService.detailArray[this.index].formControlName, new FormControl(''))\n  }\n\n  scan() {\n    this.isEnabled = true\n  }\n\n  stop() {\n    this.isEnabled = false\n    // this.scanner.reset()\n  }\n\n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false)\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has\n  }\n\n  onCodeResult(resultString: string) {\n    this.qrResultString = resultString\n    this.isEnabled = false\n    //this.runForm.patchValue({'BarCodeScanner0': this.qrResultString})\n    this.idb.put('data', { 'BarCodeScanner0': this.qrResultString })\n    // this.scanner.reset()\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices\n    this.isEnabled = true\n    this.hasDevices = Boolean(devices && devices.length)\n  }\n\n}\n","\n<div fxLayout=\"column\" flex>\n    <zxing-scanner *ngIf=\"isEnabled\" class=\"qr-scanner\" [enable]=\"isEnabled\" (scanSuccess)=\"scanSuccess($event)\" (scanError)=\"scanError($event)\"\n      (scanFailure)=\"scanFailure($event)\" (scanComplete)=\"scanComplete($event)\">\n    </zxing-scanner>\n    <button *ngIf=\"!isEnabled\" type=\"button\" mat-flat-button color=\"primary\" (click)=\"startScan()\" fxFlex>\n      Start Scan\n    </button>\n    <button *ngIf=\"isEnabled\" type=\"button\" mat-flat-button color=\"warn\" (click)=\"stopScan()\" fxFlex>\n      Stop Scan\n    </button>\n  </div>\n\n\n<!-- <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n  <mat-grid-tile colspan=\"1\" rowspan=\"4\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"zxing-scanner\">\n      <zxing-scanner *ngIf=\"isEnabled\" [enable]=\"isEnabled\" [torch]=\"torchEnabled\" [device]=\"deviceCurrent\" (scanSuccess)=\"onCodeResult($event)\"\n        [formats]=\"formatsEnabled\" [tryHarder]=\"tryHarder\" (permissionResponse)=\"onHasPermission($event)\" (camerasFound)=\"onCamerasFound($event)\"\n        (torchCompatible)=\"onTorchCompatible($event)\"></zxing-scanner>\n    </div>\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n    <div class=\"control-padding\">\n      <button *ngIf=\"!isEnabled\" mat-stroked-button (click)=\"scan()\" color=\"primary\">\n        Start Barcode Scan\n      </button>\n      <button *ngIf=\"isEnabled\" mat-stroked-button (click)=\"stop()\" color=\"primary\">\n        Stop Barcode Scan\n      </button>\n    </div>\n  </mat-grid-tile>\n</mat-grid-list> -->","export const LIST_FORM = {\n  columns: 'user_updated, user_created, date_updated, date_created, data',\n  is_list: true,\n  form: {\n    name: '',\n    pin: '369',\n    labels: '[\\\"Data\\\"]',\n    columns: 'id int4 NOT NULL DEFAULT nextval(`id_seq`::regclass), user_updated varchar, user_created jsonb, date_updated timestamp, date_created timestamp, data varchar, PRIMARY KEY(id)'\n  }\n}\n\n// list used to populate all data at startup\nexport const LISTS = [\n  'stakeholders', 'models', 'years', 'divisions', 'makes', 'clients'\n]","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div class=\"header\">\n    <mat-toolbar>\n      <mat-icon color=\"primary\" class=\"material-icons-outlined\">{{ childPageIcon$ | async }}</mat-icon>\n      <div class=\"primary-color\">&nbsp;{{ childPageLabel$ | async }}</div>\n      <span class=\"toolbar-spacer\"></span>\n      <div fxLayoutGap=\"25px\" fxLayoutAlign=\"space-around center\">\n        <mat-icon class=\"hand material-icons-outlined\" (click)=\"openNotifications(1)\">border_color</mat-icon>\n        <mat-icon class=\"hand material-icons-outlined\" (click)=\"openNotifications(0)\" matBadge=\"{{notificationCount$ | async}}\"\n          matBadgeColor=\"accent\">notifications</mat-icon>\n        <button color=\"primary\" (click)=\"signout()\" mat-icon-button><mat-icon class=\"material-icons-outlined\">logout</mat-icon></button>\n      </div>\n    </mat-toolbar>\n  </div>\n\n  <div class=\"content\">\n    <mat-sidenav-container class=\"list-container\"\n      [ngStyle]=\"{'background-color': (background$ | async), 'style.height.px': myInnerHeight }\"\n      (backdropClick)=\"close('backdrop')\">\n      <mat-sidenav #sidenav (keydown.escape)=\"close('escape')\" class=\"list-menu\" mode=\"over\"\n        [(opened)]=\"appService.isListMenu\" [fixedInViewport]=\"true\" [fixedTopGap]=55>\n        <app-form-lists (selectList)=selectList()></app-form-lists>\n      </mat-sidenav>\n      <mat-sidenav-content>\n        <div class=\"content-full\">\n          <app-run *ngIf=\"(childPage$ | async) === 'run'\"></app-run>\n          <app-sdk *ngIf=\"(childPage$ | async) === 'sdk'\"></app-sdk>\n          <app-dashboard *ngIf=\"(childPage$ | async) === 'dashboard'\"></app-dashboard>\n          <app-list-run *ngIf=\"(childPage$ | async) === 'list'\"></app-list-run>\n          <app-data *ngIf=\"(childPage$ | async) === 'data'\"></app-data>\n          <app-forms *ngIf=\"(childPage$ | async) === 'forms'\" (selectData)=selectPage()></app-forms>\n          <app-list-forms *ngIf=\"(childPage$ | async) === 'list-forms'\" (selectData)=selectPage()></app-list-forms>\n          <app-data-forms *ngIf=\"(childPage$ | async) === 'data-forms'\" (selectData)=selectPage()></app-data-forms>\n          <app-settings *ngIf=\"(childPage$ | async) === 'settings'\"></app-settings>\n          <app-email-list *ngIf=\"(childPage$ | async) === 'email'\"></app-email-list>\n        </div>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </div>\n  <div class=\"footer\">\n    <app-menu></app-menu>\n  </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { MatSidenav } from '@angular/material/sidenav'\n\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { Router } from '@angular/router'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\nimport { NotificationState } from '../../state/notification/notification.state'\nimport { SetPage, SetChildPage, SetChildPageLabel, SetIsSignIn, SetEmailList, SetChildPageIcon } from '../../state/auth/auth-state.actions'\nimport { SetNotificationTab } from '../../state/notification/notification-state.actions'\nimport { SetForms } from '../../state/auth/auth-state.actions'\n\nimport { AppService } from \"../../service/app.service\"\nimport { ApiService } from \"../../service/api.service\"\nimport { IdbCrudService } from \"../../service-idb/idb-crud.service\"\n\nimport { environment } from '../../../environments/environment'\n\nimport { SetIsDarkMode } from '../../state/device/device-state.actions'\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes'\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  @ViewChild('sidenav') sidenav: MatSidenav\n\n  @Select(AuthState.page) page$: Observable<string>\n  @Select(AuthState.childPage) childPage$: Observable<string>\n  \n  @Select(AuthState.childPageIcon) childPageIcon$: Observable<string>\n  @Select(AuthState.childPageLabel) childPageLabel$: Observable<string>\n  @Select(DeviceState.isDarkMode) isDarkMode$: Observable<boolean>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(DeviceState.screenWidth) screenWidth$: Observable<string>\n  @Select(NotificationState.notificationAdminCount) notificationCount$: Observable<number>\n\n  prefs\n  token\n  templates\n  lookupListWorkers\n  lookupListSupervisors\n  \n  templateControls\n\n  myInnerHeight = window.innerHeight\n\n  templateForm: FormGroup\n\n  fileArray = []\n  isError = false\n  isMainMenu = true\n  isRightMenu = false\n  isImportOpen = false\n  isLookuplist = true\n  isListMenu\n\n  kioske = environment.kioske\n\n  signinUrl = environment.signinUrl\n\n  constructor(\n    private store: Store,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private idbCrudService: IdbCrudService) { \n      this.templateForm = this.formBuilder.group({\n        templateArray: this.formBuilder.array([])\n      })\n    }\n  \n  ngOnInit() {\n    this.store.select(AuthState.tenant).subscribe((tenant: any) => {\n      this.apiService.getEmailList({ tenant_id: tenant.tenant_id }).subscribe(lists => {\n        let emailLists:any = lists\n        emailLists = emailLists.filter(l => {return l.name !== null})\n        emailLists.sort((a, b) => a.name.localeCompare(b.name))\n        this.store.dispatch(new SetEmailList(emailLists))\n      })\n    })\n    \n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs\n      if (this.prefs.length > 0) {\n        if (this.prefs[0][\"user\"][\"isDarkMode\"]) this.appService.setMode('darkMode')\n        else this.appService.setMode('')\n\n        this.store.dispatch(new SetIsDarkMode(this.prefs[0][\"user\"][\"isDarkMode\"]))\n      }\n      else {\n        this.appService.setMode('darkMode')\n        this.store.dispatch(new SetIsDarkMode(true)) \n      }\n    })\n    \n  }\n\n  close(reason: string) {\n    this.sidenav.close()\n  }\n\n  closeOverlay() {\n    this.isImportOpen = false\n  }\n\n  selectList() {\n  \n  }\n\n  selectPage() {\n    const childPage = this.store.selectSnapshot(AuthState.childPage)\n    if ( childPage === 'list-forms') {\n      this.store.dispatch(new SetChildPageIcon('list_alt'))\n      this.appService.isListMenu = true\n    }\n    if ( childPage === 'data-forms') {\n      this.store.dispatch(new SetChildPageIcon('table_chart'))\n      this.store.dispatch(new SetChildPage('data'))\n    }\n    if ( childPage === 'forms') {\n      this.store.dispatch(new SetChildPageIcon('dynamic_form'))\n      this.store.dispatch(new SetChildPage('forms'))\n    }\n  }\n\n  signout() {\n    this.store.dispatch(new SetPage('home'))\n    this.store.dispatch(new SetIsSignIn(false))\n  }\n\n  openNotifications(tabIndex) {\n    if (tabIndex === 0) {\n      const user = this.store.selectSnapshot(AuthState.user)\n    }\n    this.store.dispatch(new SetPage('notification'))\n    this.store.dispatch(new SetChildPageLabel('Forms'))\n    this.store.dispatch(new SetNotificationTab(tabIndex))\n  }\n\n  settings() {\n    this.store.dispatch(new SetChildPageLabel('Settings'))\n    this.store.dispatch(new SetChildPage('settings'))\n  }\n  \n}","/**\n * adminstration of the forms is run from the json model locally\n * to add a form \n * users consume forms from indexedDB\n */\n import { Component, OnInit } from '@angular/core'\n import { Observable } from 'rxjs'\n \n import * as _ from 'lodash'\n \n import { AppService } from \"../../../service/app.service\"\n import { ErrorService } from '../../../service/error.service'\n import { FormService } from \"../../../service/form.service\"\n import { SuccessService } from \"../../../service/success.service\"\n import { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n \n import { Store, Select } from '@ngxs/store'\n import { LISTS } from \"../../../model/forms\"\n import { Form } from '../../../state/auth/auth-state.model'\n \n // custom forms\n import { VEHICLE_INSPECTION } from '../../forms/vehicle-inspection/state/vehicle-inspection-state.model'\n import { WORKSITE_SAFETY_INSPECTION } from '../../forms/worksite-safety-inspection/state/worksite-safety-inspection-state.model'\n import { SPOT_CHECK_SAFETY } from '../../forms/spot-check-safety/state/spot-check-safety.model'\n \n import { SetSelectedForm } from '../../../state/auth/auth-state.actions'\n import { SetPage, SetChildPageLabel, SetForms } from '../../../state/auth/auth-state.actions'\n import { AuthState } from '../../../state/auth/auth.state'\n\n@Component({\n  selector: 'app-sdk',\n  templateUrl: './sdk.component.html',\n  styleUrls: ['./sdk.component.scss']\n})\nexport class SdkComponent implements OnInit {\n\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n\n  forms = []\n\n  constructor(\n    private store: Store,\n    private appService: AppService,\n    private formService: FormService,\n    private errorService: ErrorService,\n    private idbCrudService: IdbCrudService,\n    private successService: SuccessService) {\n    this.forms.push(VEHICLE_INSPECTION)\n    this.forms.push(WORKSITE_SAFETY_INSPECTION)\n    this.forms.push(SPOT_CHECK_SAFETY)\n  }\n\n  ngOnInit() {\n    \n  }\n\n  deploy(form) {\n    let formObjClone = _.cloneDeep(form)\n    if (!form.type) this.errorService.popSnackbar('Form is not Configured')\n\n    else if (form.type === 'custom') {\n      const tenant = this.store.selectSnapshot(AuthState.tenant)\n\n      formObjClone[\"user_created\"] = { email: tenant.email, date_created: this.appService.now }\n      const rawForm = _.cloneDeep(formObjClone)\n      formObjClone[\"formObj\"] = rawForm\n\n      //forms are taken from local json and registered to the database\n      this.formService.registerForm(formObjClone).subscribe((form_id :any) => {\n        formObjClone['form_id'] = form_id\n        this.idbCrudService.put('form', formObjClone).subscribe(_ => {\n          this.idbCrudService.readAll('form').subscribe((forms: any) => {\n            this.store.dispatch(new SetForms(forms))\n          })\n          this.successService.popSnackbar(\"Form Registered\")\n        })\n      })\n    }\n\n  }\n\n}","<!-- this component takes custom forms and registers them to the cloud -->\n<div class=\"form-padding\" *ngFor=\"let formObj of forms\">\n  <mat-card class=\"hand\">\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon32 material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n      </div>\n      <mat-card-title>{{ formObj.name }}</mat-card-title>\n      <mat-card-subtitle>{{ formObj.description }}</mat-card-subtitle>\n    </mat-card-header>\n    <div class=\"publish\" fxLayoutAlign=\"space-between center\">\n      <div fxLayoutAlign=\"space-between center\" fxLayoutGap=\"25px\">\n        <button mat-stroked-button color=\"primary\" (click)=\"deploy(formObj)\" matTooltip=\"Deploy Form\"\n        [disabled]=\"kioske$ | async\">\n          <mat-icon class=\"material-icons-outlined\">published_with_changes</mat-icon> Deploy Form\n        </button>\n      </div>\n    </div>\n  </mat-card>\n</div>","<div [ngStyle]=\"{'background-color': (background$ | async)}\" fxFlexFill>\n  <div class=\"padding-top\" fxLayoutAlign=\"center space-between\" fxLayout=\"row\">\n    <div fxLayoutAlign=\"start center\" class=\"text-color\">Profile</div>\n    <span class=\"toolbar-spacer\"></span>\n    <div>\n      <button (click)=close() mat-icon-button>\n        <mat-icon class=\"text-color\">close</mat-icon>\n      </button>\n    </div>\n  </div>\n  <div class=\"container-padding text-color padding\" fxLayoutAlign=\"space-between\" fxLayout=\"row\">\n    <div fxLayoutAlign=\"start center\">\n      <mat-slide-toggle [checked]=\"isDarkMode$ | async\" color=\"primary\" (click)=\"toggleTheme()\"></mat-slide-toggle>\n      <span *ngIf=\"(isDarkMode$ | async)\">&nbsp;&nbsp;Dark Mode</span>\n      <span *ngIf=\"!(isDarkMode$ | async)\">&nbsp;&nbsp;Light Mode</span>\n    </div>\n  </div>\n  <form fxLayout=\"column\" class=\"container-padding text-color\" [formGroup]=\"passwordForm\" fxLayoutGap=\"10px\">\n    <div class=\"text-color\">\n      Reset Password\n    </div>\n    <mat-form-field class=\"text-color\" appearance=\"outline\" fxFlex>\n      <mat-label class=\"text-color\">Password</mat-label>\n      <input class=\"text-color\" matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\"\n        formControlName=\"password\" required [readonly]=\"kioske\">\n      <mat-icon class=\"hand\" matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </mat-form-field>\n    <button (click)=\"resetPassword()\" color=\"primary\" mat-flat-button [disabled]=\"kioske$ | async\">\n      Reset Password\n    </button>\n  </form>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { Observable } from 'rxjs'\nimport { environment } from '../../../../environments/environment'\n\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\"\n\nimport { AppService } from \"../../../service/app.service\"\nimport { AuthService } from \"../../../service/auth.service\"\nimport { SuccessService } from \"../../../service/success.service\"\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { User } from '../../../state/auth/auth-state.model'\nimport { DeviceState } from '../../../state/device/device.state'\nimport { SetPage } from '../../../state/auth/auth-state.actions'\n\nimport { SetIsDarkMode } from '../../../state/device/device-state.actions'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  @Select(DeviceState.isDarkMode) isDarkMode$: Observable<boolean>\n  @Select(DeviceState.background) background$: Observable<string>\n  @Select(AuthState.user) user$: Observable<User>\n  @Select(AuthState.kioske) kioske$: Observable<boolean>\n  \n  @Output() changeTheme = new EventEmitter()\n\n  prefs\n  email\n  token\n  hide = true\n  kioske = environment.kioske\n  \n  passwordForm: FormGroup;\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    public appService: AppService,\n    private authService: AuthService,\n    private successService: SuccessService,\n    private idbCrudService: IdbCrudService) { \n    this.passwordForm = this.fb.group({\n      password: [null, Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs\n      if (this.prefs.length > 0) {\n        if (this.prefs[0][\"user\"][\"isDarkMode\"]) this.appService.setMode('darkMode')\n        else this.appService.setMode('')\n\n        this.store.dispatch(new SetIsDarkMode(this.prefs[0][\"user\"][\"isDarkMode\"]))\n        this.email = this.prefs[0][\"user\"][\"email\"]\n      }\n      else {\n        this.appService.setMode('darkMode')\n        this.store.dispatch(new SetIsDarkMode(true)) \n      }\n    })\n  }\n\n  resetPassword() {\n    const obj = this.passwordForm.value\n    obj[\"email\"] = this.email\n    this.authService.resetPassword(obj).subscribe((res:any) => {\n      this.successService.popSnackbar(res.message)\n      this.store.dispatch(new SetPage('home'))\n    });  \n  }\n\n  toggleTheme() {\n    this.changeTheme.emit()\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('home'))\n  }\n\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { TruncatePipe } from './truncate.pipe'\nimport { TruncateStraightPipe } from './truncate-straight.pipe'\nimport { ReplaceUnderscorePipe } from './replace-underscore.pipe'\nimport { SplitCamelCasePipe } from './split-camel-case.pipe'\n\n@NgModule({\n  declarations: [\n    TruncatePipe,\n    TruncateStraightPipe,\n    ReplaceUnderscorePipe,\n    SplitCamelCasePipe\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TruncatePipe,\n    TruncateStraightPipe,\n    ReplaceUnderscorePipe,\n    SplitCamelCasePipe\n  ]\n})\nexport class PipeModule { }\n","import { Component, Output, EventEmitter } from '@angular/core'\n\nimport { environment } from '../../../environments/environment'\n\n@Component({\n  selector: 'app-sign-off',\n  templateUrl: './sign-off.component.html',\n  styleUrls: ['./sign-off.component.scss']\n})\nexport class SignOffComponent {\n\n  @Output() submitForm = new EventEmitter<any>()\n\n  isEdit = false\n  kioske = environment.kioske\n\n  constructor() { }\n\n  save() {\n    this.submitForm.emit()\n  }\n\n}\n","<!-- <div class=\"hand\" fxLayout=\"column\" fxLayoutAlign=\"space-around center\">\n  <mat-icon class=\"icon-169px-action\" (click)=\"save()\">fingerprint</mat-icon>\n  <div class=\"text-color bottom-padding\"><mat-label>Press to Submit</mat-label></div>\n</div> -->\n\n<div *ngIf=\"!isEdit\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n  <mat-icon *ngIf=\"!headerForm.valid && !notesForm.valid && kioske\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n  <mat-icon *ngIf=\"headerForm.valid && notesForm.valid && !kioske\" class=\"icon-169px-action hand\" (click)=\"submitForm()\">fingerprint</mat-icon>\n</div>\n<div *ngIf=\"isEdit\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n  <mat-icon *ngIf=\"kioske\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n  <mat-icon *ngIf=\"headerForm.valid && notesForm.valid && !kioske\" class=\"icon-169px-action hand\" (click)=\"updateForm()\">fingerprint</mat-icon>\n</div>","import { Component, OnInit } from '@angular/core';\nimport * as _moment from 'moment';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { ApiService } from '../../../service/api.service';\nimport { AppService } from '../../../service/app.service';\nimport { FormService } from '../../../service/form.service';\nimport { IdbCrudService } from '../../../service-idb/idb-crud.service';\nimport { NotificationService } from '../../../service/notification.service';\nimport { AutoCompleteService } from '../../../service/auto-complete.service';\n\nimport { SPOT_CHECK_SAFETY } from './state/spot-check-safety.model';\n\nimport { environment } from '../../../../environments/environment';\n\nimport { Store } from '@ngxs/store';\nimport { AuthState } from '../../../state/auth/auth.state';\nimport { DeviceState } from '../../../state/device/device.state';\nimport { CommentState } from '../../comment/state/comment.state';\n\nimport { SetPics } from '../../../state/device/device-state.actions';\nimport {\n  SetPage,\n  SetChildPageLabel,\n} from '../../../state/auth/auth-state.actions';\n\nimport { SetComments } from '../../comment/state/comment.actions';\nimport { SetCorrectiveActions } from '../../corrective-action/state/corrective-action.actions';\nimport { CorrectiveActionState } from '../../corrective-action/state/corrective-action.state';\n\n@Component({\n  selector: 'app-spot-check-safety',\n  templateUrl: './spot-check-safety.component.html',\n  styleUrls: ['./spot-check-safety.component.scss'],\n})\nexport class SpotCheckSafetyComponent implements OnInit {\n\n  pics;\n  formData;\n  formDataID;\n  step = 0;\n  isEdit = false;\n  isOnline;\n\n  kioske;\n\n  headerForm: FormGroup;\n  hazardForm: FormGroup;\n  rulesForm: FormGroup;\n  incidentForm: FormGroup;\n  communicationForm: FormGroup;\n  personalEquipmentForm: FormGroup;\n  safetyEquipmentForm: FormGroup;\n  correctiveActionForm: FormGroup;\n  discrepancyForm: FormGroup;\n\n  notificationObj\n  // messageUrl = environment.messageUrl\n\n  SPOT_CHECK_SAFETY = SPOT_CHECK_SAFETY;\n\n  constructor(\n    private store: Store,\n    private snackBar: MatSnackBar,\n    public appService: AppService,\n    private apiService: ApiService,\n    private formBuilder: FormBuilder,\n    private formService: FormService,\n    private idbCrudService: IdbCrudService,\n    private autoCompleteService: AutoCompleteService,\n    private notificationService: NotificationService\n  ) {\n    this.headerForm = this.formBuilder.group({\n      Date: [null, Validators.required],\n      CompanyName: [null, Validators.required],\n      EmployeeName: [null, Validators.required],\n      Location: [null, Validators.required],\n      JobDescription: [null, Validators.required],\n    });\n    this.hazardForm = this.formBuilder.group({\n      InspectionFrequency: [],\n      HazardAssessmentSystem: [],\n      HazardComments: [],\n    });\n    this.rulesForm = this.formBuilder.group({\n      Procedures: [],\n      EmergencyPlan: [],\n      RulesComments: [],\n    });\n    this.incidentForm = this.formBuilder.group({\n      IncidentReporting: [],\n      NearMissReporting: [],\n      ProblemFixed: [],\n      SolvingIssues: [],\n      IncidentComments: [],\n    });\n    this.communicationForm = this.formBuilder.group({\n      SafetyOrientation: [],\n      SafetyMeetingFrequency: [],\n      AppropriateTraining: [],\n      FirstAidTraining: [],\n      H2STraining: [],\n      WHMISTraining: [],\n      TDGTraining: [],\n      GroundDisturbanceTraining: [],\n      EGSOCSOTraining: [],\n      JobSpecificTraining: [],\n      CommunicationComments: [],\n    });\n    this.personalEquipmentForm = this.formBuilder.group({\n      PPEAvailable: [],\n      HardHat: [],\n      SafetyGlasses: [],\n      Footwear: [],\n      ProtectiveClothing: [],\n      HearingProtection: [],\n      RespiratoryProtection: [],\n      PersonalGasMonitor: [],\n      CommunicationEquipment: [],\n      OtherEquipment: [],\n      PersonalEquipmentComments: [],\n    });\n    this.safetyEquipmentForm = this.formBuilder.group({\n      SafetyEquipmentAvailable: [],\n      FireFightingEquipment: [],\n      RotatingEquimentGuards: [],\n      FirstAidKit: [],\n      FallArrestEquipment: [],\n      EmergencySystems: [],\n      Other: [],\n      SafetyEquipmentComments: [],\n    });\n    this.discrepancyForm = this.formBuilder.group({\n      Discrepancy: [null, Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    this.kioske = this.store.selectSnapshot(AuthState.kioske);\n    this.isOnline = this.store.selectSnapshot(DeviceState.isOnline);\n\n    this.store.select(AuthState.formData).subscribe((formData) => {\n      this.formData = formData;\n      if (this.formData && formData['data']) {\n        this.isEdit = true;\n        this.setFormData(formData['data']);\n      }\n    });\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n\n  setFormData(data) {\n    if (data.header) {\n      this.headerForm.controls['Date'].setValue(data.header.Date);\n      this.headerForm.controls['CompanyName'].setValue(data.header.CompanyName);\n      this.headerForm.controls['EmployeeName'].setValue(\n        data.header.EmployeeName\n      );\n      this.headerForm.controls['Location'].setValue(data.header.Location);\n      this.headerForm.controls['JobDescription'].setValue(\n        data.header.JobDescription\n      );\n      this.autoCompleteService.workersControl.setValue(data.header.Worker);\n      this.autoCompleteService.supervisorsControl.setValue(\n        data.header.Supervisor\n      );\n    }\n    if (data.hazard) {\n      this.hazardForm.controls['InspectionFrequency'].setValue(\n        data.hazard.InspectionFrequency\n      );\n      this.hazardForm.controls['HazardAssessmentSystem'].setValue(\n        data.hazard.HazardAssessmentSystem\n      );\n      this.hazardForm.controls['HazardComments'].setValue(\n        data.hazard.HazardComments\n      );\n    }\n\n    if (data.rules) {\n      this.rulesForm.controls['Procedures'].setValue(data.rules.Procedures);\n      this.rulesForm.controls['EmergencyPlan'].setValue(\n        data.rules.EmergencyPlan\n      );\n      this.rulesForm.controls['RulesComments'].setValue(\n        data.rules.RulesComments\n      );\n    }\n\n    if (data.incident) {\n      this.incidentForm.controls['IncidentReporting'].setValue(\n        data.incident.IncidentReporting\n      );\n      this.incidentForm.controls['NearMissReporting'].setValue(\n        data.incident.NearMissReporting\n      );\n      this.incidentForm.controls['ProblemFixed'].setValue(\n        data.incident.ProblemFixed\n      );\n      this.incidentForm.controls['SolvingIssues'].setValue(\n        data.incident.SolvingIssues\n      );\n      this.incidentForm.controls['IncidentComments'].setValue(\n        data.incident.IncidentComments\n      );\n    }\n\n    if (data.communication) {\n      this.communicationForm.controls['SafetyOrientation'].setValue(\n        data.communication.SafetyOrientation\n      );\n      this.communicationForm.controls['SafetyMeetingFrequency'].setValue(\n        data.communication.SafetyMeetingFrequency\n      );\n      this.communicationForm.controls['AppropriateTraining'].setValue(\n        data.communication.AppropriateTraining\n      );\n      this.communicationForm.controls['FirstAidTraining'].setValue(\n        data.communication.FirstAidTraining\n      );\n      this.communicationForm.controls['H2STraining'].setValue(\n        data.communication.H2STraining\n      );\n      this.communicationForm.controls['WHMISTraining'].setValue(\n        data.communication.WHMISTraining\n      );\n      this.communicationForm.controls['TDGTraining'].setValue(\n        data.communication.TDGTraining\n      );\n      this.communicationForm.controls['GroundDisturbanceTraining'].setValue(\n        data.communication.GroundDisturbanceTraining\n      );\n      this.communicationForm.controls['EGSOCSOTraining'].setValue(\n        data.communication.EGSOCSOTraining\n      );\n      this.communicationForm.controls['JobSpecificTraining'].setValue(\n        data.communication.JobSpecificTraining\n      );\n      this.communicationForm.controls['CommunicationComments'].setValue(\n        data.communication.CommunicationComments\n      );\n    }\n\n    if (data.personalEquipment) {\n      this.personalEquipmentForm.controls['PPEAvailable'].setValue(\n        data.personalEquipment.PPEAvailable\n      );\n      this.personalEquipmentForm.controls['HardHat'].setValue(\n        data.personalEquipment.HardHat\n      );\n      this.personalEquipmentForm.controls['SafetyGlasses'].setValue(\n        data.personalEquipment.SafetyGlasses\n      );\n      this.personalEquipmentForm.controls['Footwear'].setValue(\n        data.personalEquipment.Footwear\n      );\n      this.personalEquipmentForm.controls['ProtectiveClothing'].setValue(\n        data.personalEquipment.ProtectiveClothing\n      );\n      this.personalEquipmentForm.controls['HearingProtection'].setValue(\n        data.personalEquipment.HearingProtection\n      );\n      this.personalEquipmentForm.controls['RespiratoryProtection'].setValue(\n        data.personalEquipment.RespiratoryProtection\n      );\n      this.personalEquipmentForm.controls['PersonalGasMonitor'].setValue(\n        data.personalEquipment.PersonalGasMonitor\n      );\n      this.personalEquipmentForm.controls['CommunicationEquipment'].setValue(\n        data.personalEquipment.CommunicationEquipment\n      );\n      this.personalEquipmentForm.controls['OtherEquipment'].setValue(\n        data.personalEquipment.OtherEquipment\n      );\n      this.personalEquipmentForm.controls['PersonalEquipmentComments'].setValue(\n        data.personalEquipment.PersonalEquipmentComments\n      );\n    }\n\n    if (data.safetyEquipment) {\n      this.safetyEquipmentForm.controls['SafetyEquipmentAvailable'].setValue(\n        data.safetyEquipment.SafetyEquipmentAvailable\n      );\n      this.safetyEquipmentForm.controls['FireFightingEquipment'].setValue(\n        data.safetyEquipment.FireFightingEquipment\n      );\n      this.safetyEquipmentForm.controls['RotatingEquimentGuards'].setValue(\n        data.safetyEquipment.RotatingEquimentGuards\n      );\n      this.safetyEquipmentForm.controls['FirstAidKit'].setValue(\n        data.safetyEquipment.FirstAidKit\n      );\n      this.safetyEquipmentForm.controls['FallArrestEquipment'].setValue(\n        data.safetyEquipment.FallArrestEquipment\n      );\n      this.safetyEquipmentForm.controls['EmergencySystems'].setValue(\n        data.safetyEquipment.EmergencySystems\n      );\n      this.safetyEquipmentForm.controls['Other'].setValue(\n        data.safetyEquipment.Other\n      );\n      this.safetyEquipmentForm.controls['SafetyEquipmentComments'].setValue(\n        data.safetyEquipment.SafetyEquipmentComments\n      );\n    }\n\n    if (data.comments) {\n      this.store.dispatch(new SetComments(data.comments));\n    }\n\n    if (data.correctiveActions) {\n      this.store.dispatch(new SetCorrectiveActions(data.correctiveActions));\n    }\n  }\n\n  updateForm() {\n    const form = this.store.selectSnapshot(AuthState.selectedForm);\n\n    let header = this.headerForm.value;\n    header.Worker = this.autoCompleteService.workersControl.value;\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value;\n\n    let data = {\n      header: header,\n      hazard: this.hazardForm.value,\n      rules: this.rulesForm.value,\n      incident: this.incidentForm.value,\n      communication: this.communicationForm.value,\n      personalEquipment: this.personalEquipmentForm.value,\n      safetyEquipment: this.safetyEquipmentForm.value,\n      discrepancyComments: this.discrepancyForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(\n        CorrectiveActionState.correctiveActions\n      ),\n    };\n\n    this.formService.updateForm(form, this.formData, data).subscribe((_) => {\n      this.resetForm();\n    });\n\n  }\n\n  submitForm() {\n    const user = this.store.selectSnapshot(AuthState.user);\n    const form = this.store.selectSnapshot(AuthState.selectedForm);\n\n    let userCreated = {\n      email: user.email,\n      date_created: this.appService.now,\n    };\n\n    let header = this.headerForm.value;\n    header.Worker = this.autoCompleteService.workersControl.value;\n    header.Supervisor = this.autoCompleteService.supervisorsControl.value;\n\n    let data = {\n      header: header,\n      hazard: this.hazardForm.value,\n      rules: this.rulesForm.value,\n      incident: this.incidentForm.value,\n      communication: this.communicationForm.value,\n      personalEquipment: this.personalEquipmentForm.value,\n      safetyEquipment: this.safetyEquipmentForm.value,\n      discrepancyComments: this.discrepancyForm.value,\n      comments: this.store.selectSnapshot(CommentState.comments),\n      correctiveActions: this.store.selectSnapshot(\n        CorrectiveActionState.correctiveActions\n      ),\n    };\n\n    let obj = {\n      data: JSON.stringify(data),\n      user: userCreated,\n      form: form,\n      type: 'custom',\n      name: form['name'],\n      date: this.appService.now,\n      pics: this.store.selectSnapshot(DeviceState.pics),\n      location: data.header.Location,\n      correctiveActions: this.store.selectSnapshot(\n        CorrectiveActionState.correctiveActions\n      ),\n    };\n\n    let message = 'No discrepancies.';\n    if (data.comments.length > 0)\n      message = `Number of Discrepancies: ${data.comments.length}`;\n\n    if (!this.isOnline) {\n      let notificationObj = {\n        name: form['name'],\n        worker: this.appService.getWorker(header.Worker),\n        supervisor: this.appService.getSupervisor(header.Supervisor),\n        description: 'Spot Check Safety, ' + _moment().format('MMM D, h:mA'),\n        message:\n          'Spot Check Safety completed for ' +\n          this.headerForm.controls['CompanyName'].value +\n          ', ' +\n          this.headerForm.controls['Location'].value +\n          ' ' +\n          message,\n        subject:\n          'New Spot Check Safety from ' +\n          header.Worker +\n          ', ' +\n          this.appService.now,\n        form_id: form['form_id'],\n        data_id: this.formDataID,\n        pdf: 'spot-check-safety' + this.formDataID,\n      };\n\n      obj['notification'] = notificationObj;\n      this.idbCrudService.put('data', obj);\n    } else {\n      this.apiService.save(obj).subscribe((idObj) => {\n        this.formDataID = idObj;\n        const workers: any = this.store.selectSnapshot(AuthState.workers);\n        const supervisors: any = this.store.selectSnapshot(\n          AuthState.supervisors\n        );\n        \n        if (workers.length == 0 && supervisors.length == 0)\n          this.snackBar.open(\n            'Notifications not setup, please add workers and supervisors.',\n            'Attention',\n            {\n              duration: 3000,\n              verticalPosition: 'bottom',\n            }\n          );\n        else {\n          const worker: any = this.appService.getWorker(header.Worker);\n          const supervisor: any = this.appService.getSupervisor(\n            header.Supervisor\n          );\n\n          let notificationObj = {\n            name: form['name'],\n            worker: worker,\n            supervisor: supervisor,\n            description:\n              'Spot Check Safety, ' + _moment().format('MMM D, h:mA'),\n            message:\n              'Spot Check Safety completed for ' +\n              this.headerForm.controls['CompanyName'].value +\n              ', ' +\n              this.headerForm.controls['Location'].value + \n              ' ' +\n              message,\n            subject:\n              'New Spot Check Safety from ' +\n              header.Worker +\n              ', ' +\n              this.appService.now,\n            form_id: form['form_id'],\n            data_id: this.formDataID,\n            pdf: 'spot-check-safety' + this.formDataID,\n          };\n          this.appService.createNotification(notificationObj);\n          this.resetForm();\n        }\n      });\n    }\n  }\n\n  setNotificationObj(header, form) {\n    this.notificationObj = {\n      name: form[\"name\"],\n      worker: this.appService.getWorker(header.Worker),\n      supervisor: this.appService.getSupervisor(header.Supervisor),\n      description: 'Spot Check Safety, ' + _moment().format('MMM D, h:mA'),\n      message: 'Spot Check Safety completed for ' + this.headerForm.controls['CompanyName'].value + ', ' + this.headerForm.controls['Location'].value,\n      subject: 'New Spot Check Safety from ' + header.Worker + ', ' + this.appService.now,\n      form_id: form[\"form_id\"],\n      data_id: this.formDataID,\n      pdf: 'spot-check-safety' + this.formDataID\n    }\n  }\n\n  resetForm() {\n    this.headerForm.reset();\n    this.hazardForm.reset();\n    this.rulesForm.reset();\n    this.incidentForm.reset();\n    this.communicationForm.reset();\n    this.personalEquipmentForm.reset();\n    this.safetyEquipmentForm.reset();\n    this.store.dispatch(new SetPics([]));\n    this.autoCompleteService.workersControl.reset();\n    this.autoCompleteService.supervisorsControl.reset();\n  }\n}\n","<mat-accordion>\n  <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Worksite Safety Management Review\n      </mat-panel-title>\n      <mat-panel-description fxLayout=\"end\">*</mat-panel-description>\n    </mat-expansion-panel-header>\n    <app-spot-check-safety-header [headerForm]=headerForm></app-spot-check-safety-header>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <button mat-stroked-button color=\"primary\" [disabled]=\"!headerForm.valid\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Hazard Identification & Control\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-hazard-identification-control [hazardForm]=hazardForm></app-hazard-identification-control>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Rules & Work Procedures\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-rules-work-procedures [rulesForm]=rulesForm></app-rules-work-procedures>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 3\" (opened)=\"setStep(3)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Incident Reporting\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-incident-reporting [incidentForm]=incidentForm></app-incident-reporting>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 4\" (opened)=\"setStep(4)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Communication & Training\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-communication-training [communicationForm]=communicationForm></app-communication-training>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 5\" (opened)=\"setStep(5)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Personal Protective Equipment\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-personal-protective-equipment [personalEquipmentForm]=personalEquipmentForm>\n    </app-personal-protective-equipment>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 6\" (opened)=\"setStep(6)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Safety Equipment\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-safety-equipment [safetyEquipmentForm]=safetyEquipmentForm></app-safety-equipment>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n\n  <mat-expansion-panel [expanded]=\"step === 7\" (opened)=\"setStep(7)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Discrepancies\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-discrepancy [step]='step'></app-discrepancy>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 8\" (opened)=\"setStep(8)\">\n    <mat-expansion-panel-header class=\"right-aligned-header\">\n      <mat-panel-title class=\"text-color\">\n        Comments\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <app-discrepancy [step]='step'></app-discrepancy>\n    <br>\n    <div class=\"action-btn\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n      <button mat-stroked-button color=\"accent\" (click)=\"prevStep()\">Previous</button>\n      <button mat-stroked-button color=\"primary\" (click)=\"nextStep()\">Next</button>\n    </div>\n  </mat-expansion-panel>\n  <mat-expansion-panel [expanded]=\"step === 9\" (opened)=\"setStep(9)\">\n    <mat-expansion-panel-header>\n      <mat-panel-title class=\"text-color\">\n        Signature\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <br>\n    <div *ngIf=\"kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon class=\"icon-169px text-color\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"!isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"!headerForm.valid\" class=\"icon-169px text-color\">fingerprint</mat-icon>\n      <mat-icon *ngIf=\"headerForm.valid\" class=\"icon-169px-action hand\" (click)=\"submitForm()\">fingerprint</mat-icon>\n    </div>\n    <div *ngIf=\"isEdit && !kioske\" class=\"action-btn\" fxLayoutAlign=\"center center\">\n      <mat-icon *ngIf=\"headerForm.valid\" class=\"icon-169px-action hand\" (click)=\"updateForm()\">fingerprint</mat-icon>\n    </div>\n  </mat-expansion-panel>\n</mat-accordion>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'splitCamelCase'\n})\nexport class SplitCamelCasePipe implements PipeTransform {\n\n  transform(value: string): string {\n    if (value !== null)\n      return value.split(/(?=[A-Z])/).join(' ')\n  }\n\n}\n","<div class=\"form-padding\">\n  <mat-card class=\"custom hand\" (click)=selectForm($event)>\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"form-icon material-icons-outlined\">dynamic_form</mat-icon>\n      </div>\n      <mat-card-title>All Forms</mat-card-title>\n      <mat-card-subtitle>\n        <div>{{(forms$ | async)?.length}} Submitted</div>\n        <div>{{(forms$ | async)?.length}} Completed</div>\n      </mat-card-subtitle>\n      <div fxFlex></div>\n      <div>\n        <mat-card-subtitle>\n          <div class=\"biglabel\">Discrepancies</div>\n          <div>15 Total</div>\n          <div>10 Open</div>\n          <div>5 Resolved</div>\n        </mat-card-subtitle>\n      </div>\n    </mat-card-header>\n  </mat-card>\n  <div *ngFor=\"let formObj of (forms$ | async)\">\n    <mat-card class=\"custom hand\" (click)=selectForm(formObj)>\n      <mat-card-header>\n        <div mat-card-avatar>\n          <mat-icon class=\"form-icon material-icons-outlined\">{{ formObj.icon }}</mat-icon>\n        </div>\n        <mat-card-title>{{ formObj.name }}</mat-card-title>\n        <mat-card-subtitle>\n          <div>{{(forms$ | async)?.length}} Submitted</div>\n          <div>{{(forms$ | async)?.length}} Completed</div>\n        </mat-card-subtitle>\n        <div fxFlex></div>\n        <div>\n          <mat-card-subtitle>\n            <div class=\"biglabel\">Discrepancies</div>\n            <div>15 Total</div>\n            <div>10 Open</div>\n            <div>5 Resolved</div>\n          </mat-card-subtitle>\n        </div>\n      </mat-card-header>\n    </mat-card>\n  </div>\n</div> \n","import { Component, Output, EventEmitter  } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { AuthState } from '../../../state/auth/auth.state'\nimport { SetSelectedForm } from '../../../state/auth/auth-state.actions'\n\n@Component({\n  selector: 'app-data-forms',\n  templateUrl: './data-forms.component.html',\n  styleUrls: ['./data-forms.component.scss']\n})\nexport class DataFormsComponent {\n\n  @Select(AuthState.forms) forms$: Observable<any[]>\n\n  @Output() selectData = new EventEmitter<any>()\n\n  constructor(private store: Store) { }\n\n  selectForm(formObj) {\n    this.store.dispatch(new SetSelectedForm(formObj))\n    this.selectData.emit()\n  }\n\n}\n","import { Injectable } from '@angular/core'\nimport { State, Selector, StateContext, Action } from '@ngxs/store'\n\nimport * as SpotCheckSafetyActions from './spot-check-safety.actions'\nimport { SpotCheckSafetyModel } from './spot-check-safety.model'\n\n@Injectable()\n@State<SpotCheckSafetyModel>({\n  name: 'spotchecksafety',\n  defaults: {\n    isWorksiteSafetyHeaderValid: true\n  }\n})\n\nexport class SpotCheckSafetyState {\n\n  @Selector()\n  static isAppropriateTraining(state: SpotCheckSafetyModel): boolean {\n    return state.isAppropriateTraining\n  }\n\n  @Action(SpotCheckSafetyActions.SetIsAppropriateTraining)\n  onSetIsAppropriateTraining(ctx: StateContext<SpotCheckSafetyModel>, { isAppropriateTraining }: SpotCheckSafetyActions.SetIsAppropriateTraining) {\n    ctx.patchState({\n      isAppropriateTraining: isAppropriateTraining\n    });\n  }\n  \n}\n\n","import { Component } from '@angular/core';\n\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Store } from '@ngxs/store'\nimport { SetPage } from '../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../environments/environment'\n\nimport { SignupComponent } from \"../admin/signup/signup.component\"\nimport { ContactComponent } from \"../contact/contact.component\"\n// import { PaymentComponent } from \"../payment/payment.component\"\n// import { PaypalComponent } from \"../payment/paypal/paypal.component\"\n\n@Component({\n  selector: 'app-pricing',\n  templateUrl: './pricing.component.html',\n  styleUrls: ['./pricing.component.scss']\n})\nexport class PricingComponent {\n\n  githubUrl = environment.githubUrl\n\n  constructor(\n    private store: Store,\n    private bottomSheet: MatBottomSheet) { }\n\n  signup() {\n    this.bottomSheet.open(SignupComponent)\n  }\n\n  close() {\n    this.store.dispatch(new SetPage('kioske'))\n  }\n\n  contact() {\n    this.bottomSheet.open(ContactComponent)\n  }\n\n}\n","<div class=\"header\">\n  <mat-toolbar>\n    Pricing\n    <span class=\"toolbar-spacer\"></span>\n    <button mat-icon-button (click)=\"close()\">\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n</div>\n<div class=\"content\">\n  <div class=\"card__header\">\n    <h1 class=\"text-color\">Join our community</h1>\n    <h2 class=\"card__subtitle\">Simple, hassle-free pricing</h2>\n  </div>\n  <div class=\"card__body_pink\">\n    <h2 class=\"card__title card__title--dark\">Professional Subscription</h2>\n    <div class=\"card__text card__text--dark\">\n      <span class=\"card__text--price-amount\">$69</span>\n      <span class=\"card__text--price-desc\">&nbsp;per month</span>\n    </div>\n    <br>\n    <div fxFlexLayout=\"center\" fxLayoutGap=\"20px\">\n      <a (click)=\"contact()\" mat-flat-button color=\"primary\">\n        Contact Us!\n      </a>\n      <!-- <a (click)=\"signup()\" mat-flat-button color=\"primary\">\n        <mat-icon>rocket_launch</mat-icon>&nbsp;Signup Now!\n      </a> -->\n    </div>\n    \n    <div class=\"card__text card__text--dark\">\n      <ul>\n        <li>5000 Notifications</li>\n        <li>1000 Memorialized PDF Inspection Reports</li>\n        <li>Unlimited Role-based Users</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"card__body_yellow\">\n    <h2 class=\"card__title card__title--dark\">Free Subscription</h2>\n    <div class=\"card__text card__text--dark\">\n      <span class=\"card__text--price-amount\">$0</span>\n      <span class=\"card__text--price-desc\">&nbsp; per month</span>\n    </div>\n    <br>\n    <a (click)=\"contact()\" mat-flat-button color=\"primary\">\n      Contact Us!\n    </a>\n    <!-- <a (click)=\"signup()\" mat-flat-button color=\"primary\">\n      <mat-icon>rocket_launch</mat-icon>&nbsp;Signup Now!\n    </a> -->\n    <div class=\"card__text card__text--dark\">\n      <ul>\n        <li>1000 Notifications</li>\n        <li>100 Memorialized PDF Inspection Reports</li>\n        <li>Unlimited Role-based Users</li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"card__body_green\">\n    <h2 class=\"card__title card__title--dark\">Enterprise Subscription</h2>\n    <div class=\"card__text card__text--dark\">\n      <p class=\"card__text--price-desc\">starting at&nbsp;</p>\n    </div>\n    <div class=\"card__text card__text--dark\">\n      <span class=\"card__text--price-amount\">$139</span>\n      <span class=\"card__text--price-desc\">&nbsp;per month</span>\n    </div>\n    <br>\n    <a (click)=\"contact()\" mat-flat-button color=\"primary\">\n      Contact Us!\n    </a>\n    <div class=\"card__text card__text--dark\">\n      <ul>\n        <li>Unlimited Notifications</li>\n        <li>Unlimited Memorialized PDF Inspection Reports</li>\n        <li>Unlimited Role-based Users</li>\n        <li>Dedicated Server</li>\n        <li>Company Branding & Custom Domain</li>\n        <li>Third Party Integration</li>\n        <li>Developers License Available</li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"footer\">\n  <mat-toolbar>\n    <a class=\"green\" href=\"https://github.com/formloco/formloco/wiki\" target=\"blank\" mat-stroked-button>\n      Developers\n    </a>\n    <!-- <span class=\"toolbar-spacer\"></span>\n    <button (click)=\"contact()\" mat-stroked-button color=\"primary\">\n      contact\n    </button>\n    <a mat-button href='{{githubUrl}}' target=\"blank\" color=\"primary\">\n      github\n    </a> -->\n  </mat-toolbar>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-label',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.scss']\n})\nexport class LabelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>label works!</p>\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"communicationForm\">\n    <div class=\"text-color radio-center\">Not Applicable(N/A), Unsatisfactory(U), Satisfactory(S)</div>\n    <br>\n    <div class=\"text-color radio-center\">Have you received a safety orientation (When and what)</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyOrientation\">\n        <mat-radio-button\n          (click)=\"openComment('Have you received a safety orientation (When and what)','SafetyOrientation')\"\n          value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button\n          (click)=\"openDiscrepancy('Have you received a safety orientation (When and what)','SafetyOrientation', true)\"\n          value=\"unsatisfactory\">U</mat-radio-button>\n        <mat-radio-button value=\"na\">N/A</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Are safety meetings held within the (prescribed) frequency</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SafetyMeetingFrequency\">\n        <mat-radio-button value=\"satisfactory\">S</mat-radio-button>\n        <mat-radio-button\n          (click)=\"openDiscrepancy('Are safety meetings held within the (prescribed) frequency)','SafetyMeetingFrequency', true)\"\n          value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">Is the appropriate training in place?</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"AppropriateTraining\">\n        <mat-radio-button (click)=\"toggleAppropriateTraining('AppropriateTraining')\" value=\"satisfactory\">S\n        </mat-radio-button>\n        <mat-radio-button (click)=\"openDiscrepancy('Is the appropriate training in place','AppropriateTraining', true)\"\n          value=\"unsatisfactory\">U</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isAppropriateTraining$ | async)\">\n      <div class=\"text-color radio-center\">First aid training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"FirstAidTraining\">\n          <mat-radio-button (click)=\"toggle('FirstAidTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openDiscrepancy('First aid training','FirstAidTraining', true)\"\n            value=\"unsatisfactory\">No\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n\n      <div class=\"text-color radio-center\">H2S training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"H2STraining\">\n          <mat-radio-button (click)=\"toggle('H2STraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openDiscrepancy('H2S training','H2STraining', true)\" value=\"unsatisfactory\">No\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">WHMIS training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"WHMISTraining\">\n          <mat-radio-button (click)=\"toggle('WHMISTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openDiscrepancy('WHMIS training','WHMISTraining', true)\" value=\"unsatisfactory\">No\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">TDG training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"TDGTraining\">\n          <mat-radio-button (click)=\"toggle('TDGTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openDiscrepancy('TDG training','TDGTraining', true)\" value=\"unsatisfactory\">No\n          </mat-radio-button>\n          <mat-radio-button value=\"na\">N/A</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">Ground disturbance training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"GroundDisturbanceTraining\">\n          <mat-radio-button (click)=\"toggle('GroundDisturbanceTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openDiscrepancy('Ground disturbance training','GroundDisturbanceTraining', true)\"\n            value=\"unsatisfactory\">\n            No</mat-radio-button>\n          <mat-radio-button value=\"na\">N/A</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">eGSO/ CSO training</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"EGSOCSOTraining\">\n          <mat-radio-button (click)=\"toggle('EGSOCSOTraining')\" value=\"satisfactory\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openDiscrepancy('eGSO/ CSO training','EGSOCSOTraining', true)\"\n            value=\"unsatisfactory\">No\n          </mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">Job Specific training (List any that apply)</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"JobSpecificTraining\">\n          <mat-radio-button (click)=\"openComment('Job Specific training (List any that apply)','JobSpecificTraining')\"\n            value=\"satisfactory\">S</mat-radio-button>\n          <mat-radio-button (click)=\"toggle('JobSpecificTraining')\" value=\"unsatisfactory\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n    <div>\n      <div class=\"text-color\" fxLayoutAlign=\"space-between center\">\n        <div>\n          <mat-label>Communication & Training Comments</mat-label>\n        </div>\n        <div>\n          <button (click)=\"openVoice('CommunicationComments','Communication & Training Comments')\" mat-mini-fab\n            color=\"primary\">\n            <mat-icon matSuffix>mic_none</mat-icon>\n          </button>\n        </div>\n      </div>\n      <div>\n        <mat-form-field fxFlex>\n          <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\" cdkAutosizeMaxRows=\"10\" matInput\n            formControlName=\"CommunicationComments\" fxFlex></textarea>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\n\nimport { Observable } from 'rxjs';\nimport { Store, Select } from '@ngxs/store';\n\nimport { SpotCheckSafetyState } from '../state/spot-check-safety.state';\nimport {\n  SetIsAppropriateTraining,\n  SetIsSafetyEquipment,\n} from '../state/spot-check-safety.actions';\n\nimport { CommentComponent } from '../../../comment/comment.component';\nimport { CommentState } from '../../../comment/state/comment.state';\nimport { SetTypeFilter } from '../../../comment/state/comment.actions';\n\nimport { AppService } from '../../../../service/app.service';\nimport { CommentService } from '../../../comment/service/comment.service';\n\n@Component({\n  selector: 'app-communication-training',\n  templateUrl: './communication-training.component.html',\n  styleUrls: ['./communication-training.component.scss'],\n})\nexport class CommunicationTrainingComponent implements OnInit {\n  @Select(SpotCheckSafetyState.isAppropriateTraining)\n  isAppropriateTraining$: Observable<boolean>;\n\n  @Input() communicationForm;\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    public appService: AppService,\n    public commentService: CommentService\n  ) {}\n\n  ngOnInit() {\n    this.store.dispatch(new SetIsAppropriateTraining(true));\n    // this.communicationForm.controls['AppropriateTraining'].patchValue(\n    //   'satisfactory'\n    // );\n  }\n\n  openVoice(formField, title) {\n    this.appService.popVoiceDialog(this.communicationForm, formField, title);\n  }\n\n  toggleAppropriateTraining(field) {\n    this.store.dispatch(new SetIsAppropriateTraining(true));\n    const comments: any = this.store.selectSnapshot(CommentState.comments);\n    const index = comments.findIndex((item) => item.field === field);\n    if (index != -1)\n      this.commentService.bottomSheetComment(field, this.communicationForm);\n  }\n\n  toggle(field) {\n    // this.store.dispatch(new SetIsAppropriateTraining(false))\n    this.commentService.bottomSheetComment(field, this.communicationForm);\n  }\n\n  openComment(label, field) {\n    if (field == 'AppropriateTraining')\n      this.store.dispatch(new SetIsAppropriateTraining(false));\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {\n      label: 'Communication & Training',\n      field: field,\n      type: 'isSpotCheckSafety',\n    };\n    this.dialog.open(CommentComponent, dialogConfig);\n  }\n\n  openDiscrepancy(label, field, discrepancy) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = '100%';\n    dialogConfig.data = {\n      title: 'Communication & Training',\n      label,\n      field,\n      type: 'isSpotCheckSafety',\n      discrepancy,\n    };\n    this.dialog.open(CommentComponent, dialogConfig);\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { LayoutComponent } from './component/layout/layout.component'\nimport { LayoutComponent as message } from './component/layout/layout.component'\nimport { TermsComponent } from './component/terms/terms.component'\nimport { SendPasswordComponent } from './component/admin/send-password/send-password.component'\nimport { ResetPasswordComponent } from './component/admin/reset-password/reset-password.component'\n\nconst routes: Routes = [{\n  path: '',\n  redirectTo: '/', \n  pathMatch: 'full'\n}, {\n  path: '',\n  component: LayoutComponent\n},\n{\n  path: 'email',\n  component: SendPasswordComponent\n},\n{\n  path: 'O451fd2702f54a00b1007f6e80b32e45',\n  component: ResetPasswordComponent\n},\n{\n  path: 'terms',\n  component: TermsComponent\n},\n{\n  path: 'forms/:email/:tenant_id',\n  component: LayoutComponent\n},\n{\n  path: 'signup/:msg',\n  component: LayoutComponent\n},\n{\n  path: 'message',\n  component: message\n}]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit, Input } from '@angular/core'\n\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\"\n\nimport { IdbCrudService } from \"../../../service-idb/idb-crud.service\"\nimport { MatSnackBar } from '@angular/material/snack-bar'\n\nimport { environment } from '../../../../environments/environment'\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  prefs\n  pin = environment.pin\n\n  settingsForm: FormGroup\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private formBuilder: FormBuilder,\n    private idbCrudService: IdbCrudService) { \n    this.settingsForm = this.formBuilder.group({\n      name: [''],\n      pin: ['']\n    })\n  }\n\n  ngOnInit(): void {\n    this.idbCrudService.readAll('prefs').subscribe(prefs => {\n      this.prefs = prefs[0]\n      this.settingsForm.patchValue({name: this.prefs.user.name })\n      if (this.prefs.pin === undefined) \n        this.settingsForm.patchValue({pin: this.pin })\n      else\n        this.settingsForm.patchValue({pin: this.prefs.pin })\n    })\n  }\n\n  save() {\n    let obj = Object.assign(this.settingsForm.value)\n    this.prefs.user.name = obj.name\n    this.prefs.pin = obj.pin\n    this.idbCrudService.put('prefs', this.prefs)\n\n    this.snackBar.open(\"Settings Saved!\", '', {\n      duration: 3000,\n      verticalPosition: 'bottom'\n    })\n  }\n\n}\n","<div class=\"container-padding\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <form [formGroup]=\"settingsForm\" fxFlex>\n    <div fxLayout=\"column\">\n      <mat-form-field  fxFlex>\n        <mat-label>Name</mat-label>\n        <input matInput placeholder=\"Name\" formControlName=\"name\" type=\"text\" >\n      </mat-form-field>\n      <mat-form-field  fxFlex>\n        <mat-label>PIN</mat-label>\n        <input matInput placeholder=\"PIN\" formControlName=\"pin\" type=\"text\">\n      </mat-form-field>\n      <br>\n      <button color=\"primary\" (click)=\"save()\" mat-flat-button fxFlex>Save</button>\n    </div>\n  </form>\n</div>","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"groundForm\">\n    <div class=\"text-color radio-center\">{{label.DoesTheProjectInvolveGroundDisturbance}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DoesTheProjectInvolveGroundDisturbance\">\n        <mat-radio-button (click)=\"toggle(true)\" value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"toggle(false); clearFields()\" value='no'>No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <span *ngIf=\"(isGroundwork$ | async)\">\n      <div class=\"text-color radio-center\">{{label.GroundDisturbanceChecklistIsInPlace}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"GroundDisturbanceChecklistIsInPlace\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.GroundDisturbanceChecklistIsInPlace,'GroundDisturbanceChecklistIsInPlace')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.OneCallNotificationHasBeenRegistered}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"OneCallNotificationHasBeenRegistered\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.OneCallNotificationHasBeenRegistered,'OneCallNotificationHasBeenRegistered')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed}}\n      </div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed,'AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined,'ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.ThirdPartyLineLocatesCompletedWithinTheSearchArea}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"ThirdPartyLineLocatesCompletedWithinTheSearchArea\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.ThirdPartyLineLocatesCompletedWithinTheSearchArea,'ThirdPartyLineLocatesCompletedWithinTheSearchArea')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div class=\"text-color radio-center\">{{label.AllRequiredCrossingOrProximityAgreementsInPlace}}</div>\n      <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n        <mat-radio-group formControlName=\"AllRequiredCrossingOrProximityAgreementsInPlace\">\n          <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n          <mat-radio-button (click)=\"openComment(label.AllRequiredCrossingOrProximityAgreementsInPlace,'AllRequiredCrossingOrProximityAgreementsInPlace')\" value=\"no\">No</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </span>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { Observable } from 'rxjs'\nimport { Store, Select } from '@ngxs/store'\n\nimport { WorksiteSafetyInspectionState } from '../state/worksite-safety-inspection.state'\nimport { SetIsGroundwork } from '../state/worksite-safety-inspection-state.actions'\n\nimport { CommentComponent } from '../../../comment/comment.component'\nimport { SetTypeFilter } from '../../../comment/state/comment.actions'\n\nimport { GroundFormLabels } from '../state/worksite-safety-inspection-state.model'\n\n@Component({\n  selector: 'app-worksite-safety-ground',\n  templateUrl: './worksite-safety-ground.component.html',\n  styleUrls: ['./worksite-safety-ground.component.scss']\n})\nexport class WorksiteSafetyGroundComponent implements OnInit {\n\n  @Select(WorksiteSafetyInspectionState.isGroundwork) isGroundwork$: Observable<string>\n\n  @Input() groundForm\n\n  label = GroundFormLabels\n\n  constructor(\n    private store: Store,\n    private dialog: MatDialog,\n    private bottomSheet: MatBottomSheet) { }\n\n    ngOnInit() {\n      this.store.dispatch(new SetTypeFilter('isGroundwork'))\n    }\n    \n    toggle(toggle) {\n      this.store.dispatch(new SetIsGroundwork(toggle))\n    }\n    \n    clearFields() {\n      console.log(this.groundForm.controls)\n      this.groundForm.controls['DoesTheProjectInvolveGroundDisturbance'].patchValue('')\n      this.groundForm.controls['GroundDisturbanceChecklistIsInPlace'].patchValue('')\n      this.groundForm.controls['OneCallNotificationHasBeenRegistered'].patchValue('')\n      this.groundForm.controls['AllUndergroundLinesWithinFiveMetresOfTheWorkAreaManuallyExposed'].patchValue('')\n      this.groundForm.controls['ThirtyMetreSearchAreaAroundTheWorkAreaClearlyDefined'].patchValue('')\n      this.groundForm.controls['ThirdPartyLineLocatesCompletedWithinTheSearchArea'].patchValue('')\n      this.groundForm.controls['AllRequiredCrossingOrProximityAgreementsInPlace'].patchValue('')\n    }\n    \n    openComment(label, field) {\n      const dialogConfig = new MatDialogConfig()\n      dialogConfig.width = '100%'\n      dialogConfig.data = { title: 'Ground Disturbance', label: label, field: field, type: 'isGroundwork' }\n      this.dialog.open(CommentComponent, dialogConfig)\n    }\n\n}\n","<div class=\"header\">\n  <mat-toolbar>\n    <span fxLayoutAlign=\"center center\">\n      <mat-icon class=\"form-icon text-color\">{{ (selectedForm$ | async)?.icon }}</mat-icon>&nbsp;\n      <span class=\"text-color\">{{(selectedForm$ | async)?.name }}</span>\n    </span>\n    <span class=\"toolbar-spacer\"></span>\n    <button mat-icon-button (click)=\"close()\">\n      <mat-icon class=\"text-color\">close</mat-icon>\n    </button>\n  </mat-toolbar>\n</div>\n<div class=\"content\">\n  <div *ngIf=\"(selectedForm$ | async)?.type === 'custom'\">\n    <app-vehicle-inspection *ngIf=\"(selectedForm$ | async)?.id === 'vehicle-inspection'\"></app-vehicle-inspection>\n    <app-meaningful-site-tour *ngIf=\"(selectedForm$ | async)?.id === 'meaningful-site-tour'\"></app-meaningful-site-tour>\n    <app-worksite-safety-inspection *ngIf=\"(selectedForm$ | async)?.id === 'worksite-safety-inspection'\"></app-worksite-safety-inspection>\n    <app-spot-check-safety *ngIf=\"(selectedForm$ | async)?.id === 'spot-check-safety'\"></app-spot-check-safety>\n </div>\n  <div *ngIf=\"(selectedForm$ | async)?.type === 'dynamic'\">\n    <app-run [runForm]=runForm></app-run>\n  </div>\n</div>\n<div class=\"footer\">\n  <mat-toolbar>\n    <button mat-icon-button (click)=\"snapShot()\">\n      <mat-icon class=\"form-icon text-color hand\">photo_camera</mat-icon>\n    </button>\n    <button *ngIf=\"(childPage$ | async) == 'notification'\"  mat-icon-button (click)=\"openPdf()\">\n      <mat-icon class=\"form-icon text-color hand\">picture_as_pdf</mat-icon>\n    </button>\n    <span class=\"toolbar-spacer\"></span>\n    <button *ngIf=\"(pics$ | async).length > 0\" mat-icon-button (click)=\"showPhotos()\">\n      <mat-icon class=\"form-icon text-color hand\" matBadge=\"{{ (pics$ | async)?.length }}\" matBadgeColor=\"warn\">perm_media</mat-icon>\n    </button>\n  </mat-toolbar>\n</div>","import { Component } from '@angular/core'\n\nimport { Observable } from 'rxjs'\nimport { FormBuilder, FormGroup } from '@angular/forms'\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\nimport { MatBottomSheet } from '@angular/material/bottom-sheet'\n\nimport { PicsComponent } from '../pics/pics.component'\nimport { CameraComponent } from '../camera/camera.component'\n\nimport { Store, Select } from '@ngxs/store'\nimport { AuthState } from '../../state/auth/auth.state'\nimport { DeviceState } from '../../state/device/device.state'\nimport { NotificationState } from '../../state/notification/notification.state'\nimport { SetPage, SetChildPage, SetChildPageLabel } from '../../state/auth/auth-state.actions'\n\nimport { environment } from '../../../environments/environment'\nimport { ApiService } from \"../../service/api.service\"\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent {\n\n  @Select(DeviceState.pics) pics$: Observable<[]>\n  @Select(AuthState.selectedForm) selectedForm$: Observable<any>\n  @Select(AuthState.childPage) childPage$: Observable<any>\n\n  runForm: FormGroup\n\n  form\n  step = 0\n\n  constructor(\n    private store: Store,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private apiService: ApiService,\n    private bottomSheet: MatBottomSheet) {\n    this.runForm = this.fb.group({})\n  }\n\n  openPdf() {\n    const notification = this.store.selectSnapshot(NotificationState.notification)\n    this.apiService.getPDF(notification.pdf)\n  }\n\n  close() {\n    const page = this.store.selectSnapshot(AuthState.page)\n    const childPage = this.store.selectSnapshot(AuthState.childPage)\n\n    if (childPage === null) {\n      this.store.dispatch(new SetPage('home'))\n      this.store.dispatch(new SetChildPageLabel('Forms'))\n    }\n    else {\n      this.store.dispatch(new SetPage('admin'))\n      if (childPage == 'forms') {\n        this.store.dispatch(new SetChildPage('forms'))\n        this.store.dispatch(new SetChildPageLabel('Forms'))\n      }\n      if (childPage == 'sdk') {\n        this.store.dispatch(new SetChildPage('sdk'))\n        this.store.dispatch(new SetChildPageLabel('SDK'))\n      }\n    }\n    if (childPage == 'notification') {\n      const childPage = this.store.selectSnapshot(AuthState.childPage)\n      this.store.dispatch(new SetPage(childPage))\n      this.store.dispatch(new SetChildPageLabel('Notifications'))\n    }\n  }\n\n  snapShot() {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.height = '100%'\n    dialogConfig.width = '100%'\n    dialogConfig.maxWidth = '100vw',\n      dialogConfig.maxHeight = '100vh',\n      dialogConfig.data = this.store.selectSnapshot(AuthState.selectedForm)\n    this.dialog.open(CameraComponent, dialogConfig)\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++\n  }\n\n  prevStep() {\n    this.step--\n  }\n\n  showPhotos() {\n    this.bottomSheet.open(PicsComponent)\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core'\n\nimport { MatDialogConfig, MatDialog } from \"@angular/material/dialog\"\n\nimport { CommentComponent } from '../../../comment/comment.component'\n\nimport { HazardFormLabels } from '../state/worksite-safety-inspection-state.model'\n\n@Component({\n  selector: 'app-worksite-safety-hazard',\n  templateUrl: './worksite-safety-hazard.component.html',\n  styleUrls: ['./worksite-safety-hazard.component.scss']\n})\nexport class WorksiteSafetyHazardComponent implements OnInit {\n\n  @Input() hazardForm\n\n  label = HazardFormLabels\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {}\n\n  openComment(label, field) {\n    const dialogConfig = new MatDialogConfig()\n    dialogConfig.width = '100%'\n    dialogConfig.data = {title: 'Job Site Management', label: label, field: field, type: 'isWorksiteSafetyHazard'}\n    this.dialog.open(CommentComponent, dialogConfig)\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <form fxLayout=\"column\" [formGroup]=\"hazardForm\">\n    <div class=\"text-color radio-center\">{{label.SiteHazardAssessmentCompleted}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SiteHazardAssessmentCompleted\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SiteHazardAssessmentCompleted,'SiteHazardAssessmentCompleted')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.ScopeOfWorkClearlyDefined}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"ScopeOfWorkClearlyDefined\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.ScopeOfWorkClearlyDefined,'ScopeOfWorkClearlyDefined')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div> \n    <div class=\"text-color radio-center\">{{label.PotentialHazardsAndMitigationRequirementsIdentified}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"PotentialHazardsAndMitigationRequirementsIdentified\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.PotentialHazardsAndMitigationRequirementsIdentified,'PotentialHazardsAndMitigationRequirementsIdentified')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.SummitHealthAndSafetyManualAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"SummitHealthAndSafetyManualAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.SummitHealthAndSafetyManualAvailable,'SummitHealthAndSafetyManualAvailable')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.OccupationalHealthAndSafetyLegislationAvailable}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"OccupationalHealthAndSafetyLegislationAvailable\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.OccupationalHealthAndSafetyLegislationAvailable,'OccupationalHealthAndSafetyLegislationAvailable')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.DailySafetyMeetingsConductedDocumented}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"DailySafetyMeetingsConductedDocumented\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.DailySafetyMeetingsConductedDocumented,'DailySafetyMeetingsConductedDocumented')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.AllSitePersonalTrainingAndSafetyTickets}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"AllSitePersonalTrainingAndSafetyTickets\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.AllSitePersonalTrainingAndSafetyTickets,'AllSitePersonalTrainingAndSafetyTickets')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"text-color radio-center\">{{label.AllSitePersonnelSiteSpecificWearingPPE}}</div>\n    <div class=\"text-color radio-margin\" fxLayoutAlign=\"center center\">\n      <mat-radio-group formControlName=\"AllSitePersonnelSiteSpecificWearingPPE\">\n        <mat-radio-button value=\"yes\">Yes</mat-radio-button>\n        <mat-radio-button (click)=\"openComment(label.AllSitePersonnelSiteSpecificWearingPPE,'AllSitePersonnelSiteSpecificWearingPPE')\" value=\"no\">No</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { BarcodeFormat } from '@zxing/library';\n\nimport { AppService } from \"../../../service/app.service\";\n\n@Component({\n  selector: 'app-scanner-barcode-run',\n  templateUrl: './scanner-barcode-run.component.html',\n  styleUrls: ['./scanner-barcode-run.component.scss']\n})\nexport class ScannerBarcodeRunComponent implements OnInit {\n\n  @Input() index;\n  @Input() runForm;\n\n  availableDevices: MediaDeviceInfo[];\n  deviceCurrent: MediaDeviceInfo;\n  deviceSelected: string;\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.QR_CODE,\n  ];\n\n  hasDevices: boolean;\n  hasPermission: boolean;\n\n  qrResultString: string;\n\n  torchEnabled = false;\n  torchAvailable$ = new BehaviorSubject<boolean>(false);\n  tryHarder = false;\n\n  isEnabled = true;\n\n  constructor(public appService: AppService) { }\n\n  ngOnInit(): void {\n    this.runForm.addControl(this.appService.detailArray[this.index].formControlName, new FormControl(''));\n  }\n\n  scan() {\n    this.isEnabled = true;\n  }\n\n  stop() {\n    this.isEnabled = false;\n  }\n\n  onTorchCompatible(isCompatible: boolean): void {\n    this.torchAvailable$.next(isCompatible || false);\n  }\n\n  onHasPermission(has: boolean) {\n    this.hasPermission = has;\n  }\n\n  onCodeResult(resultString: string) {\n    this.qrResultString = resultString;\n    this.isEnabled = false;\n    this.runForm.patchValue({'BarCodeScanner0': this.qrResultString})\n  }\n\n  onCamerasFound(devices: MediaDeviceInfo[]): void {\n    this.availableDevices = devices;\n    this.hasDevices = Boolean(devices && devices.length);\n  }\n  \n}\n","<div *ngIf=\"isEnabled\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <zxing-scanner [enable]=isEnabled [torch]=\"torchEnabled\" [device]=\"deviceCurrent\" (scanSuccess)=\"onCodeResult($event)\" [formats]=\"formatsEnabled\"\n    [tryHarder]=\"tryHarder\" (permissionResponse)=\"onHasPermission($event)\" (camerasFound)=\"onCamerasFound($event)\" (torchCompatible)=\"onTorchCompatible($event)\"></zxing-scanner>\n</div>\n<div class=\"control-padding\">\n  <button *ngIf=\"isEnabled\" mat-raised-button (click)=\"stop()\" color=\"primary\" fxFlex>\n    Stop Barcode Scan\n  </button>\n  <!-- <button *ngIf=\"!isEnabled\" mat-raised-button (click)=\"scan()\" color=\"primary\" fxFlex>\n    Start Barcode Scan\n  </button> -->\n</div>\n\n<div *ngIf=\"!isEnabled\" [formGroup]=\"runForm\" class=\"control-padding\">\n  <mat-form-field appearance=\"{{appService.detailArray[index].appearance}}\" fxFlex>\n    <mat-label>{{appService.detailArray[index].label}}</mat-label>\n    <input matInput type=\"text\" formControlName=\"{{appService.detailArray[index].formControlName}}\">\n  </mat-form-field>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-meaningful-site-tour-suggestions',\n  templateUrl: './meaningful-site-tour-suggestions.component.html',\n  styleUrls: ['./meaningful-site-tour-suggestions.component.scss']\n})\nexport class MeaningfulSiteTourSuggestionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-color\"><b>A FEW SUGGESTIONS FOR A SUCCESSFUL SITE TOUR:</b></div>\n<div class=\"text-color\">\n  <ul>\n    <li>Identify a point of contact person before the tour</li>\n    <li>Double check any additional safety training requirements. (i.e. H₂S, Standard First Aid)</li>\n    <li>Plan for a minimum of two hours</li>\n    <li>Carry the latest safety communication, monthly reports, etc.</li>\n    <li>Plan for more listening than talking</li>\n    <li>Ensure you have the correct PPE</li>\n    <li>Be aware of Summit's current safety performance</li>\n    <li>Try to attend a key event (morning tailgate, shift handover, etc.)</li>\n    <li>Ensure you provide feedback and follow-up</li>\n    <li>Carry some “spot recognition” items</li>\n  </ul>\n</div>","export interface AppWindow extends Window {\n  // tslint:disable-next-line:no-any\n  webkitSpeechRecognition: any;\n}\n\nexport interface SpeechNotification<T> {\n    event?: SpeechEvent;\n    error?: SpeechError;\n    content?: T;\n}\n\nexport enum SpeechError {\n  NoSpeech = 'no-speech',\n  AudioCapture = 'audio-capture',\n  NotAllowed = 'not-allowed',\n  Unknown = 'unknown'\n}\n\nexport enum SpeechEvent {\n  Start,\n  End,\n  FinalContent,\n  InterimContent\n}","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nimport { defineCustomElements } from '@ionic/pwa-elements/loader'\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n  defineCustomElements(window)","import { Component, OnInit } from '@angular/core';\n\nimport { NgxQrcodeElementTypes, NgxQrcodeErrorCorrectionLevels } from '@techiediaries/ngx-qrcode';\n\nimport * as _moment from 'moment';\n\n@Component({\n  selector: 'app-qrcode-run',\n  templateUrl: './qrcode-run.component.html',\n  styleUrls: ['./qrcode-run.component.scss']\n})\nexport class QrcodeRunComponent implements OnInit {\n\n  begin = \"\";\n  end = \"\";\n  event = \"\";\n\n  elementType = NgxQrcodeElementTypes.URL;\n  correctionLevel = NgxQrcodeErrorCorrectionLevels.HIGH;\n  value\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    this.value = 'after the fact';\n    this.begin = _moment().format('YYYYMMDD[T]HHmmss');\n    this.end = _moment().format('YYYYMMDD[T]HHmmss');\n    // this.generateCodeData();\n  }\n\n  generateCodeData(): void {\n    // this.event = QrCodeHelper.makeEvent('dffd',this.begin, this.end);\n    // let yy = QrCodeHelper.makeSMS('sddsd', 'ssddsds');\n  }\n\n}\n","<div class=\"setting-padding\" fxLayout=\"row\">\n  <ngx-qrcode [elementType]=\"elementType\" [errorCorrectionLevel]=\"correctionLevel\" [value]=\"value\">\n  </ngx-qrcode>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}